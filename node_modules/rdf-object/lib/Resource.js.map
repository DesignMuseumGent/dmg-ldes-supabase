{"version":3,"file":"Resource.js","sourceRoot":"","sources":["Resource.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { JsonLdContextNormalized } from 'jsonld-context-parser';\nimport { DataFactory } from 'rdf-data-factory';\nimport { stringToTerm, termToString } from 'rdf-string';\nimport { RdfListMaterializer } from './RdfListMaterializer';\nimport { ShortcutPropertyHandler } from './ShortcutPropertyHandler';\nimport { SingularPropertyHandler } from './SingularPropertyHandler';\n\n/**\n * A resource is identified by a URI and has property links to other resources.\n */\nexport class Resource {\n  private readonly context: JsonLdContextNormalized;\n\n  public readonly term: RDF.Term;\n  public readonly predicates: Resource[];\n  public readonly propertiesUri: Record<string, Resource[]>;\n  public readonly properties: Record<string, Resource[]>;\n  public readonly property: Record<string, Resource>;\n  public list: Resource[] | undefined;\n\n  public constructor(args: IResourceArgs) {\n    this.context = args.context || new JsonLdContextNormalized({});\n    this.term = args.term;\n\n    this.predicates = [];\n    this.propertiesUri = {};\n    this.properties = new Proxy(this.propertiesUri, new ShortcutPropertyHandler(this.context));\n    this.property = <any> new Proxy(this.properties, new SingularPropertyHandler());\n  }\n\n  /**\n   * Get the term type of this resource.\n   * @return {\"NamedNode\" | \"BlankNode\" | \"Literal\" | \"Variable\" | \"DefaultGraph\"}\n   */\n  public get type(): string {\n    return this.term.termType;\n  }\n\n  /**\n   * @return {string} The URI, blank node label, literal value or variable name of this resource.\n   */\n  public get value(): string {\n    return this.term.value;\n  }\n\n  /**\n   * Check if this resource is of the given type.\n   *\n   * This will be true if at least one of the following conditions is true.\n   * 1. This resource equals `type`.\n   * 2. This resource has the rdf:type `type`.\n   * 3. This resource is a subclass of `type`.\n   * 4. This resource is a subtype or subclass of a resource that is of the given type.\n   *\n   * @param {RDF.Term | string} type An RDF term or a compacted term string.\n   * @return {boolean} If this resource is of the given type.\n   */\n  public isA(type: RDF.Term | string): boolean {\n    // Consider strings compacted terms\n    if (typeof type === 'string') {\n      const typeExpanded = this.context.expandTerm(type, true);\n      if (!typeExpanded) {\n        return false;\n      }\n      type = stringToTerm(typeExpanded);\n    }\n\n    if (type.equals(this.term)) {\n      return true;\n    }\n    return [\n      ...this.propertiesUri['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] || [],\n      ...this.propertiesUri['http://www.w3.org/2000/01/rdf-schema#subClassOf'] || [],\n    ].reduce((acc: boolean, superType: Resource) => acc || superType.isA(type), false);\n  }\n\n  /**\n   * Add a property to the given resource.\n   * @param {Resource} predicate Predicate resource of the property link.\n   * @param {Resource} object Object resource of the property link.\n   */\n  public addProperty(predicate: Resource, object: Resource): void {\n    const propertyUri: string = termToString(predicate.term);\n    let properties: Resource[] = this.propertiesUri[propertyUri];\n    if (!properties) {\n      this.propertiesUri[propertyUri] = properties = [];\n    }\n    properties.push(object);\n    this.predicates.push(predicate);\n  }\n\n  /**\n   * @return {string} The string representation of a Resource\n   */\n  public toString(): string {\n    return this.value;\n  }\n\n  /**\n   * Create a convenient JSON representation of a Resource.\n   */\n  public toJSON(maxDepth = -1): any {\n    if (Object.keys(this.properties).length === 0 && !this.list) {\n      return termToString(this.term);\n    }\n    return {\n      '@id': termToString(this.term),\n      ...maxDepth !== 0 && Object.keys(this.properties).length > 0 ?\n        {\n          properties: Object.keys(this.properties).reduce((acc: any, key) => {\n            acc[key] = this.properties[key].map(resource => resource.toJSON(maxDepth - 1));\n            return acc;\n          }, {}),\n        } :\n        {},\n      ...maxDepth !== 0 && this.list ? { list: this.list.map(resource => resource.toJSON(maxDepth - 1)) } : {},\n    };\n  }\n\n  /**\n   * Convert this resource into an array of RDF quads.\n   */\n  public toQuads(\n    quads: RDF.BaseQuad[] = [],\n    dataFactory: RDF.DataFactory<RDF.BaseQuad> = new DataFactory(),\n    excludeResources: Record<string, boolean> = {},\n  ): RDF.BaseQuad[] {\n    // Circumvent infinite recursion by checking and maintaining emittedResources\n    const resourceId = termToString(this.term);\n    if (excludeResources[resourceId]) {\n      return [];\n    }\n    excludeResources[resourceId] = true;\n\n    // Handle predicates\n    for (const [ property, resources ] of Object.entries(this.propertiesUri)) {\n      const subject = this.term;\n      const predicate = dataFactory.namedNode(property);\n      for (const resource of resources) {\n        const object = resource.list && resource.list.length === 0 ? RdfListMaterializer.RDF_NIL : resource.term;\n        quads.push(dataFactory.quad(subject, predicate, object));\n        resource.toQuads(quads, dataFactory, excludeResources);\n      }\n    }\n\n    // Handle RDF lists\n    if (this.list) {\n      let chain = this.term;\n      let chainPrev;\n      for (const element of this.list) {\n        if (chainPrev) {\n          quads.push(dataFactory.quad(chainPrev, RdfListMaterializer.RDF_REST, chain));\n        }\n        quads.push(dataFactory.quad(chain, RdfListMaterializer.RDF_FIRST, element.term));\n        element.toQuads(quads, dataFactory, excludeResources);\n        chainPrev = chain;\n        chain = dataFactory.blankNode();\n      }\n      if (chainPrev) {\n        quads.push(dataFactory.quad(chainPrev, RdfListMaterializer.RDF_REST, RdfListMaterializer.RDF_NIL));\n      }\n    }\n\n    return quads;\n  }\n}\n\nexport interface IResourceArgs {\n  term: RDF.Term;\n  context?: JsonLdContextNormalized;\n}\n"]}