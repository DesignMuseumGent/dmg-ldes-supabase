"use strict";
/* This file was automatically generated. Do not edit by hand. */
Object.defineProperty(exports, "__esModule", { value: true });
const { dcterms, rdf, owl, ssn, vann, ns6, skos, sosa, rdfs, xsd, ns11, ns12, ns13, foaf } = {
    'dcterms': 'http://purl.org/dc/terms/',
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'ssn': 'http://www.w3.org/ns/ssn/',
    'vann': 'http://purl.org/vocab/vann/',
    'ns6': 'http://purl.org/vocommons/voaf#',
    'skos': 'http://www.w3.org/2004/02/skos/core#',
    'sosa': 'http://www.w3.org/ns/sosa/',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'xsd': 'http://www.w3.org/2001/XMLSchema#',
    'ns11': 'http://www.opengeospatial.org/ogc/',
    'ns12': 'http://www.w3.org/Consortium/Legal/2015/',
    'ns13': 'https://www.w3.org/2015/spatial/wiki/',
    'foaf': 'http://xmlns.com/foaf/0.1/'
};
exports.default = ({ blankNode, literal, namedNode, quad }) => {
    const blankNodes = [];
    for (let i = 0; i < 91; i++) {
        blankNodes.push(blankNode());
    }
    return [
        quad(namedNode(`${dcterms}created`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${dcterms}creator`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${dcterms}description`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${dcterms}license`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${dcterms}rights`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${dcterms}title`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${vann}preferredNamespacePrefix`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${vann}preferredNamespaceUri`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${ns6}Vocabulary`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${skos}definition`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${skos}example`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(namedNode(`${sosa}ActuatableProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}ActuatableProperty`), namedNode(`${rdfs}subClassOf`), namedNode(`${ssn}Property`), namedNode(ssn)),
        quad(namedNode(`${sosa}ActuatableProperty`), namedNode(`${rdfs}subClassOf`), blankNodes[0], namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${skos}definition`), literal(`A quality of an entity. An aspect of an entity that is intrinsic to and cannot exist without the entity.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${rdfs}subClassOf`), blankNodes[1], namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${rdfs}comment`), literal(`A quality of an entity. An aspect of an entity that is intrinsic to and cannot exist without the entity.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Property`), namedNode(`${rdfs}label`), literal(`Property`, 'en'), namedNode(ssn)),
        quad(blankNodes[0], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[0], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Actuation`), namedNode(ssn)),
        quad(blankNodes[0], namedNode(`${owl}onProperty`), namedNode(`${sosa}isActedOnBy`), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[2], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[3], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[4], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[5], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[6], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[7], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[8], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[9], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[10], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuation`), namedNode(`${rdfs}subClassOf`), blankNodes[11], namedNode(ssn)),
        quad(blankNodes[2], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[2], namedNode(`${owl}onProperty`), namedNode(`${sosa}actsOnProperty`), namedNode(ssn)),
        quad(blankNodes[2], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[3], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[3], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Result`), namedNode(ssn)),
        quad(blankNodes[3], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[4], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[4], namedNode(`${owl}onProperty`), namedNode(`${sosa}resultTime`), namedNode(ssn)),
        quad(blankNodes[4], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[5], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[5], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeByActuator`), namedNode(ssn)),
        quad(blankNodes[5], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[6], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[6], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[6], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[7], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[7], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Actuator`), namedNode(ssn)),
        quad(blankNodes[7], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeByActuator`), namedNode(ssn)),
        quad(blankNodes[8], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[8], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}ActuatableProperty`), namedNode(ssn)),
        quad(blankNodes[8], namedNode(`${owl}onProperty`), namedNode(`${sosa}actsOnProperty`), namedNode(ssn)),
        quad(blankNodes[9], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[9], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[9], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[10], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[10], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[10], namedNode(`${owl}onProperty`), namedNode(`${sosa}usedProcedure`), namedNode(ssn)),
        quad(blankNodes[11], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[11], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[11], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuator`), namedNode(`${rdfs}subClassOf`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(namedNode(`${sosa}Actuator`), namedNode(`${rdfs}subClassOf`), blankNodes[12], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuator`), namedNode(`${rdfs}subClassOf`), blankNodes[13], namedNode(ssn)),
        quad(namedNode(`${sosa}Actuator`), namedNode(`${rdfs}subClassOf`), blankNodes[14], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${skos}definition`), literal(`System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}subClassOf`), blankNodes[15], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}subClassOf`), blankNodes[16], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}subClassOf`), blankNodes[17], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}subClassOf`), blankNodes[18], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}subClassOf`), blankNodes[19], namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}comment`), literal(`System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}System`), namedNode(`${rdfs}label`), literal(`System`, 'en'), namedNode(ssn)),
        quad(blankNodes[12], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[12], namedNode(`${owl}onProperty`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[12], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[13], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[13], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}ActuatableProperty`), namedNode(ssn)),
        quad(blankNodes[13], namedNode(`${owl}onProperty`), namedNode(`${ssn}forProperty`), namedNode(ssn)),
        quad(blankNodes[14], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[14], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Actuation`), namedNode(ssn)),
        quad(blankNodes[14], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeActuation`), namedNode(ssn)),
        quad(namedNode(`${sosa}FeatureOfInterest`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}FeatureOfInterest`), namedNode(`${rdfs}subClassOf`), blankNodes[20], namedNode(ssn)),
        quad(namedNode(`${sosa}FeatureOfInterest`), namedNode(`${rdfs}subClassOf`), blankNodes[21], namedNode(ssn)),
        quad(namedNode(`${sosa}FeatureOfInterest`), namedNode(`${rdfs}subClassOf`), blankNodes[22], namedNode(ssn)),
        quad(blankNodes[20], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[20], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sample`), namedNode(ssn)),
        quad(blankNodes[20], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasSample`), namedNode(ssn)),
        quad(blankNodes[21], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[21], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasProperty`), namedNode(ssn)),
        quad(blankNodes[21], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[22], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[22], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Property`), namedNode(ssn)),
        quad(blankNodes[22], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasProperty`), namedNode(ssn)),
        quad(namedNode(`${sosa}ObservableProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}ObservableProperty`), namedNode(`${rdfs}subClassOf`), namedNode(`${ssn}Property`), namedNode(ssn)),
        quad(namedNode(`${sosa}ObservableProperty`), namedNode(`${rdfs}subClassOf`), blankNodes[23], namedNode(ssn)),
        quad(namedNode(`${sosa}ObservableProperty`), namedNode(`${rdfs}subClassOf`), blankNodes[24], namedNode(ssn)),
        quad(namedNode(`${sosa}ObservableProperty`), namedNode(`${rdfs}subClassOf`), blankNodes[25], namedNode(ssn)),
        quad(blankNodes[23], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[23], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sensor`), namedNode(ssn)),
        quad(blankNodes[23], namedNode(`${owl}onProperty`), namedNode(`${sosa}isObservedBy`), namedNode(ssn)),
        quad(blankNodes[24], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[24], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Observation`), namedNode(ssn)),
        quad(blankNodes[24], namedNode(`${owl}onProperty`), blankNodes[26], namedNode(ssn)),
        quad(blankNodes[25], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[25], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Stimulus`), namedNode(ssn)),
        quad(blankNodes[25], namedNode(`${owl}onProperty`), blankNodes[27], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[28], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[29], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[30], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[31], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[32], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[33], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[34], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[35], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[36], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[37], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[38], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[39], namedNode(ssn)),
        quad(namedNode(`${sosa}Observation`), namedNode(`${rdfs}subClassOf`), blankNodes[40], namedNode(ssn)),
        quad(blankNodes[28], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[28], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Stimulus`), namedNode(ssn)),
        quad(blankNodes[28], namedNode(`${owl}onProperty`), namedNode(`${ssn}wasOriginatedBy`), namedNode(ssn)),
        quad(blankNodes[29], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[29], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[29], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[30], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[30], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sensor`), namedNode(ssn)),
        quad(blankNodes[30], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeBySensor`), namedNode(ssn)),
        quad(blankNodes[31], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[31], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Result`), namedNode(ssn)),
        quad(blankNodes[31], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[32], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[32], namedNode(`${owl}onProperty`), namedNode(`${sosa}resultTime`), namedNode(ssn)),
        quad(blankNodes[32], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[33], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[33], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[33], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[34], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[34], namedNode(`${owl}onProperty`), namedNode(`${sosa}observedProperty`), namedNode(ssn)),
        quad(blankNodes[34], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[35], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[35], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[35], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[36], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[36], namedNode(`${owl}onProperty`), namedNode(`${ssn}wasOriginatedBy`), namedNode(ssn)),
        quad(blankNodes[36], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[37], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[37], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[37], namedNode(`${owl}onProperty`), namedNode(`${sosa}usedProcedure`), namedNode(ssn)),
        quad(blankNodes[38], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[38], namedNode(`${owl}onProperty`), namedNode(`${sosa}phenomenonTime`), namedNode(ssn)),
        quad(blankNodes[38], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[39], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[39], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeBySensor`), namedNode(ssn)),
        quad(blankNodes[39], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[40], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[40], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}ObservableProperty`), namedNode(ssn)),
        quad(blankNodes[40], namedNode(`${owl}onProperty`), namedNode(`${sosa}observedProperty`), namedNode(ssn)),
        quad(namedNode(`${sosa}Platform`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Platform`), namedNode(`${rdfs}subClassOf`), blankNodes[41], namedNode(ssn)),
        quad(namedNode(`${sosa}Platform`), namedNode(`${rdfs}subClassOf`), blankNodes[42], namedNode(ssn)),
        quad(blankNodes[41], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[41], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(blankNodes[41], namedNode(`${owl}onProperty`), namedNode(`${sosa}hosts`), namedNode(ssn)),
        quad(blankNodes[42], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[42], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Deployment`), namedNode(ssn)),
        quad(blankNodes[42], namedNode(`${owl}onProperty`), namedNode(`${ssn}inDeployment`), namedNode(ssn)),
        quad(namedNode(`${sosa}Procedure`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Procedure`), namedNode(`${rdfs}subClassOf`), blankNodes[43], namedNode(ssn)),
        quad(namedNode(`${sosa}Procedure`), namedNode(`${rdfs}subClassOf`), blankNodes[44], namedNode(ssn)),
        quad(namedNode(`${sosa}Procedure`), namedNode(`${rdfs}subClassOf`), blankNodes[45], namedNode(ssn)),
        quad(blankNodes[43], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[43], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(blankNodes[43], namedNode(`${owl}onProperty`), namedNode(`${ssn}implementedBy`), namedNode(ssn)),
        quad(blankNodes[44], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[44], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Output`), namedNode(ssn)),
        quad(blankNodes[44], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasOutput`), namedNode(ssn)),
        quad(blankNodes[45], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[45], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Input`), namedNode(ssn)),
        quad(blankNodes[45], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasInput`), namedNode(ssn)),
        quad(namedNode(`${sosa}Result`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Result`), namedNode(`${rdfs}subClassOf`), blankNodes[46], namedNode(ssn)),
        quad(blankNodes[46], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[46], namedNode(`${owl}onProperty`), namedNode(`${sosa}isResultOf`), namedNode(ssn)),
        quad(blankNodes[46], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), namedNode(`${sosa}Result`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), blankNodes[47], namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), blankNodes[48], namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), blankNodes[49], namedNode(ssn)),
        quad(namedNode(`${sosa}Sample`), namedNode(`${rdfs}subClassOf`), blankNodes[50], namedNode(ssn)),
        quad(blankNodes[47], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[47], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sampling`), namedNode(ssn)),
        quad(blankNodes[47], namedNode(`${owl}onProperty`), namedNode(`${sosa}isResultOf`), namedNode(ssn)),
        quad(blankNodes[48], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[48], namedNode(`${owl}onProperty`), namedNode(`${sosa}isSampleOf`), namedNode(ssn)),
        quad(blankNodes[48], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[49], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[49], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[49], namedNode(`${owl}onProperty`), namedNode(`${sosa}isSampleOf`), namedNode(ssn)),
        quad(blankNodes[50], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[50], namedNode(`${owl}onProperty`), namedNode(`${sosa}isResultOf`), namedNode(ssn)),
        quad(blankNodes[50], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampler`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampler`), namedNode(`${rdfs}subClassOf`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampler`), namedNode(`${rdfs}subClassOf`), blankNodes[51], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampler`), namedNode(`${rdfs}subClassOf`), blankNodes[52], namedNode(ssn)),
        quad(blankNodes[51], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[51], namedNode(`${owl}onProperty`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[51], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[52], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[52], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sampling`), namedNode(ssn)),
        quad(blankNodes[52], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeSampling`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[53], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[54], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[55], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[56], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[57], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[58], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[59], namedNode(ssn)),
        quad(namedNode(`${sosa}Sampling`), namedNode(`${rdfs}subClassOf`), blankNodes[60], namedNode(ssn)),
        quad(blankNodes[53], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[53], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[53], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[54], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[54], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasFeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[54], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[55], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[55], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeBySampler`), namedNode(ssn)),
        quad(blankNodes[55], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[56], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[56], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sample`), namedNode(ssn)),
        quad(blankNodes[56], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[57], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[57], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[57], namedNode(`${owl}onProperty`), namedNode(`${sosa}usedProcedure`), namedNode(ssn)),
        quad(blankNodes[58], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[58], namedNode(`${owl}onProperty`), namedNode(`${sosa}hasResult`), namedNode(ssn)),
        quad(blankNodes[58], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[59], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[59], namedNode(`${owl}onProperty`), namedNode(`${sosa}resultTime`), namedNode(ssn)),
        quad(blankNodes[59], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[60], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[60], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sampler`), namedNode(ssn)),
        quad(blankNodes[60], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeBySampler`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}subClassOf`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}subClassOf`), blankNodes[61], namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}subClassOf`), blankNodes[62], namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}subClassOf`), blankNodes[63], namedNode(ssn)),
        quad(namedNode(`${sosa}Sensor`), namedNode(`${rdfs}subClassOf`), blankNodes[64], namedNode(ssn)),
        quad(blankNodes[61], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[61], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Observation`), namedNode(ssn)),
        quad(blankNodes[61], namedNode(`${owl}onProperty`), namedNode(`${sosa}madeObservation`), namedNode(ssn)),
        quad(blankNodes[62], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[62], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Stimulus`), namedNode(ssn)),
        quad(blankNodes[62], namedNode(`${owl}onProperty`), namedNode(`${ssn}detects`), namedNode(ssn)),
        quad(blankNodes[63], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[63], namedNode(`${owl}onProperty`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[63], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[64], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[64], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}ObservableProperty`), namedNode(ssn)),
        quad(blankNodes[64], namedNode(`${owl}onProperty`), namedNode(`${sosa}observes`), namedNode(ssn)),
        quad(namedNode(`${sosa}actsOnProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hasFeatureOfInterest`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hasResult`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hasSample`), namedNode(`${rdf}type`), namedNode(`${owl}InverseFunctionalProperty`), namedNode(ssn)),
        quad(namedNode(`${sosa}hasSample`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hasSimpleResult`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hosts`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}hosts`), namedNode(`${owl}propertyChainAxiom`), blankNodes[65], namedNode(ssn)),
        quad(blankNodes[65], namedNode(`${rdf}first`), namedNode(`${ssn}inDeployment`), namedNode(ssn)),
        quad(blankNodes[65], namedNode(`${rdf}rest`), blankNodes[66], namedNode(ssn)),
        quad(namedNode(`${sosa}isActedOnBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}isFeatureOfInterestOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}isHostedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}isObservedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}isResultOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}isSampleOf`), namedNode(`${rdf}type`), namedNode(`${owl}FunctionalProperty`), namedNode(ssn)),
        quad(namedNode(`${sosa}isSampleOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeActuation`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeByActuator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeBySampler`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeBySensor`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeObservation`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}madeSampling`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}observedProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}observes`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}observes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${ssn}forProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${skos}definition`), literal(`A relation between some aspect of an entity and a Property.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${skos}example`), literal(`For example, from a Sensor to the properties it can observe; from an Actuator to the properties it can act on; from a Deployment to the properties it was installed to observe or act on; from a SystemCapability to the Property the capability is described for.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${rdfs}comment`), literal(`A relation between some aspect of an entity and a Property.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}forProperty`), namedNode(`${rdfs}label`), literal(`for property`, 'en'), namedNode(ssn)),
        quad(namedNode(`${sosa}phenomenonTime`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}resultTime`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}usedProcedure`), namedNode(`${rdfs}isDefinedBy`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(`${sosa}usedProcedure`), namedNode(`${owl}propertyChainAxiom`), blankNodes[67], namedNode(ssn)),
        quad(namedNode(`${sosa}usedProcedure`), namedNode(`${owl}propertyChainAxiom`), blankNodes[68], namedNode(ssn)),
        quad(namedNode(`${sosa}usedProcedure`), namedNode(`${owl}propertyChainAxiom`), blankNodes[69], namedNode(ssn)),
        quad(blankNodes[67], namedNode(`${rdf}first`), namedNode(`${sosa}madeBySampler`), namedNode(ssn)),
        quad(blankNodes[67], namedNode(`${rdf}rest`), blankNodes[70], namedNode(ssn)),
        quad(blankNodes[68], namedNode(`${rdf}first`), namedNode(`${sosa}madeByActuator`), namedNode(ssn)),
        quad(blankNodes[68], namedNode(`${rdf}rest`), blankNodes[71], namedNode(ssn)),
        quad(blankNodes[69], namedNode(`${rdf}first`), namedNode(`${sosa}madeBySensor`), namedNode(ssn)),
        quad(blankNodes[69], namedNode(`${rdf}rest`), blankNodes[72], namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}created`), literal(`2017-04-17`, namedNode(`${xsd}date`)), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${rdf}type`), namedNode(`${ns6}Vocabulary`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}creator`), blankNodes[73], namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}description`), literal(`This ontology describes sensors, actuators and observations, and related concepts. It does not describe domain concepts, time, locations, etc. these are intended to be included from other ontologies via OWL imports.`, 'en'), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}license`), namedNode(`${ns11}Software`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}license`), namedNode(`${ns12}copyright-software-and-document`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}rights`), literal(`Copyright 2017 W3C/OGC.`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${dcterms}title`), literal(`Semantic Sensor Network Ontology`, 'en'), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${vann}preferredNamespacePrefix`), literal(`ssn`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${vann}preferredNamespaceUri`), literal(`http://www.w3.org/ns/ssn/`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${rdfs}comment`), literal(`Please report any errors to the W3C Spatial Data on the Web Working Group via the SDW WG Public List public-sdw-wg@w3.org`, 'en'), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${rdfs}seeAlso`), namedNode(`${ns13}Semantic_Sensor_Network_Ontology`), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${owl}imports`), namedNode(sosa), namedNode(ssn)),
        quad(namedNode(ssn), namedNode(`${owl}versionInfo`), literal(`New modular version of the SSN ontology. 

This ontology was originally developed in 2009-2011 by the W3C Semantic Sensor Networks Incubator Group (SSN-XG). For more information on the group's activities see: http://www.w3.org/2005/Incubator/ssn/. The ontology was revised and modularized in 2015-2017 by the W3C/OGC Spatial Data on the Web Working Group, see: https://www.w3.org/2015/spatial/wiki/Semantic_Sensor_Network_Ontology. 

In particular, (a) the scope is extended to include actuation and sampling; (b) the core concepts and properties are factored out into the SOSA ontology. The SSN ontology imports SOSA and adds formal axiomatization consistent with the text definitions in SOSA, and adds classes and properties to accommodate the scope of the original SSN ontology. `, 'en'), namedNode(ssn)),
        quad(blankNodes[73], namedNode(`${rdf}type`), namedNode(`${foaf}Agent`), namedNode(ssn)),
        quad(blankNodes[73], namedNode(`${foaf}name`), literal(`W3C/OGC Spatial Data on the Web Working Group`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${skos}definition`), literal(`Describes the Deployment of one or more Systems for a particular purpose. Deployment may be done on a Platform.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${skos}example`), literal(`For example, a temperature Sensor deployed on a wall, or a whole network of Sensors deployed for an Observation campaign.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}subClassOf`), blankNodes[74], namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}subClassOf`), blankNodes[75], namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}subClassOf`), blankNodes[76], namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}comment`), literal(`Describes the Deployment of one or more Systems for a particular purpose. Deployment may be done on a Platform.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Deployment`), namedNode(`${rdfs}label`), literal(`Deployment`, 'en'), namedNode(ssn)),
        quad(blankNodes[74], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[74], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Platform`), namedNode(ssn)),
        quad(blankNodes[74], namedNode(`${owl}onProperty`), namedNode(`${ssn}deployedOnPlatform`), namedNode(ssn)),
        quad(blankNodes[75], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[75], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Property`), namedNode(ssn)),
        quad(blankNodes[75], namedNode(`${owl}onProperty`), namedNode(`${ssn}forProperty`), namedNode(ssn)),
        quad(blankNodes[76], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[76], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(blankNodes[76], namedNode(`${owl}onProperty`), namedNode(`${ssn}deployedSystem`), namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${skos}definition`), literal(`Any information that is provided to a Procedure for its use.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdfs}subClassOf`), blankNodes[77], namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdfs}subClassOf`), blankNodes[78], namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdfs}comment`), literal(`Any information that is provided to a Procedure for its use.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Input`), namedNode(`${rdfs}label`), literal(`Input`, 'en'), namedNode(ssn)),
        quad(blankNodes[77], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[77], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[77], namedNode(`${owl}onProperty`), blankNodes[79], namedNode(ssn)),
        quad(blankNodes[78], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[78], namedNode(`${owl}onProperty`), blankNodes[80], namedNode(ssn)),
        quad(blankNodes[78], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${skos}definition`), literal(`Any information that is reported from a Procedure.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdfs}subClassOf`), blankNodes[81], namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdfs}subClassOf`), blankNodes[82], namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdfs}comment`), literal(`Any information that is reported from a Procedure.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Output`), namedNode(`${rdfs}label`), literal(`Output`, 'en'), namedNode(ssn)),
        quad(blankNodes[81], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[81], namedNode(`${owl}onProperty`), blankNodes[83], namedNode(ssn)),
        quad(blankNodes[81], namedNode(`${owl}minCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(ssn)),
        quad(blankNodes[82], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[82], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[82], namedNode(`${owl}onProperty`), blankNodes[84], namedNode(ssn)),
        quad(blankNodes[1], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[1], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}FeatureOfInterest`), namedNode(ssn)),
        quad(blankNodes[1], namedNode(`${owl}onProperty`), namedNode(`${ssn}isPropertyOf`), namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${skos}definition`), literal(`An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}subClassOf`), blankNodes[85], namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}subClassOf`), blankNodes[86], namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}subClassOf`), blankNodes[87], namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}comment`), literal(`An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}Stimulus`), namedNode(`${rdfs}label`), literal(`Stimulus`, 'en'), namedNode(ssn)),
        quad(blankNodes[85], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[85], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Observation`), namedNode(ssn)),
        quad(blankNodes[85], namedNode(`${owl}onProperty`), blankNodes[88], namedNode(ssn)),
        quad(blankNodes[86], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[86], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}ObservableProperty`), namedNode(ssn)),
        quad(blankNodes[86], namedNode(`${owl}onProperty`), namedNode(`${ssn}isProxyFor`), namedNode(ssn)),
        quad(blankNodes[87], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[87], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Sensor`), namedNode(ssn)),
        quad(blankNodes[87], namedNode(`${owl}onProperty`), blankNodes[89], namedNode(ssn)),
        quad(blankNodes[15], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[15], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(blankNodes[15], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasSubSystem`), namedNode(ssn)),
        quad(blankNodes[16], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[16], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}Deployment`), namedNode(ssn)),
        quad(blankNodes[16], namedNode(`${owl}onProperty`), namedNode(`${ssn}hasDeployment`), namedNode(ssn)),
        quad(blankNodes[17], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[17], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Platform`), namedNode(ssn)),
        quad(blankNodes[17], namedNode(`${owl}onProperty`), namedNode(`${sosa}isHostedBy`), namedNode(ssn)),
        quad(blankNodes[18], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[18], namedNode(`${owl}allValuesFrom`), namedNode(`${sosa}Procedure`), namedNode(ssn)),
        quad(blankNodes[18], namedNode(`${owl}onProperty`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[19], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(ssn)),
        quad(blankNodes[19], namedNode(`${owl}allValuesFrom`), namedNode(`${ssn}System`), namedNode(ssn)),
        quad(blankNodes[19], namedNode(`${owl}onProperty`), blankNodes[90], namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${skos}definition`), literal(`Relation between a Deployment and the Platform on which the Systems are deployed.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${rdfs}comment`), literal(`Relation between a Deployment and the Platform on which the Systems are deployed.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${rdfs}label`), literal(`deployed on platform`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedOnPlatform`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}inDeployment`), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${skos}definition`), literal(`Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${skos}example`), literal(`For example, a relation between a buoy and a deployment of several Sensors.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${rdfs}comment`), literal(`Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${rdfs}label`), literal(`in deployment`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}inDeployment`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}deployedOnPlatform`), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${skos}definition`), literal(`Relation between a Deployment and a deployed System.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${rdfs}comment`), literal(`Relation between a Deployment and a deployed System.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${rdfs}label`), literal(`deployed system`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}deployedSystem`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasDeployment`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${skos}definition`), literal(`Relation between a System and a Deployment, recording that the System is deployed in that Deployment.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${rdfs}comment`), literal(`Relation between a System and a Deployment, recording that the System is deployed in that Deployment.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${rdfs}label`), literal(`has deployment`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasDeployment`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}deployedSystem`), namedNode(ssn)),
        quad(namedNode(`${ssn}detects`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}detects`), namedNode(`${skos}definition`), literal(`A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}detects`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}detects`), namedNode(`${rdfs}comment`), literal(`A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}detects`), namedNode(`${rdfs}label`), literal(`detects`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasInput`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasInput`), namedNode(`${skos}definition`), literal(`Relation between a Procedure and an Input to it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasInput`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}hasInput`), namedNode(`${rdfs}comment`), literal(`Relation between a Procedure and an Input to it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasInput`), namedNode(`${rdfs}label`), literal(`has input`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasOutput`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasOutput`), namedNode(`${skos}definition`), literal(`Relation between a Procedure and an Output of it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasOutput`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}hasOutput`), namedNode(`${rdfs}comment`), literal(`Relation between a Procedure and an Output of it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasOutput`), namedNode(`${rdfs}label`), literal(`has output`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${skos}definition`), literal(`Relation between an entity and a Property of that entity.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${rdfs}comment`), literal(`Relation between an entity and a Property of that entity.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${rdfs}label`), literal(`has property`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasProperty`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}isPropertyOf`), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${skos}definition`), literal(`Relation between a Property and the entity it belongs to.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${rdfs}comment`), literal(`Relation between a Property and the entity it belongs to.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${rdfs}label`), literal(`is property of`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isPropertyOf`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasSubSystem`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}hasSubSystem`), namedNode(`${skos}definition`), literal(`Relation between a System and its component parts.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasSubSystem`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}hasSubSystem`), namedNode(`${rdfs}comment`), literal(`Relation between a System and its component parts.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}hasSubSystem`), namedNode(`${rdfs}label`), literal(`has subsystem`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${skos}definition`), literal(`Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${skos}example`), literal(`For example, the relationship between a scientific measuring Procedure and a sensor that senses via that Procedure.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${rdfs}comment`), literal(`Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${rdfs}label`), literal(`implemented by`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implementedBy`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${skos}definition`), literal(`Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method).`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${skos}example`), literal(`For example, the relationship between a sensor and the scientific measuring Procedure via which it senses.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${rdfs}comment`), literal(`Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method).`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${rdfs}label`), literal(`implements`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}implements`), namedNode(`${owl}inverseOf`), namedNode(`${ssn}implementedBy`), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${skos}definition`), literal(`A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${skos}example`), literal(`For example, the expansion of quicksilver is a stimulus that serves as a proxy for some temperature property. An increase or decrease in the velocity of spinning cups on a wind sensor is serving as a proxy for the wind speed.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${rdfs}comment`), literal(`A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}isProxyFor`), namedNode(`${rdfs}label`), literal(`is proxy for`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${rdf}type`), namedNode(`${owl}FunctionalProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${skos}definition`), literal(`Relation between an Observation and the Stimulus that originated it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(ssn), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${rdfs}comment`), literal(`Relation between an Observation and the Stimulus that originated it.`, 'en'), namedNode(ssn)),
        quad(namedNode(`${ssn}wasOriginatedBy`), namedNode(`${rdfs}label`), literal(`was originated by`, 'en'), namedNode(ssn)),
        quad(namedNode(`${foaf}Agent`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(ssn)),
        quad(namedNode(`${foaf}name`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(ssn)),
        quad(blankNodes[88], namedNode(`${owl}inverseOf`), namedNode(`${ssn}wasOriginatedBy`), namedNode(ssn)),
        quad(blankNodes[26], namedNode(`${owl}inverseOf`), namedNode(`${sosa}observedProperty`), namedNode(ssn)),
        quad(blankNodes[70], namedNode(`${rdf}first`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[70], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(ssn)),
        quad(blankNodes[79], namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasInput`), namedNode(ssn)),
        quad(blankNodes[83], namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasOutput`), namedNode(ssn)),
        quad(blankNodes[90], namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasSubSystem`), namedNode(ssn)),
        quad(blankNodes[66], namedNode(`${rdf}first`), namedNode(`${ssn}deployedSystem`), namedNode(ssn)),
        quad(blankNodes[66], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(ssn)),
        quad(blankNodes[71], namedNode(`${rdf}first`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[71], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(ssn)),
        quad(blankNodes[27], namedNode(`${owl}inverseOf`), namedNode(`${ssn}isProxyFor`), namedNode(ssn)),
        quad(blankNodes[72], namedNode(`${rdf}first`), namedNode(`${ssn}implements`), namedNode(ssn)),
        quad(blankNodes[72], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(ssn)),
        quad(blankNodes[89], namedNode(`${owl}inverseOf`), namedNode(`${ssn}detects`), namedNode(ssn)),
        quad(blankNodes[84], namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasOutput`), namedNode(ssn)),
        quad(blankNodes[80], namedNode(`${owl}inverseOf`), namedNode(`${ssn}hasInput`), namedNode(ssn)),
    ];
};
