"use strict";
/* This file was automatically generated. Do not edit by hand. */
Object.defineProperty(exports, "__esModule", { value: true });
const { qb, sdmx, rdf, skos, rdfs, owl, ns7, dcterms, xsd, ns10, ns11, foaf } = {
    'qb': 'http://purl.org/linked-data/cube#',
    'sdmx': 'http://purl.org/linked-data/sdmx#',
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'skos': 'http://www.w3.org/2004/02/skos/core#',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'ns7': 'http://purl.org/linked-data/',
    'dcterms': 'http://purl.org/dc/terms/',
    'xsd': 'http://www.w3.org/2001/XMLSchema#',
    'ns10': 'http://sdmx.org/?page_id=16#',
    'ns11': 'http://',
    'foaf': 'http://xmlns.com/foaf/0.1/'
};
exports.default = ({ blankNode, literal, namedNode, quad }) => {
    const blankNodes = [];
    for (let i = 0; i < 5; i++) {
        blankNodes.push(blankNode());
    }
    return [
        quad(namedNode(`${qb}measureType`), namedNode(`${qb}concept`), namedNode(`${sdmx}measureTypeConcept`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}measureTypeConcept`), namedNode(`${rdf}type`), namedNode(`${skos}Concept`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}measureTypeConcept`), namedNode(`${rdf}type`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}measureTypeConcept`), namedNode(`${rdf}type`), namedNode(`${sdmx}MeasureTypeRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}measureTypeConcept`), namedNode(`${rdfs}label`), literal(`measureType`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}measureTypeConcept`), namedNode(`${rdfs}comment`), literal(`The concept corresponding to the generic measure type dimension which indicates which measure is being denoted by the primary measure on an observation`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CodeList`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CodeList`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CodeList`), namedNode(`${rdfs}label`), literal(`Concept scheme`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CodeList`), namedNode(`${rdfs}subClassOf`), namedNode(`${skos}ConceptScheme`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}Concept`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}Concept`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}Concept`), namedNode(`${rdfs}label`), literal(`concept`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}Concept`), namedNode(`${rdfs}subClassOf`), namedNode(`${skos}Concept`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}Concept`), namedNode(`${rdfs}comment`), literal(`Denotes an SDMX concept, used in the particular SDMX terminological sense, which is in principle narrower than skos:Concept`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}ConceptRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}ConceptRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}ConceptRole`), namedNode(`${rdfs}label`), literal(`Concept role (abstract)`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}ConceptRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}Concept`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}ConceptRole`), namedNode(`${rdfs}comment`), literal(`Abstract superclass of classes denoting statistical roles which be played by concepts`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CountRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CountRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CountRole`), namedNode(`${rdfs}label`), literal(`Count property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CountRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}CountRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension or attribute that plays the role of an identifier where the identifier is taken from a known system of counts (e.g. the Nth current dataset update for a given day)`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}DataStructureDefinition`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}DataStructureDefinition`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}DataStructureDefinition`), namedNode(`${rdfs}label`), literal(`Data Structure Definition`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}DataStructureDefinition`), namedNode(`${rdfs}subClassOf`), namedNode(`${qb}DataStructureDefinition`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}DataStructureDefinition`), namedNode(`${rdfs}comment`), literal(`A specialization of qb:DataStructureDefinition which additional constraints: if there are multiple measures then a MeasureDimensionProperty must be included in the DSD`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}EntityRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}EntityRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}EntityRole`), namedNode(`${rdfs}label`), literal(`Entity property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}EntityRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}EntityRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension or attribute that plays the role of the DataAttribute subject to whom the data refers (e.g. the reporting agent for primary reporting, the country for secondary reporting)`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}FrequencyRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}FrequencyRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}FrequencyRole`), namedNode(`${rdfs}label`), literal(`Frequency property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}FrequencyRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}FrequencyRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension or attribute that plays the role of frequency`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}IdentityRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}IdentityRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}IdentityRole`), namedNode(`${rdfs}label`), literal(`Identity property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}IdentityRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}IdentityRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension or attribute that plays the role of an identifier which is taken from a known scheme of identifiers.`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}MeasureTypeRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}MeasureTypeRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}MeasureTypeRole`), namedNode(`${rdfs}label`), literal(`Measure type property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}MeasureTypeRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}MeasureTypeRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension that plays the role of identifying a type of measure`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}NonObsTimeRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}NonObsTimeRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}NonObsTimeRole`), namedNode(`${rdfs}label`), literal(`Non-observation time property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}NonObsTimeRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}NonObsTimeRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension or attribute that plays the role of a date/time identifier in the KeyFamily which is not related to the time of the observation`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}PrimaryMeasureRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}PrimaryMeasureRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}PrimaryMeasureRole`), namedNode(`${rdfs}label`), literal(`Primary measure property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}PrimaryMeasureRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}PrimaryMeasureRole`), namedNode(`${rdfs}comment`), literal(`concept for a measure that plays the role of the observation in a time series`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}TimeRole`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}TimeRole`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}TimeRole`), namedNode(`${rdfs}label`), literal(`Time property`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}TimeRole`), namedNode(`${rdfs}subClassOf`), namedNode(`${sdmx}ConceptRole`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}TimeRole`), namedNode(`${rdfs}comment`), literal(`concept for a dimension that specifies the time of the observation of the primaryMeasure`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdfs}label`), literal(`primary measure`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdfs}comment`), literal(`Indicates an additional component used as the primary measure within the SDMX data. In the case of multi-measure data sets the RDF representation uses the specific measure rather than a subsuming overall measure. This property records the subsuming primary measure (typically sdmx-measure:obsValue) to enable round tripping of this information.`, 'en'), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdfs}domain`), namedNode(`${sdmx}DataStructureDefinition`), namedNode(sdmx)),
        quad(namedNode(`${sdmx}primaryMeasure`), namedNode(`${rdfs}range`), namedNode(`${qb}MeasureProperty`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${rdfs}label`), literal(`SDMX-RDF vocabulary`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${rdfs}comment`), literal(`This vocabulary extends the data cube vocabulary to support publication of statistical data in RDF, using an information model based on SDMX`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}contributor`), blankNodes[0], namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}contributor`), blankNodes[1], namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}contributor`), blankNodes[2], namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}contributor`), blankNodes[3], namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}contributor`), blankNodes[4], namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}created`), literal(`2010-02-05`, namedNode(`${xsd}date`)), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}modified`), literal(`2010-07-22`, namedNode(`${xsd}date`)), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}references`), namedNode(`${ns10}package`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}source`), namedNode(`${ns11}sdmx.org`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${dcterms}title`), literal(`Vocabulary for publishing SDMX statistical data in RDF`), namedNode(sdmx)),
        quad(namedNode(`${ns7}sdmx`), namedNode(`${owl}versionInfo`), literal(`0.3`), namedNode(sdmx)),
        quad(blankNodes[0], namedNode(`${foaf}mbox`), literal(`richard@cyganiak.de`), namedNode(sdmx)),
        quad(blankNodes[1], namedNode(`${foaf}mbox`), literal(`ian@epimorphics.com`), namedNode(sdmx)),
        quad(blankNodes[2], namedNode(`${foaf}mbox`), literal(`arofan.gregory@earthlink.net`), namedNode(sdmx)),
        quad(blankNodes[3], namedNode(`${foaf}mbox`), literal(`dave@epimorphics.com`), namedNode(sdmx)),
        quad(blankNodes[4], namedNode(`${foaf}mbox`), literal(`jeni@jenitennison.com`), namedNode(sdmx)),
    ];
};
