"use strict";
/* This file was automatically generated. Do not edit by hand. */
Object.defineProperty(exports, "__esModule", { value: true });
const { rdf, dc11, owl, rdfs, ns5, ns6, ns7 } = {
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'dc11': 'http://purl.org/dc/elements/1.1/',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'ns5': 'https://www.w3.org/TR/json-ld11/#',
    'ns6': 'http://www.w3.org/TR/rdf11-concepts/#',
    'ns7': 'http://www.w3.org/TR/rdf-plain-literal/'
};
exports.default = ({ literal, namedNode, quad }) => {
    return [
        quad(namedNode(rdf), namedNode(`${dc11}date`), literal(`2019-12-16`), namedNode(rdf)),
        quad(namedNode(rdf), namedNode(`${dc11}description`), literal(`This is the RDF Schema for the RDF vocabulary terms in the RDF Namespace, defined in RDF 1.1 Concepts.`), namedNode(rdf)),
        quad(namedNode(rdf), namedNode(`${dc11}title`), literal(`The RDF Concepts Vocabulary (RDF)`), namedNode(rdf)),
        quad(namedNode(rdf), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdfs}comment`), literal(`The subject is an instance of a class.`), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdfs}label`), literal(`type`), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdfs}domain`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}type`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Alt`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Alt`), namedNode(`${rdfs}comment`), literal(`The class of containers of alternatives.`), namedNode(rdf)),
        quad(namedNode(`${rdf}Alt`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}Alt`), namedNode(`${rdfs}label`), literal(`Alt`), namedNode(rdf)),
        quad(namedNode(`${rdf}Alt`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Container`), namedNode(rdf)),
        quad(namedNode(`${rdf}Bag`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Bag`), namedNode(`${rdfs}comment`), literal(`The class of unordered containers.`), namedNode(rdf)),
        quad(namedNode(`${rdf}Bag`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}Bag`), namedNode(`${rdfs}label`), literal(`Bag`), namedNode(rdf)),
        quad(namedNode(`${rdf}Bag`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Container`), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdfs}comment`), literal(`A class representing a compound literal.`), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdfs}label`), literal(`CompoundLiteral`), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}CompoundLiteral`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns5}the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties`), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdf}type`), namedNode(`${rdfs}Datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdfs}comment`), literal(`The datatype of RDF literals storing fragments of HTML content`), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdfs}label`), literal(`HTML`), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}HTML`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns6}section-html`), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdf}type`), namedNode(`${rdfs}Datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdfs}comment`), literal(`The datatype of RDF literals storing JSON content.`), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdfs}label`), literal(`JSON`), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}JSON`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns5}the-rdf-json-datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}List`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}List`), namedNode(`${rdfs}comment`), literal(`The class of RDF Lists.`), namedNode(rdf)),
        quad(namedNode(`${rdf}List`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}List`), namedNode(`${rdfs}label`), literal(`List`), namedNode(rdf)),
        quad(namedNode(`${rdf}List`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdf}type`), namedNode(`${rdfs}Datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdfs}comment`), literal(`The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2`), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdfs}label`), literal(`PlainLiteral`), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}PlainLiteral`), namedNode(`${rdfs}seeAlso`), namedNode(ns7), namedNode(rdf)),
        quad(namedNode(`${rdf}Property`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Property`), namedNode(`${rdfs}comment`), literal(`The class of RDF properties.`), namedNode(rdf)),
        quad(namedNode(`${rdf}Property`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}Property`), namedNode(`${rdfs}label`), literal(`Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}Property`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}Seq`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Seq`), namedNode(`${rdfs}comment`), literal(`The class of ordered containers.`), namedNode(rdf)),
        quad(namedNode(`${rdf}Seq`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}Seq`), namedNode(`${rdfs}label`), literal(`Seq`), namedNode(rdf)),
        quad(namedNode(`${rdf}Seq`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Container`), namedNode(rdf)),
        quad(namedNode(`${rdf}Statement`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(rdf)),
        quad(namedNode(`${rdf}Statement`), namedNode(`${rdfs}comment`), literal(`The class of RDF statements.`), namedNode(rdf)),
        quad(namedNode(`${rdf}Statement`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}Statement`), namedNode(`${rdfs}label`), literal(`Statement`), namedNode(rdf)),
        quad(namedNode(`${rdf}Statement`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}XMLLiteral`), namedNode(`${rdf}type`), namedNode(`${rdfs}Datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}XMLLiteral`), namedNode(`${rdfs}comment`), literal(`The datatype of XML literal values.`), namedNode(rdf)),
        quad(namedNode(`${rdf}XMLLiteral`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}XMLLiteral`), namedNode(`${rdfs}label`), literal(`XMLLiteral`), namedNode(rdf)),
        quad(namedNode(`${rdf}XMLLiteral`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdfs}comment`), literal(`The base direction component of a CompoundLiteral.`), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdfs}label`), literal(`direction`), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns5}the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties`), namedNode(rdf)),
        quad(namedNode(`${rdf}direction`), namedNode(`${rdfs}domain`), namedNode(`${rdf}CompoundLiteral`), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdfs}comment`), literal(`The first item in the subject RDF list.`), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdfs}label`), literal(`first`), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdfs}domain`), namedNode(`${rdf}List`), namedNode(rdf)),
        quad(namedNode(`${rdf}first`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdf}type`), namedNode(`${rdfs}Datatype`), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdfs}comment`), literal(`The datatype of language-tagged string values`), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdfs}label`), literal(`langString`), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdfs}subClassOf`), namedNode(`${rdfs}Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}langString`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns6}section-Graph-Literal`), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdfs}comment`), literal(`The language component of a CompoundLiteral.`), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdfs}label`), literal(`language`), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdfs}seeAlso`), namedNode(`${ns5}the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties`), namedNode(rdf)),
        quad(namedNode(`${rdf}language`), namedNode(`${rdfs}domain`), namedNode(`${rdf}CompoundLiteral`), namedNode(rdf)),
        quad(namedNode(`${rdf}nil`), namedNode(`${rdf}type`), namedNode(`${rdf}List`), namedNode(rdf)),
        quad(namedNode(`${rdf}nil`), namedNode(`${rdfs}comment`), literal(`The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.`), namedNode(rdf)),
        quad(namedNode(`${rdf}nil`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}nil`), namedNode(`${rdfs}label`), literal(`nil`), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdfs}comment`), literal(`The object of the subject RDF statement.`), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdfs}label`), literal(`object`), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdfs}domain`), namedNode(`${rdf}Statement`), namedNode(rdf)),
        quad(namedNode(`${rdf}object`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdfs}comment`), literal(`The predicate of the subject RDF statement.`), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdfs}label`), literal(`predicate`), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdfs}domain`), namedNode(`${rdf}Statement`), namedNode(rdf)),
        quad(namedNode(`${rdf}predicate`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdfs}comment`), literal(`The rest of the subject RDF list after the first item.`), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdfs}label`), literal(`rest`), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdfs}domain`), namedNode(`${rdf}List`), namedNode(rdf)),
        quad(namedNode(`${rdf}rest`), namedNode(`${rdfs}range`), namedNode(`${rdf}List`), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdfs}comment`), literal(`The subject of the subject RDF statement.`), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdfs}label`), literal(`subject`), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdfs}domain`), namedNode(`${rdf}Statement`), namedNode(rdf)),
        quad(namedNode(`${rdf}subject`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdfs}comment`), literal(`Idiomatic property used for structured values.`), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdfs}isDefinedBy`), namedNode(rdf), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdfs}label`), literal(`value`), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdfs}domain`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
        quad(namedNode(`${rdf}value`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Resource`), namedNode(rdf)),
    ];
};
