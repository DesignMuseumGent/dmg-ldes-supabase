"use strict";
/* This file was automatically generated. Do not edit by hand. */
Object.defineProperty(exports, "__esModule", { value: true });
const { ns1, rdf, foaf, gn, ns5, owl, ns7, ns8, skos, rdfs, schema, wgs, ns13, ns14, xsd, dcterms, ns17, ns18, cc, ns20, vann, ns22 } = {
    'ns1': 'http://data.semanticweb.org/person/',
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'foaf': 'http://xmlns.com/foaf/0.1/',
    'gn': 'http://www.geonames.org/ontology#',
    'ns5': 'http://',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'ns7': 'http://dbpedia.org/resource/',
    'ns8': 'http://id.loc.gov/vocabulary/relators/',
    'skos': 'http://www.w3.org/2004/02/skos/core#',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'schema': 'http://schema.org/',
    'wgs': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'ns13': 'http://geovocab.org/spatial#',
    'ns14': 'http://www.mindswap.org/2003/owl/geo/geoFeatures20040307.owl#',
    'xsd': 'http://www.w3.org/2001/XMLSchema#',
    'dcterms': 'http://purl.org/dc/terms/',
    'ns17': 'http://www.geonames.org/',
    'ns18': 'http://www.geonames.org/ontology/',
    'cc': 'http://creativecommons.org/ns#',
    'ns20': 'http://creativecommons.org/licenses/by/3.0/',
    'vann': 'http://purl.org/vocab/vann/',
    'ns22': 'http://www.w3.org/ns/adms#'
};
exports.default = ({ blankNode, literal, namedNode, quad }) => {
    const blankNodes = [];
    for (let i = 0; i < 19; i++) {
        blankNodes.push(blankNode());
    }
    return [
        quad(namedNode(`${ns1}bernard-vatant`), namedNode(`${rdf}type`), namedNode(`${foaf}Person`), namedNode(gn)),
        quad(namedNode(`${ns1}bernard-vatant`), namedNode(`${foaf}name`), literal(`Bernard Vatant`), namedNode(gn)),
        quad(namedNode(`${ns1}bernard-vatant`), namedNode(`${foaf}page`), namedNode(`${ns5}blog.hubjects.com`), namedNode(gn)),
        quad(namedNode(`${ns1}bernard-vatant`), namedNode(`${foaf}workplaceHomepage`), namedNode(`${ns5}www.mondeca.com`), namedNode(gn)),
        quad(namedNode(`${foaf}name`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${ns7}GeoNames`), namedNode(`${rdf}type`), namedNode(`${foaf}Organization`), namedNode(gn)),
        quad(namedNode(`${ns7}GeoNames`), namedNode(`${foaf}name`), literal(`GeoNames`), namedNode(gn)),
        quad(namedNode(`${ns7}GeoNames`), namedNode(`${ns8}dtm`), namedNode(`${gn}Marc-Wick`), namedNode(gn)),
        quad(namedNode(`${ns7}GeoNames`), namedNode(`${foaf}homepage`), namedNode(`${ns5}www.geonames.org`), namedNode(gn)),
        quad(namedNode(`${gn}Marc-Wick`), namedNode(`${rdf}type`), namedNode(`${foaf}Person`), namedNode(gn)),
        quad(namedNode(`${gn}Marc-Wick`), namedNode(`${foaf}name`), literal(`Marc Wick`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}definition`), literal(`a primary administrative division of a country, such as a state in the United States`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}definition`), literal(`первоначальное политико-административное  деление, например, деление США на штаты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}notation`), literal(`A.ADM1`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}prefLabel`), literal(`first-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}prefLabel`), literal(`första ordningens administrativ avdelning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}prefLabel`), literal(`primær administrativ inndeling`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}prefLabel`), literal(`политико-административное деление первого порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1`), namedNode(`${skos}prefLabel`), literal(`първостепенна административна единица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}Code`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}Code`), namedNode(`${rdfs}comment`), literal(`A feature code.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Code`), namedNode(`${rdfs}label`), literal(`Code`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Code`), namedNode(`${rdfs}subClassOf`), namedNode(`${skos}Concept`), namedNode(gn)),
        quad(namedNode(`${gn}A`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}A`), namedNode(`${rdfs}comment`), literal(`country, state, region ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${skos}notation`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${skos}notation`), namedNode(`${rdfs}comment`), literal(`Used to store the values of feature codes`, 'en'), namedNode(gn)),
        quad(namedNode(`${skos}notation`), namedNode(`${rdfs}label`), literal(`notation`, 'en'), namedNode(gn)),
        quad(namedNode(`${skos}prefLabel`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1H`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1H`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1H`), namedNode(`${skos}notation`), literal(`A.ADM1H`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1H`), namedNode(`${skos}prefLabel`), literal(`historical first-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM1H`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}definition`), literal(`a subdivision of a first-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}definition`), literal(`дальнейшее деление политико-административного деления первого порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}notation`), literal(`A.ADM2`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}prefLabel`), literal(`andra ordningens administrativ avdelning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}prefLabel`), literal(`second-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}prefLabel`), literal(`sekundær administrativ inndeling`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}prefLabel`), literal(`второстепенна административна единица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2`), namedNode(`${skos}prefLabel`), literal(`политико-административное деление второго порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2H`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2H`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2H`), namedNode(`${skos}notation`), literal(`A.ADM2H`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2H`), namedNode(`${skos}prefLabel`), literal(`historical second-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM2H`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}definition`), literal(`a subdivision of a second-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}definition`), literal(`дальнейшее деление политико-административного деления второго порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}notation`), literal(`A.ADM3`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}prefLabel`), literal(`administrativ inndeling av tredje grad`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}prefLabel`), literal(`third-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}prefLabel`), literal(`tredje ordningens administrativ avdelning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}prefLabel`), literal(`политико-административное деление третьего порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3`), namedNode(`${skos}prefLabel`), literal(`третостепенна административна единица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3H`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3H`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3H`), namedNode(`${skos}notation`), literal(`A.ADM3H`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3H`), namedNode(`${skos}prefLabel`), literal(`historical third-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM3H`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}definition`), literal(`a subdivision of a third-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}definition`), literal(`дальнейшее деление политико-административного деления третьего порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}notation`), literal(`A.ADM4`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}prefLabel`), literal(`administrativ inndeling av fjerde grad`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}prefLabel`), literal(`fjärde ordningens administrativ avdelning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}prefLabel`), literal(`fourth-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}prefLabel`), literal(`политико-административное деление четвертого порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4`), namedNode(`${skos}prefLabel`), literal(`четвъртостепенна административна единица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4H`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4H`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4H`), namedNode(`${skos}notation`), literal(`A.ADM4H`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4H`), namedNode(`${skos}prefLabel`), literal(`historical fourth-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM4H`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM5`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM5`), namedNode(`${skos}definition`), literal(`a subdivision of a fourth-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM5`), namedNode(`${skos}notation`), literal(`A.ADM5`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADM5`), namedNode(`${skos}prefLabel`), literal(`fifth-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}definition`), literal(`an administrative division of a country, undifferentiated as to administrative level`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}definition`), literal(`деление страны на административные единицы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}notation`), literal(`A.ADMD`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}prefLabel`), literal(`administrativ avdelning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}prefLabel`), literal(`administrativ inndeling`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}prefLabel`), literal(`administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}prefLabel`), literal(`административно делене`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMD`), namedNode(`${skos}prefLabel`), literal(`политико-административное  деление`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMH`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMH`), namedNode(`${skos}notation`), literal(`A.ADMH`), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMH`), namedNode(`${skos}prefLabel`), literal(`historical administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ADMH`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}definition`), literal(`a tract of land leased to another country, usually for military installations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}definition`), literal(`арендованный правительством Великобритании у властей Китая участок земли, часть Гонконга`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}notation`), literal(`A.LTER`), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}prefLabel`), literal(`leased area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}prefLabel`), literal(`leid landområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}prefLabel`), literal(`uthyrt område`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}prefLabel`), literal(`арендованный район/территория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.LTER`), namedNode(`${skos}prefLabel`), literal(`територия под аренда`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}notation`), literal(`A.PCL`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}prefLabel`), literal(`political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}prefLabel`), literal(`politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}prefLabel`), literal(`politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}prefLabel`), literal(`политическо тяло`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCL`), namedNode(`${skos}prefLabel`), literal(`политическое образование`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}notation`), literal(`A.PCLD`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}prefLabel`), literal(`avhengig politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}prefLabel`), literal(`beroende politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}prefLabel`), literal(`dependent political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}prefLabel`), literal(`зависимо политическо тяло`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLD`), namedNode(`${skos}prefLabel`), literal(`зависимое политическое образование`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}notation`), literal(`A.PCLF`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}prefLabel`), literal(`freely associated state`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}prefLabel`), literal(`fritt associerad stat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}prefLabel`), literal(`fritt tilknyttet stat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}prefLabel`), literal(`свободно асоциирана държава`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLF`), namedNode(`${skos}prefLabel`), literal(`свободно присоединившееся государство (свободное ассоциированное государство)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLH`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLH`), namedNode(`${skos}notation`), literal(`A.PCLH`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLH`), namedNode(`${skos}prefLabel`), literal(`historical political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLH`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}notation`), literal(`A.PCLI`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}prefLabel`), literal(`independent political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}prefLabel`), literal(`oberoende politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}prefLabel`), literal(`uavhengig politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}prefLabel`), literal(`независимо политическо образувание`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLI`), namedNode(`${skos}prefLabel`), literal(`независимое политическое образование`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}notation`), literal(`A.PCLIX`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}prefLabel`), literal(`del av oberoende politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}prefLabel`), literal(`del av uavhengig politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}prefLabel`), literal(`section of independent political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}prefLabel`), literal(`участок независимого политического образования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLIX`), namedNode(`${skos}prefLabel`), literal(`част от независимо политическо образувание`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}notation`), literal(`A.PCLS`), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}prefLabel`), literal(`delvis oberoende politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}prefLabel`), literal(`delvis uavhengig politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}prefLabel`), literal(`semi-independent political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}prefLabel`), literal(`наполовину зависимое политическое образование`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PCLS`), namedNode(`${skos}prefLabel`), literal(`полу-независимо политическо образувание`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PPCLH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPCLH`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPCLH`), namedNode(`${skos}notation`), literal(`A.PPCLH`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPCLH`), namedNode(`${skos}prefLabel`), literal(`historical capital of a political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PPCLH`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}P`), namedNode(`${rdfs}comment`), literal(`city, village,...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PPLH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPLH`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPLH`), namedNode(`${skos}notation`), literal(`A.PPLH`), namedNode(gn)),
        quad(namedNode(`${gn}A.PPLH`), namedNode(`${skos}prefLabel`), literal(`historical populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PPLH`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}definition`), literal(`an ecclesiastical district`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}definition`), literal(`низший церковный округ в христианской церкви, центром которого является храм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}notation`), literal(`A.PRSH`), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}prefLabel`), literal(`kommun`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}prefLabel`), literal(`parish`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}prefLabel`), literal(`sogn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}prefLabel`), literal(`енория`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.PRSH`), namedNode(`${skos}prefLabel`), literal(`церковный приход`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}notation`), literal(`A.TERR`), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}prefLabel`), literal(`territorium`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}prefLabel`), literal(`territorium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}prefLabel`), literal(`territory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}prefLabel`), literal(`територия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.TERR`), namedNode(`${skos}prefLabel`), literal(`территория (административная единица в США, Канаде и Австралии, не имеющая прав штата или провинции)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}notation`), literal(`A.ZN`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}prefLabel`), literal(`sone`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}prefLabel`), literal(`zon`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}prefLabel`), literal(`zone`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}prefLabel`), literal(`зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZN`), namedNode(`${skos}prefLabel`), literal(`зона`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}definition`), literal(`a zone recognized as a buffer between two nations in which military presence is minimal or absent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}definition`), literal(`область, официально признанная в качестве буфера между двумя нациями; военное присутствие минимально или вовсе отсутствует`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}inScheme`), namedNode(`${gn}A`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}notation`), literal(`A.ZNB`), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}prefLabel`), literal(`buffer zone`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}prefLabel`), literal(`buffersone`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}prefLabel`), literal(`bufferzon`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}prefLabel`), literal(`буферна зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}A.ZNB`), namedNode(`${skos}prefLabel`), literal(`буферная зона`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}Class`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}Class`), namedNode(`${rdfs}comment`), literal(`A class of features.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Class`), namedNode(`${rdfs}label`), literal(`Class`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Class`), namedNode(`${rdfs}subClassOf`), namedNode(`${skos}ConceptScheme`), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${skos}historyNote`), literal(`Modified in version 3.1 : The cardinality constraints on feature code, feature class are relaxed on this class, and put on the specific subclass Geonames Feature. This class and attached properties can therefore be used for features not necessarily identified in the Geoanmes data base`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${rdfs}comment`), literal(`A geographical feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${rdfs}label`), literal(`Feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${rdfs}subClassOf`), namedNode(`${schema}Place`), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${rdfs}subClassOf`), namedNode(`${wgs}SpatialThing`), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${owl}equivalentClass`), namedNode(`${ns13}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}Feature`), namedNode(`${owl}equivalentClass`), namedNode(`${ns14}GeographicFeature`), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${skos}historyNote`), literal(`Added in version 3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}comment`), literal(`A feature described in geonames database, uniquely defined by its geonames identifier`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}label`), literal(`Geonames Feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[0], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[1], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[2], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[3], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[4], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[5], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[6], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[7], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[8], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[9], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[10], namedNode(gn)),
        quad(namedNode(`${gn}GeonamesFeature`), namedNode(`${rdfs}subClassOf`), blankNodes[11], namedNode(gn)),
        quad(blankNodes[0], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[0], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[0], namedNode(`${owl}onProperty`), namedNode(`${gn}countryCode`), namedNode(gn)),
        quad(blankNodes[1], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[1], namedNode(`${owl}onProperty`), namedNode(`${wgs}long`), namedNode(gn)),
        quad(blankNodes[1], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[2], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[2], namedNode(`${owl}onProperty`), namedNode(`${gn}featureClass`), namedNode(gn)),
        quad(blankNodes[2], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[3], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[3], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[3], namedNode(`${owl}onProperty`), namedNode(`${gn}population`), namedNode(gn)),
        quad(blankNodes[4], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[4], namedNode(`${owl}onProperty`), namedNode(`${wgs}lat`), namedNode(gn)),
        quad(blankNodes[4], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[5], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[5], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[5], namedNode(`${owl}onProperty`), namedNode(`${gn}parentADM3`), namedNode(gn)),
        quad(blankNodes[6], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[6], namedNode(`${owl}onProperty`), namedNode(`${gn}name`), namedNode(gn)),
        quad(blankNodes[6], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[7], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[7], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[7], namedNode(`${owl}onProperty`), namedNode(`${gn}parentADM2`), namedNode(gn)),
        quad(blankNodes[8], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[8], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[8], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[9], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[9], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[9], namedNode(`${owl}onProperty`), namedNode(`${gn}parentADM4`), namedNode(gn)),
        quad(blankNodes[10], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[10], namedNode(`${owl}maxCardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(blankNodes[10], namedNode(`${owl}onProperty`), namedNode(`${gn}parentADM1`), namedNode(gn)),
        quad(blankNodes[11], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[11], namedNode(`${owl}onProperty`), namedNode(`${gn}geonamesID`), namedNode(gn)),
        quad(blankNodes[11], namedNode(`${owl}cardinality`), literal(`1`, namedNode(`${xsd}nonNegativeInteger`)), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}definition`), literal(`a place on a waterbody where floatplanes land and take off`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}definition`), literal(`место на воде для взлета и посадки гидросамолета`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}notation`), literal(`H.AIRS`), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}prefLabel`), literal(`landingsområde for sjøfly`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}prefLabel`), literal(`landningsplats för sjöflygplan`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}prefLabel`), literal(`seaplane landing area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}prefLabel`), literal(`летище за хидроплани`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.AIRS`), namedNode(`${skos}prefLabel`), literal(`посадочная полоса для гидросамолета`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}H`), namedNode(`${rdfs}comment`), literal(`stream, lake, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}definition`), literal(`an area where vessels may anchor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}definition`), literal(`место, где судна бросают якорь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}notation`), literal(`H.ANCH`), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}prefLabel`), literal(`anchorage`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}prefLabel`), literal(`ankarplats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}prefLabel`), literal(`ankerplass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}prefLabel`), literal(`пристанище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.ANCH`), namedNode(`${skos}prefLabel`), literal(`якорная стоянка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}definition`), literal(`a coastal indentation between two capes or headlands, larger than a cove but smaller than a gulf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}definition`), literal(`изгиб берега  между двумя мысами, больше чем открытая гавань, но меньше чем залив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}notation`), literal(`H.BAY`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}prefLabel`), literal(`bay`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}prefLabel`), literal(`bukt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}prefLabel`), literal(`vik, bukt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}prefLabel`), literal(`бухта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAY`), namedNode(`${skos}prefLabel`), literal(`залив`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}definition`), literal(`coastal indentations between two capes or headlands, larger than a cove but smaller than a gulf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}definition`), literal(`изгибы берега  между двумя мысами, больше чем открытая гавань, но меньше чем залив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}notation`), literal(`H.BAYS`), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}prefLabel`), literal(`bays`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}prefLabel`), literal(`bukter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}prefLabel`), literal(`vikar, bukter`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}prefLabel`), literal(`бухты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BAYS`), namedNode(`${skos}prefLabel`), literal(`заливи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}definition`), literal(`an open body of water forming a slight recession in a coastline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}definition`), literal(`открытый участок воды; там, где происходит отступание береговой черты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}notation`), literal(`H.BGHT`), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}prefLabel`), literal(`bight(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}prefLabel`), literal(`bukt(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}prefLabel`), literal(`vik`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}prefLabel`), literal(`ивица(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BGHT`), namedNode(`${skos}prefLabel`), literal(`излучина (реки)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}definition`), literal(`an elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for most surface navigation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}definition`), literal(`возвышенность, которая обычно располагается на мелководье; однако количества воды достаточно для надводного судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}notation`), literal(`H.BNK`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}prefLabel`), literal(`bank(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}prefLabel`), literal(`banker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}prefLabel`), literal(`strandssluttning, strandvall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}prefLabel`), literal(`бряг(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNK`), namedNode(`${skos}prefLabel`), literal(`нанос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}definition`), literal(`a sloping margin of a stream channel which normally confines the stream to its channel on land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}definition`), literal(`косой берег реки, который удерживает поток воды в своих границах`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}notation`), literal(`H.BNKR`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}prefLabel`), literal(`elvebredd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}prefLabel`), literal(`flodstrand`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}prefLabel`), literal(`stream bank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}prefLabel`), literal(`бряг изложен на течение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKR`), namedNode(`${skos}prefLabel`), literal(`речной берег`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}notation`), literal(`H.BNKX`), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}prefLabel`), literal(`del av bredd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}prefLabel`), literal(`del av flodstrand`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}prefLabel`), literal(`section of bank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}prefLabel`), literal(`участок берега`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BNKX`), namedNode(`${skos}prefLabel`), literal(`част от бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}definition`), literal(`a wetland characterized by peat forming sphagnum moss, sedge, and other acid-water plants`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}definition`), literal(`заболоченная территория, которая является благоприятной почвой для торфяного мха, осоки и других болотных растений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}notation`), literal(`H.BOG`), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}prefLabel`), literal(`bog(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}prefLabel`), literal(`kärr, träsk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}prefLabel`), literal(`myr`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}prefLabel`), literal(`блато(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.BOG`), namedNode(`${skos}prefLabel`), literal(`болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}definition`), literal(`a dome-shaped mass of glacial ice covering an area of  mountain summits or other high lands; smaller than an ice sheet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}definition`), literal(`куполообразная масса ледникового льда, покрывающая гонные вершины; по размеру меньше ледникового щита`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}notation`), literal(`H.CAPG`), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}prefLabel`), literal(`icecap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}prefLabel`), literal(`iskalott`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}prefLabel`), literal(`iskappe`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}prefLabel`), literal(`ледена покривка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CAPG`), namedNode(`${skos}prefLabel`), literal(`шапка полярного льда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}definition`), literal(`the deepest part of a stream, bay, lagoon, or strait, through which the main current flows`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}definition`), literal(`самый глубоки участок реки, пролива, залива, лагуны; через него проходит основной поток воды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}notation`), literal(`H.CHN`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}prefLabel`), literal(`channel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}prefLabel`), literal(`kanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}prefLabel`), literal(`kanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}prefLabel`), literal(`канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHN`), namedNode(`${skos}prefLabel`), literal(`русло`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}definition`), literal(`that part of a lake having water deep enough for navigation between islands, shoals, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}definition`), literal(`наиболее глубокое место в озере; здесь могут проходить суда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}notation`), literal(`H.CHNL`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}prefLabel`), literal(`lake channel(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}prefLabel`), literal(`seilingskanal i innsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}prefLabel`), literal(`sjökanal(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}prefLabel`), literal(`езерен канал(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNL`), namedNode(`${skos}prefLabel`), literal(`омут`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}definition`), literal(`that part of a body of water deep enough for navigation through an area otherwise not suitable`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}definition`), literal(`канал, предназначенный для судоходной связи между морями`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}notation`), literal(`H.CHNM`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}prefLabel`), literal(`marine channel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}prefLabel`), literal(`marinkanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}prefLabel`), literal(`skipsled på sjøen`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}prefLabel`), literal(`морски канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNM`), namedNode(`${skos}prefLabel`), literal(`морской канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}definition`), literal(`a buoyed channel of sufficient depth for the safe navigation of vessels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}definition`), literal(`огражденный буями пролив, достаточно глубокий для безопасного судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}notation`), literal(`H.CHNN`), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}prefLabel`), literal(`merket skipsled`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}prefLabel`), literal(`navigation channel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}prefLabel`), literal(`navigeringskanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}prefLabel`), literal(`навигационен канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CHNN`), namedNode(`${skos}prefLabel`), literal(`судоходное русло`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}definition`), literal(`a place where two or more streams or intermittent streams flow together`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}definition`), literal(`место, где две (или больше) реки соединяются в одну`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}notation`), literal(`H.CNFL`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}prefLabel`), literal(`confluence`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}prefLabel`), literal(`sammanflöde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}prefLabel`), literal(`sammenløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}prefLabel`), literal(`место слияние (рек)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNFL`), namedNode(`${skos}prefLabel`), literal(`устие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}definition`), literal(`an artificial watercourse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}definition`), literal(`искусственная река`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}notation`), literal(`H.CNL`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}prefLabel`), literal(`kanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}prefLabel`), literal(`kanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}prefLabel`), literal(`канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}prefLabel`), literal(`canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNL`), namedNode(`${skos}prefLabel`), literal(`канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}definition`), literal(`a conduit used to carry water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}definition`), literal(`трубопровод, используемый для передачи воды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}notation`), literal(`H.CNLA`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}prefLabel`), literal(`akvedukt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}prefLabel`), literal(`akvedukt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}prefLabel`), literal(`aqueduct`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}prefLabel`), literal(`аквадукт`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLA`), namedNode(`${skos}prefLabel`), literal(`акведук/водопровод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}definition`), literal(`a conspicuously curved or bent section of a canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}definition`), literal(`изогнутый участок канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}notation`), literal(`H.CNLB`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}prefLabel`), literal(`canal bend`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}prefLabel`), literal(`kanalkrök`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}prefLabel`), literal(`kanalsving`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}prefLabel`), literal(`излучина канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLB`), namedNode(`${skos}prefLabel`), literal(`канална връзка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}definition`), literal(`an artificial waterway carrying water away from a wetland or from drainage ditches`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}definition`), literal(`искусственный судоходный канал, забирает лишнюю воду  либо в заболоченной местности, либо из дренажного канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}notation`), literal(`H.CNLD`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}prefLabel`), literal(`drainage canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}prefLabel`), literal(`dreneringskanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}prefLabel`), literal(`dräneringskanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}prefLabel`), literal(`водоотводный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLD`), namedNode(`${skos}prefLabel`), literal(`отводнителен канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}definition`), literal(`a canal which serves as a main conduit for irrigation water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}definition`), literal(`канал, который служит главным средством передачи воды для орошения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}notation`), literal(`H.CNLI`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}prefLabel`), literal(`bevattningskanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}prefLabel`), literal(`irrigation canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}prefLabel`), literal(`vanningskanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}prefLabel`), literal(`напоителен канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLI`), namedNode(`${skos}prefLabel`), literal(`оросительный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}definition`), literal(`a watercourse constructed for navigation of vessels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}definition`), literal(`канал, предназначенный для судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}notation`), literal(`H.CNLN`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}prefLabel`), literal(`navigation canal(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}prefLabel`), literal(`navigeringskanaler`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}prefLabel`), literal(`seilingskanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}prefLabel`), literal(`навигационен канал(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLN`), namedNode(`${skos}prefLabel`), literal(`судоходный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}notation`), literal(`H.CNLQ`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}prefLabel`), literal(`abandoned canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt kanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}prefLabel`), literal(`övergiven kanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}prefLabel`), literal(`заброшенный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLQ`), namedNode(`${skos}prefLabel`), literal(`изоставен канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}definition`), literal(`a gently inclined underground tunnel bringing water for irrigation from aquifers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}definition`), literal(`подземный туннель, по которому течет вода, используемая  для орошения; вода берется из водоносного слоя почвы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}notation`), literal(`H.CNLSB`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}prefLabel`), literal(`underground irrigation canal(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}prefLabel`), literal(`underjordisk bevattningskanal(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}prefLabel`), literal(`underjordisk vanningskanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}prefLabel`), literal(`подземна напоителна система`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLSB`), namedNode(`${skos}prefLabel`), literal(`подземный оросительный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}notation`), literal(`H.CNLX`), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}prefLabel`), literal(`del av kanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}prefLabel`), literal(`del av kanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}prefLabel`), literal(`section of canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}prefLabel`), literal(`сечение канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CNLX`), namedNode(`${skos}prefLabel`), literal(`част от канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}definition`), literal(`a small coastal indentation, smaller than a bay`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}definition`), literal(`защищённое, закрытое место в скалах на морском берегу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}notation`), literal(`H.COVE`), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}prefLabel`), literal(`cove(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}prefLabel`), literal(`kil`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}prefLabel`), literal(`liten vik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}prefLabel`), literal(`заливче`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.COVE`), namedNode(`${skos}prefLabel`), literal(`прибойная пещера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}definition`), literal(`a meandering channel in a coastal wetland subject to bi-directional tidal currents`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}definition`), literal(`извилистый канал на прибрежной заболоченной территории, по которому идет двустороннее приливное течение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}notation`), literal(`H.CRKT`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}prefLabel`), literal(`tidal creek(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}prefLabel`), literal(`tidevannselv`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}prefLabel`), literal(`tidvattensvik(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}prefLabel`), literal(`небольшой временный водоток (связанный с приливами и отливами)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRKT`), namedNode(`${skos}prefLabel`), literal(`приливно заливче`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}definition`), literal(`a horizontal flow of water in a given direction with uniform velocity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}definition`), literal(`горизонтальный поток воды в заданном направлении с одинаковой скоростью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}notation`), literal(`H.CRNT`), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}prefLabel`), literal(`current`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}prefLabel`), literal(`ström, strömning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}prefLabel`), literal(`strøm`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}prefLabel`), literal(`течение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.CRNT`), namedNode(`${skos}prefLabel`), literal(`течение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}definition`), literal(`a channel formed as a result of a stream cutting through a meander neck`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}definition`), literal(`канал, образованный в результате потока воды, идущей  через шейку меандра`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}notation`), literal(`H.CUTF`), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}prefLabel`), literal(`avskåret`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}prefLabel`), literal(`cutoff`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}prefLabel`), literal(`cutoff`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}prefLabel`), literal(`обводной канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.CUTF`), namedNode(`${skos}prefLabel`), literal(`скъсяване`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}definition`), literal(`a waterway between two piers, or cut into the land for the berthing of ships`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}definition`), literal(`портовое сооружение для ремонта и постройки судов.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}notation`), literal(`H.DCK`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}prefLabel`), literal(`dock(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}prefLabel`), literal(`dokk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}prefLabel`), literal(`skeppsdocka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}prefLabel`), literal(`док`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCK`), namedNode(`${skos}prefLabel`), literal(`пристанище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}definition`), literal(`a part of a harbor where ships dock`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}definition`), literal(`часть гавани, предназначенная для стоянки судов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}notation`), literal(`H.DCKB`), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}prefLabel`), literal(`docking basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}prefLabel`), literal(`fartygsdocka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}prefLabel`), literal(`havnebasseng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}prefLabel`), literal(`басейнов док`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DCKB`), namedNode(`${skos}prefLabel`), literal(`портовый бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}definition`), literal(`a comparatively elevated area on an icecap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}definition`), literal(`небольшая возвышенность на поверхности ледника`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}notation`), literal(`H.DOMG`), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}prefLabel`), literal(`icecap dome`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}prefLabel`), literal(`iskuppel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}prefLabel`), literal(`välvd iskalott`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}prefLabel`), literal(`ледено покритие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DOMG`), namedNode(`${skos}prefLabel`), literal(`ледниковый купол`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}definition`), literal(`a comparatively depressed area on an icecap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}definition`), literal(`небольшое углубление на поверхности ледника`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}notation`), literal(`H.DPRG`), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}prefLabel`), literal(`fordypning i iskappen`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}prefLabel`), literal(`icecap depression`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}prefLabel`), literal(`sänka i iskalott`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}prefLabel`), literal(`заледена падина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DPRG`), namedNode(`${skos}prefLabel`), literal(`ледниковая впадина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}definition`), literal(`a small artificial watercourse dug for draining or irrigating the land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}definition`), literal(`небольшой искусственный водоем, используемый для осушения и орошения территории`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}notation`), literal(`H.DTCH`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}prefLabel`), literal(`dike`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}prefLabel`), literal(`ditch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}prefLabel`), literal(`grøft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}prefLabel`), literal(`канава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCH`), namedNode(`${skos}prefLabel`), literal(`канавка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}definition`), literal(`a ditch which serves to drain the land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}definition`), literal(`канава, используемая для осушения территории`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}notation`), literal(`H.DTCHD`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}prefLabel`), literal(`drainage ditch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}prefLabel`), literal(`dreneringsgrøft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}prefLabel`), literal(`dräneringsdike`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}prefLabel`), literal(`водоотводная канава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHD`), namedNode(`${skos}prefLabel`), literal(`отводнителна канавка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}definition`), literal(`a ditch which serves to distribute irrigation water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}definition`), literal(`канава, используемая для орошения почвы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}notation`), literal(`H.DTCHI`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}prefLabel`), literal(`bevattningsdike`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}prefLabel`), literal(`irrigation ditch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}prefLabel`), literal(`vanningsgrøft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}prefLabel`), literal(`напоителна канавка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHI`), namedNode(`${skos}prefLabel`), literal(`оросительная канава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}definition`), literal(`an area where a drainage ditch enters a lagoon, lake or bay`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}definition`), literal(`место, где осушительный канал впадает в лагуну, озеро или залив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}notation`), literal(`H.DTCHM`), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}prefLabel`), literal(`dikesmynning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}prefLabel`), literal(`ditch mouth(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}prefLabel`), literal(`grøfteutløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}prefLabel`), literal(`заустване на канавка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.DTCHM`), namedNode(`${skos}prefLabel`), literal(`устье канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}definition`), literal(`a funnel-shaped stream mouth or embayment where fresh water mixes with sea water under tidal influences`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}definition`), literal(`однорукавное, воронкообразное устье реки, расширяющееся в сторону моря`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}notation`), literal(`H.ESTY`), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}prefLabel`), literal(`elvemunning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}prefLabel`), literal(`estuary`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}prefLabel`), literal(`flodmynning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}prefLabel`), literal(`заливно устие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.ESTY`), namedNode(`${skos}prefLabel`), literal(`эстуарий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}definition`), literal(`a fishing ground, bank or area where fishermen go to catch fish`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}definition`), literal(`место ловли рыбы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}notation`), literal(`H.FISH`), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}prefLabel`), literal(`fishing area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}prefLabel`), literal(`fiskeområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}prefLabel`), literal(`fiskeområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}prefLabel`), literal(`риболовен район`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FISH`), namedNode(`${skos}prefLabel`), literal(`рыболовная зона`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}definition`), literal(`a long, narrow, steep-walled, deep-water arm of the sea at high latitudes, usually along mountainous coasts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}definition`), literal(`узкий, длинный, глубоководный морской залив с крутыми берегами; берега фьорда  в большинстве случаев образованы высокими скалами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}notation`), literal(`H.FJD`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}prefLabel`), literal(`fjord`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}prefLabel`), literal(`fjord`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}prefLabel`), literal(`fjord`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}prefLabel`), literal(`фиорд`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJD`), namedNode(`${skos}prefLabel`), literal(`фьорд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}definition`), literal(`long, narrow, steep-walled, deep-water arms of the sea at high latitudes, usually along mountainous coasts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}definition`), literal(`узкие, длинные, глубоководные морские заливы с крутыми берегами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}notation`), literal(`H.FJDS`), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}prefLabel`), literal(`fjordar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}prefLabel`), literal(`fjorder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}prefLabel`), literal(`fjords`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}prefLabel`), literal(`фиорди`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FJDS`), namedNode(`${skos}prefLabel`), literal(`фьорды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}definition`), literal(`a perpendicular or very steep descent of the water of a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}definition`), literal(`падение воды в реке с уступа, пересекающего речное русло`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}notation`), literal(`H.FLLS`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}prefLabel`), literal(`foss`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}prefLabel`), literal(`vattenfall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}prefLabel`), literal(`waterfall(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}prefLabel`), literal(`водопад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLS`), namedNode(`${skos}prefLabel`), literal(`водопад(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}notation`), literal(`H.FLLSX`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}prefLabel`), literal(`del av foss`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}prefLabel`), literal(`del av vattenfall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}prefLabel`), literal(`section of waterfall(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}prefLabel`), literal(`участок водопада`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLLSX`), namedNode(`${skos}prefLabel`), literal(`част от водопад(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}definition`), literal(`a relatively level area of mud either between high and low tide lines, or subject to flooding`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}definition`), literal(`средних размеров площадь илистого грунта, занимает промежуточное место между высокой и низкой границами прилива, подвергается затоплению`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}notation`), literal(`H.FLTM`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}prefLabel`), literal(`mud flat(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}prefLabel`), literal(`mud flat(s)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}prefLabel`), literal(`slamområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}prefLabel`), literal(`тинесто мочурище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTM`), namedNode(`${skos}prefLabel`), literal(`топь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}definition`), literal(`a large flat area of mud or sand attached to the shore and alternately covered and uncovered by the tide`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}definition`), literal(`береговая полоса, покрываемая водой при приливе`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}notation`), literal(`H.FLTT`), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}prefLabel`), literal(`tidal flat(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}prefLabel`), literal(`tidal flat(s)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}prefLabel`), literal(`tidevannsområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}prefLabel`), literal(`заливно мочурище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.FLTT`), namedNode(`${skos}prefLabel`), literal(`приливно-отливная отмель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}definition`), literal(`a mass of ice, usually at high latitudes or high elevations, with sufficient thickness to flow away from the source area in lobes, tongues, or masses`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}definition`), literal(`масса льда преимущественно атмосферного происхождения, испытывающая вязкопластическое течение под действием силы тяжести и принявшая форму потока, системы потоков, купола (щита) или плавучей плиты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}notation`), literal(`H.GLCR`), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}prefLabel`), literal(`glacier(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}prefLabel`), literal(`glaciär(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}prefLabel`), literal(`isbre`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}prefLabel`), literal(`ледник`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.GLCR`), namedNode(`${skos}prefLabel`), literal(`ледник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}definition`), literal(`a large recess in the coastline, larger than a bay`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}definition`), literal(`вдавшаяся в сушу часть моря`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}notation`), literal(`H.GULF`), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}prefLabel`), literal(`залив`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}prefLabel`), literal(`golf`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}prefLabel`), literal(`golf, bukt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}prefLabel`), literal(`gulf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GULF`), namedNode(`${skos}prefLabel`), literal(`морской залив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}definition`), literal(`a type of hot spring with intermittent eruptions of jets of hot water and steam`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}definition`), literal(`источник вулканического происхождения, выбрасывающий через определённые промежутки времени фонтаны горячей воды и пара`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}notation`), literal(`H.GYSR`), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}prefLabel`), literal(`geyser`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}prefLabel`), literal(`geyser`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}prefLabel`), literal(`geysir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}prefLabel`), literal(`гейзер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.GYSR`), namedNode(`${skos}prefLabel`), literal(`гейзер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}definition`), literal(`a haven or space of deep water so sheltered by the adjacent land as to afford a safe anchorage for ships`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}definition`), literal(`естественная или искусственная защищенная от ветра и волн прибрежная часть водного пространства, служащая местом стоянки, причала и ремонта судов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}notation`), literal(`H.HBR`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}prefLabel`), literal(`пристанище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}prefLabel`), literal(`hamn(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}prefLabel`), literal(`harbor(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}prefLabel`), literal(`havn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBR`), namedNode(`${skos}prefLabel`), literal(`гавань`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}notation`), literal(`H.HBRX`), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}prefLabel`), literal(`del av hamn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}prefLabel`), literal(`del av havn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}prefLabel`), literal(`section of harbor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}prefLabel`), literal(`участок гавани`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.HBRX`), namedNode(`${skos}prefLabel`), literal(`част от пристанище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}definition`), literal(`a narrow waterway extending into the land, or connecting a bay or lagoon with a larger body of water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}definition`), literal(`узкий водный путь, простирающийся до суши; или связывающий бухту или лагуну с большим водным образованием`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}notation`), literal(`H.INLT`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}prefLabel`), literal(`inlet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}prefLabel`), literal(`innløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}prefLabel`), literal(`vik, sund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}prefLabel`), literal(`проток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLT`), namedNode(`${skos}prefLabel`), literal(`узкий пролив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}definition`), literal(`an inlet which has been filled in, or blocked by deposits`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}definition`), literal(`узкий пролив, который ранее был пригоден для судоходства, в настоящее время пролив засыпан`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}notation`), literal(`H.INLTQ`), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}prefLabel`), literal(`former inlet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}prefLabel`), literal(`tidigare vik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}prefLabel`), literal(`tidligere innløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}prefLabel`), literal(`бивш проток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.INLTQ`), namedNode(`${skos}prefLabel`), literal(`засыпанный узкий пролив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}definition`), literal(`a dried up or drained area of a former lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}definition`), literal(`место, которое осталось после высохшего или специально осушенного озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}notation`), literal(`H.LBED`), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}prefLabel`), literal(`gammel innsjøbunn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}prefLabel`), literal(`lake bed(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}prefLabel`), literal(`sjöbotten`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}prefLabel`), literal(`легло на езеро(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LBED`), namedNode(`${skos}prefLabel`), literal(`озерная котловина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}definition`), literal(`a shallow coastal waterbody, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}definition`), literal(`мелководный залив или озеро, отделившиеся от моря вследствие образования песчаной полосы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}notation`), literal(`H.LGN`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}prefLabel`), literal(`lagoon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}prefLabel`), literal(`lagun`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}prefLabel`), literal(`lagune`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}prefLabel`), literal(`лагуна`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGN`), namedNode(`${skos}prefLabel`), literal(`лагуна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}definition`), literal(`shallow coastal waterbodies, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}definition`), literal(`мелководные заливы или озеро, отделившиеся от моря вследствие образования песчаной полосы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}notation`), literal(`H.LGNS`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}prefLabel`), literal(`lagoons`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}prefLabel`), literal(`laguner`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}prefLabel`), literal(`laguner`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}prefLabel`), literal(`лагуни`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNS`), namedNode(`${skos}prefLabel`), literal(`лагуны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}notation`), literal(`H.LGNX`), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}prefLabel`), literal(`del av lagun`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}prefLabel`), literal(`del av lagune`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}prefLabel`), literal(`section of lagoon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}prefLabel`), literal(`участок лагуны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LGNX`), namedNode(`${skos}prefLabel`), literal(`част от кагуна`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}definition`), literal(`a large inland body of standing water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}definition`), literal(`замкнутый естественный водоём в углублении суши, котловине`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}notation`), literal(`H.LK`), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}prefLabel`), literal(`innsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}prefLabel`), literal(`lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}prefLabel`), literal(`sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}prefLabel`), literal(`езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LK`), namedNode(`${skos}prefLabel`), literal(`озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}definition`), literal(`a lake in a crater or caldera`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}definition`), literal(`озеро в кратере или кальдере (круглое или овальное углубление в жерле вулкана)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}notation`), literal(`H.LKC`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}prefLabel`), literal(`crater lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}prefLabel`), literal(`kratersjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}prefLabel`), literal(`kratersjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}prefLabel`), literal(`вулканично езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKC`), namedNode(`${skos}prefLabel`), literal(`кратерное озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}notation`), literal(`H.LKI`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}prefLabel`), literal(`intermittent lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}prefLabel`), literal(`periodisk sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende innsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающее озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKI`), namedNode(`${skos}prefLabel`), literal(`пресъхващо езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}definition`), literal(`an inland body of salt water with no outlet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}definition`), literal(`озеро, вода которого сильно минерализована; содержит большое количество солей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}notation`), literal(`H.LKN`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}prefLabel`), literal(`salt lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}prefLabel`), literal(`saltsjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}prefLabel`), literal(`saltsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}prefLabel`), literal(`солено езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKN`), namedNode(`${skos}prefLabel`), literal(`соленое озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}notation`), literal(`H.LKNI`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}prefLabel`), literal(`intermittent salt lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}prefLabel`), literal(`periodisk saltsjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende saltsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающее соленое озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKNI`), namedNode(`${skos}prefLabel`), literal(`пресъхващо солено езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}definition`), literal(`a crescent-shaped lake commonly found adjacent to meandering streams`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}definition`), literal(`серповидное озеро, прилегающее  к извилистым рекам`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}notation`), literal(`H.LKO`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}prefLabel`), literal(`kroksjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}prefLabel`), literal(`oxbow lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}prefLabel`), literal(`uformad sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}prefLabel`), literal(`корекция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKO`), namedNode(`${skos}prefLabel`), literal(`пойменное озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}notation`), literal(`H.LKOI`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}prefLabel`), literal(`intermittent oxbow lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}prefLabel`), literal(`peridodisk uformad sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende kroksjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающее пойменное озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKOI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи корекции`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}definition`), literal(`large inland bodies of standing water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}definition`), literal(`замкнутые естественные водоёмы в углублении суши, котловине`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}notation`), literal(`H.LKS`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}prefLabel`), literal(`innsjøer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}prefLabel`), literal(`lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}prefLabel`), literal(`sjöar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}prefLabel`), literal(`езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKS`), namedNode(`${skos}prefLabel`), literal(`озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}definition`), literal(`a standing body of water in a cave`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}definition`), literal(`озеро в карстовых пещерах, питающееся подземными водами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}notation`), literal(`H.LKSB`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}prefLabel`), literal(`underground lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}prefLabel`), literal(`underjordisk innsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}prefLabel`), literal(`underjordisk sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}prefLabel`), literal(`подземни езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSB`), namedNode(`${skos}prefLabel`), literal(`подземное озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}definition`), literal(`lakes in a crater or caldera`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}definition`), literal(`озера в кратере или кальдере (круглое или овальное углубление в жерле вулкана)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}notation`), literal(`H.LKSC`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}prefLabel`), literal(`crater lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}prefLabel`), literal(`kratersjöar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}prefLabel`), literal(`kratersjøer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}prefLabel`), literal(`вулканични езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSC`), namedNode(`${skos}prefLabel`), literal(`кратерные озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}notation`), literal(`H.LKSI`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}prefLabel`), literal(`intermittent lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}prefLabel`), literal(`periodiska sjöar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende innsjøer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}prefLabel`), literal(`исчезающие озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}definition`), literal(`inland bodies of salt water with no outlet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}definition`), literal(`озера, вода которых сильно минерализована; содержит большое количество солей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}notation`), literal(`H.LKSN`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}prefLabel`), literal(`salt lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}prefLabel`), literal(`saltsjöar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}prefLabel`), literal(`saltsjøer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}prefLabel`), literal(`солени езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSN`), namedNode(`${skos}prefLabel`), literal(`соленые озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}notation`), literal(`H.LKSNI`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}prefLabel`), literal(`intermittent salt lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}prefLabel`), literal(`periodiska saltsjöar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende saltsjøer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}prefLabel`), literal(`исчезающие соленые озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKSNI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи солени езера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}notation`), literal(`H.LKX`), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}prefLabel`), literal(`del av innsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}prefLabel`), literal(`del av sjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}prefLabel`), literal(`section of lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}prefLabel`), literal(`участок озера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.LKX`), namedNode(`${skos}prefLabel`), literal(`част от езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}definition`), literal(`diked salt ponds used in the production of solar evaporated salt`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}definition`), literal(`обвалованный соленые пруды, используемые в производстве  выварочной соли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}notation`), literal(`H.MFGN`), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}prefLabel`), literal(`salt evaporation ponds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}prefLabel`), literal(`saltdammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}prefLabel`), literal(`saltutvinningsbasseng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}prefLabel`), literal(`солено испаряващо се езерце`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MFGN`), namedNode(`${skos}prefLabel`), literal(`соленый испарительный пруд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}definition`), literal(`a tropical tidal mud flat characterized by mangrove vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}definition`), literal(`связанная с приливами и отливами, тропическая, илистая, равнинная местность, на которой произрастают мангровые растения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}notation`), literal(`H.MGV`), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}prefLabel`), literal(`mangrove swamp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}prefLabel`), literal(`mangrovesump`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}prefLabel`), literal(`mangroveträsk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}prefLabel`), literal(`мангрови блата`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MGV`), namedNode(`${skos}prefLabel`), literal(`мангровое болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}definition`), literal(`an area of open ground overlaid with wet peaty soils`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}definition`), literal(`залежи торфа, торфяное болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}notation`), literal(`H.MOOR`), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}prefLabel`), literal(`hed(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}prefLabel`), literal(`mo`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}prefLabel`), literal(`moor(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}prefLabel`), literal(`торфяник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MOOR`), namedNode(`${skos}prefLabel`), literal(`тресавище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}definition`), literal(`a wetland dominated by grass-like vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}definition`), literal(`заболоченная территория, заросшая травой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}notation`), literal(`H.MRSH`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}prefLabel`), literal(`myr`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}prefLabel`), literal(`marsh(es)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}prefLabel`), literal(`moras, sumpmark`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}prefLabel`), literal(`мочурище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSH`), namedNode(`${skos}prefLabel`), literal(`травяное болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}definition`), literal(`a flat area, subject to periodic salt water inundation, dominated by grassy salt-tolerant plants`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}definition`), literal(`равнинная местность, подверженная затоплению соленой водой; здесь произрастают преимущественно травянистые солеустойчивые растения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}notation`), literal(`H.MRSHN`), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}prefLabel`), literal(`marskland`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}prefLabel`), literal(`salt marsh`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}prefLabel`), literal(`salt sumpmark`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}prefLabel`), literal(`солени мочурища`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.MRSHN`), namedNode(`${skos}prefLabel`), literal(`соленое травяное болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}definition`), literal(`a navigable narrow part of a bay, strait, river, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}definition`), literal(`район водной поверхности, доступный для плавания по ширине и по глубинам, но стесняющий свободное маневрирование из-за близости берегов, рифов, отмелей и кос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}notation`), literal(`H.NRWS`), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}prefLabel`), literal(`narrows`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}prefLabel`), literal(`smale sund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}prefLabel`), literal(`trångt sund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}prefLabel`), literal(`тясна част на протоци`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.NRWS`), namedNode(`${skos}prefLabel`), literal(`узкости`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}definition`), literal(`one of the major divisions of the vast expanse of salt water covering part of the earth`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}definition`), literal(`непрерывная водная оболочка Земли, окружающая материки и острова и обладающая общностью солевого состава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}notation`), literal(`H.OCN`), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}prefLabel`), literal(`hav`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}prefLabel`), literal(`hav`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}prefLabel`), literal(`ocean`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}prefLabel`), literal(`океан`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.OCN`), namedNode(`${skos}prefLabel`), literal(`океан`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}definition`), literal(`an area of breaking waves caused by the meeting of currents or by waves moving against the current`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}definition`), literal(`круговращательное движение воды, происходящее от столкновения встречных течений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}notation`), literal(`H.OVF`), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}prefLabel`), literal(`vattenfall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}prefLabel`), literal(`brenninger`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}prefLabel`), literal(`overfalls`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}prefLabel`), literal(`бързеи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.OVF`), namedNode(`${skos}prefLabel`), literal(`водоворот`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}definition`), literal(`a small standing waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}definition`), literal(`небольшой водоем со стоячей водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}notation`), literal(`H.PND`), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}prefLabel`), literal(`damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}prefLabel`), literal(`pond`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}prefLabel`), literal(`tjern`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}prefLabel`), literal(`поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PND`), namedNode(`${skos}prefLabel`), literal(`пруд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}notation`), literal(`H.PNDI`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}prefLabel`), literal(`intermittent pond`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}prefLabel`), literal(`periodisk damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende tjern`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающий пруд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDI`), namedNode(`${skos}prefLabel`), literal(`пресъхващ поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}definition`), literal(`a small standing body of salt water often in a marsh or swamp, usually along a seacoast`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}definition`), literal(`небольшой водоем с соленой водой, обычно в болотистой местности, или вдоль морского побережья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}notation`), literal(`H.PNDN`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}prefLabel`), literal(`salt pond`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}prefLabel`), literal(`saltdamm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}prefLabel`), literal(`saltvannsdam`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}prefLabel`), literal(`солено езерце`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDN`), namedNode(`${skos}prefLabel`), literal(`соленый пруд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}notation`), literal(`H.PNDNI`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}prefLabel`), literal(`intermittent salt pond(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}prefLabel`), literal(`periodiska saltdammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende saltvannsdam`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающий соленый пруд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDNI`), namedNode(`${skos}prefLabel`), literal(`пресъхващо солено езерце(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}definition`), literal(`small standing waterbodies`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}definition`), literal(`небольшие водоемы со стоячей водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}notation`), literal(`H.PNDS`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}prefLabel`), literal(`dammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}prefLabel`), literal(`dammer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}prefLabel`), literal(`ponds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}prefLabel`), literal(`езерца`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDS`), namedNode(`${skos}prefLabel`), literal(`пруды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}definition`), literal(`ponds or enclosures in which fish are kept or raised`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}definition`), literal(`специальный искусственный водоем, в котором разводят рыб`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}notation`), literal(`H.PNDSF`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}prefLabel`), literal(`fishponds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}prefLabel`), literal(`fiskdammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}prefLabel`), literal(`fiskedammer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}prefLabel`), literal(`пруд для разведения рыб`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSF`), namedNode(`${skos}prefLabel`), literal(`рибарник`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}notation`), literal(`H.PNDSI`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}prefLabel`), literal(`intermittent ponds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}prefLabel`), literal(`periodiska dammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende dammer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающие пруды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи езерца`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}definition`), literal(`small standing bodies of salt water often in a marsh or swamp, usually along a seacoast`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}definition`), literal(`небольшие водоемы с соленой водой, обычно в болотистой местности, или вдоль морского побережья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}notation`), literal(`H.PNDSN`), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}prefLabel`), literal(`saltdammar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}prefLabel`), literal(`salt ponds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}prefLabel`), literal(`saltvannsdammer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}prefLabel`), literal(`солени езерца`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.PNDSN`), namedNode(`${skos}prefLabel`), literal(`соленые пруды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}definition`), literal(`a small and comparatively still, deep part of a larger body of water such as a stream or harbor; or a small body of standing water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}definition`), literal(`водоем со стоячей водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}notation`), literal(`H.POOL`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}prefLabel`), literal(`kulp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}prefLabel`), literal(`pool(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}prefLabel`), literal(`pöl, damm, pool`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}prefLabel`), literal(`бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOL`), namedNode(`${skos}prefLabel`), literal(`вир(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}notation`), literal(`H.POOLI`), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}prefLabel`), literal(`intermittent pool`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}prefLabel`), literal(`peridodisk pool`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende kulp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}prefLabel`), literal(`временно исчезающий водоем`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.POOLI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи вирове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}definition`), literal(`a straight section of a navigable stream or channel between two bends`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}definition`), literal(`участок реки между изгибами, перекатами с широким, спокойным течением и большей, чем на перекатах, глубиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}notation`), literal(`H.RCH`), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}prefLabel`), literal(`reach`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}prefLabel`), literal(`rett elve- eller kanalstrekning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}prefLabel`), literal(`utvidgning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}prefLabel`), literal(`плёс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RCH`), namedNode(`${skos}prefLabel`), literal(`част на река между два завоя/на канал между два шлюза`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}definition`), literal(`a linear elevation on an icecap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}definition`), literal(`узкая и длинная возвышенность на ледниковой поверхности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}notation`), literal(`H.RDGG`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}prefLabel`), literal(`шапка полярного льда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}prefLabel`), literal(`icecap ridge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}prefLabel`), literal(`iskalottsfåra`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}prefLabel`), literal(`iskapperygg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDGG`), namedNode(`${skos}prefLabel`), literal(`заледена част на река между два завоя/на канал между два шлюза`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}definition`), literal(`an open anchorage affording less protection than a harbor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}definition`), literal(`часть акватории порта, предназначенная для якорной стоянки судов и перегрузки грузов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}notation`), literal(`H.RDST`), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}prefLabel`), literal(`redd`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}prefLabel`), literal(`roadstead`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}prefLabel`), literal(`åpen ankerplass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}prefLabel`), literal(`пристанище далеч от брега`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RDST`), namedNode(`${skos}prefLabel`), literal(`рейд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}definition`), literal(`a surface-navigation hazard composed of consolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}definition`), literal(`резкое надводное или подводное возвышение морского дна на мелководьях, препятствующее судоходству`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}notation`), literal(`H.RF`), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}prefLabel`), literal(`reef(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}prefLabel`), literal(`rev`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}prefLabel`), literal(`rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}prefLabel`), literal(`риф(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RF`), namedNode(`${skos}prefLabel`), literal(`риф(ы)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}definition`), literal(`a surface-navigation hazard composed of coral`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}definition`), literal(`подводные геологические образования из органогенных известняков, представляющие собой препятствия (опасности) для навигации`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}notation`), literal(`H.RFC`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}prefLabel`), literal(`coral reef(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}prefLabel`), literal(`korallrev`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}prefLabel`), literal(`korallrev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}prefLabel`), literal(`коралловые рифы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFC`), namedNode(`${skos}prefLabel`), literal(`коралов риф(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}notation`), literal(`H.RFX`), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}prefLabel`), literal(`del av rev`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}prefLabel`), literal(`del av rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}prefLabel`), literal(`section of reef`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}prefLabel`), literal(`участок риф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RFX`), namedNode(`${skos}prefLabel`), literal(`част от риф`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}definition`), literal(`a turbulent section of a stream associated with a steep, irregular stream bed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}definition`), literal(`мелководный каменистый или скалистый участок в русле реки с относительно большим падением уровня воды и повышенной скоростью течения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}notation`), literal(`H.RPDS`), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}prefLabel`), literal(`бързеи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}prefLabel`), literal(`forsar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}prefLabel`), literal(`rapids`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}prefLabel`), literal(`stryk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RPDS`), namedNode(`${skos}prefLabel`), literal(`пороги реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}definition`), literal(`an artificial pond or lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}definition`), literal(`искусственный водоём, образованный, как правило, в долине реки водоподпорными сооружениями для накопления и хранения воды в целях её использования в народном хозяйстве`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}notation`), literal(`H.RSV`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}prefLabel`), literal(`reservoar`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}prefLabel`), literal(`reservoar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}prefLabel`), literal(`reservoir(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}prefLabel`), literal(`водохранилище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSV`), namedNode(`${skos}prefLabel`), literal(`водохранилище(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}notation`), literal(`H.RSVI`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}prefLabel`), literal(`intermittent reservoir`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}prefLabel`), literal(`periodisk reservoar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende reservoar`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}prefLabel`), literal(`периодически пересыхающее водохранилище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи водохранилища`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}definition`), literal(`a contained pool or tank of water at, below, or above ground level`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}definition`), literal(`наполненный водой бак или резервуар, находящийся на, выше или ниже уровня земли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}notation`), literal(`H.RSVT`), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}prefLabel`), literal(`vanntank`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}prefLabel`), literal(`vattentank`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}prefLabel`), literal(`water tank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}prefLabel`), literal(`воден ресервуар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RSVT`), namedNode(`${skos}prefLabel`), literal(`водяной бак`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}definition`), literal(`a small, narrow, deep, steep-sided stream channel, smaller than a gorge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}definition`), literal(`глубокая длинная впадина на поверхности земли, образовавшаяся от действия дождевых и талых вод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}notation`), literal(`H.RVN`), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}prefLabel`), literal(`ravin(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}prefLabel`), literal(`ravine`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}prefLabel`), literal(`ravine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}prefLabel`), literal(`клисура(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.RVN`), namedNode(`${skos}prefLabel`), literal(`овраг`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}definition`), literal(`a salt flat or salt encrusted plain subject to periodic inundation from flooding or high tides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}definition`), literal(`замкнутое бессточное понижение рельефа с плоским глинистым днищем, занятым солончаками`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}notation`), literal(`H.SBKH`), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}prefLabel`), literal(`sabkha (oversvømt område)`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}prefLabel`), literal(`sabkha`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}prefLabel`), literal(`sabkha(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}prefLabel`), literal(`себха`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SBKH`), namedNode(`${skos}prefLabel`), literal(`сухо легло на солено езеро(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}definition`), literal(`a long arm of the sea forming a channel between the mainland and an island or islands; or connecting two larger bodies of water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}definition`), literal(`длинный морской рукав, образующий пролив между материком и островом, или островами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}notation`), literal(`H.SD`), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}prefLabel`), literal(`sound`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}prefLabel`), literal(`sund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}prefLabel`), literal(`sund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}prefLabel`), literal(`морски ръкав`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SD`), namedNode(`${skos}prefLabel`), literal(`широкая лагуна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}definition`), literal(`a large body of salt water more or less confined by continuous land or chains of islands forming a subdivision of an ocean`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}definition`), literal(`большое водное пространство, ограниченное с одной или нескольких сторон сушей и отделяемое от самого океана островами или возвышенностями подводного рельефа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}notation`), literal(`H.SEA`), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}prefLabel`), literal(`hav`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}prefLabel`), literal(`sea`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}prefLabel`), literal(`sjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}prefLabel`), literal(`море`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SEA`), namedNode(`${skos}prefLabel`), literal(`море`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}definition`), literal(`a surface-navigation hazard composed of unconsolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}definition`), literal(`участок (обычно прибрежный) реки, озера и т.п. с небольшой глубиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}notation`), literal(`H.SHOL`), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}prefLabel`), literal(`grund, rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}prefLabel`), literal(`sandgrunne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}prefLabel`), literal(`shoal(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}prefLabel`), literal(`мелководье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SHOL`), namedNode(`${skos}prefLabel`), literal(`плитчина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}definition`), literal(`the low part of an underwater gap or saddle separating basins, including a similar feature at the mouth of a fjord`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}definition`), literal(`вытянутое горное поднятие на дне океанов и морей. Часто подводные хребты выступают над поверхностью воды в виде островов или целых архипелагов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}notation`), literal(`H.SILL`), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}prefLabel`), literal(`sill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}prefLabel`), literal(`terskel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}prefLabel`), literal(`tröskel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}prefLabel`), literal(`врата на шлюз`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SILL`), namedNode(`${skos}prefLabel`), literal(`подводный хребет`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}definition`), literal(`a place where ground water flows naturally out of the ground`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}definition`), literal(`водный источник, бьющий, текущий из глубины земли; ключ`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}notation`), literal(`H.SPNG`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}prefLabel`), literal(`kilde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}prefLabel`), literal(`källa(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}prefLabel`), literal(`spring(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}prefLabel`), literal(`извор(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNG`), namedNode(`${skos}prefLabel`), literal(`родник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}definition`), literal(`a place where sulphur ground water flows naturally out of the ground`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}definition`), literal(`источник воды, насыщенной сероводородом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}notation`), literal(`H.SPNS`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}prefLabel`), literal(`sulphur spring(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}prefLabel`), literal(`svavelkälla(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}prefLabel`), literal(`svovelkilde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}prefLabel`), literal(`серен извор(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNS`), namedNode(`${skos}prefLabel`), literal(`серный источник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}definition`), literal(`a place where hot ground water flows naturally out of the ground`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}definition`), literal(`источник термальных вод, температура которых выше 20°C`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}notation`), literal(`H.SPNT`), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}prefLabel`), literal(`hot spring(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}prefLabel`), literal(`varm kilde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}prefLabel`), literal(`varmkälla (or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}prefLabel`), literal(`горещ извор(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SPNT`), namedNode(`${skos}prefLabel`), literal(`термальный источник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}definition`), literal(`a body of running water moving to a lower level in a channel on land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}definition`), literal(`небольшой мелкий водоток с постоянным или временным течением`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}notation`), literal(`H.STM`), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}prefLabel`), literal(`поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}prefLabel`), literal(`bekk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}prefLabel`), literal(`stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}prefLabel`), literal(`å, bäck, ström`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STM`), namedNode(`${skos}prefLabel`), literal(`ручей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}definition`), literal(`a diverging branch flowing out of a main stream and rejoining it downstream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}definition`), literal(`водоток, отходящий от реки и впадающий в неё ниже по течению;`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}notation`), literal(`H.STMA`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}prefLabel`), literal(`anabranch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}prefLabel`), literal(`bifurkation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}prefLabel`), literal(`elvearm som vender tilbake til hovedløpet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}prefLabel`), literal(`протока`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMA`), namedNode(`${skos}prefLabel`), literal(`речен скален остров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}definition`), literal(`a conspicuously curved or bent segment of a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}definition`), literal(`крутой поворот, изгиб ручья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}notation`), literal(`H.STMB`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}prefLabel`), literal(`elvesving`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}prefLabel`), literal(`stream bend`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}prefLabel`), literal(`åkrök`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}prefLabel`), literal(`завой на поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMB`), namedNode(`${skos}prefLabel`), literal(`излучина ручья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}definition`), literal(`a stream that has been substantially ditched, diked, or straightened`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}definition`), literal(`естественный или искусственный водный поток канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}notation`), literal(`H.STMC`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}prefLabel`), literal(`canalized stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}prefLabel`), literal(`kanaliserat vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}prefLabel`), literal(`kanalisert bekk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}prefLabel`), literal(`водоток канала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMC`), namedNode(`${skos}prefLabel`), literal(`канализиран поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}definition`), literal(`a branch which flows away from the main stream, as in a delta or irrigation canal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}definition`), literal(`ответвление, отходящее от главного русла реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}notation`), literal(`H.STMD`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}prefLabel`), literal(`biflod(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}prefLabel`), literal(`distributary(-ies)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}prefLabel`), literal(`flodarm som ikke vender tilbake til hovedløpet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}prefLabel`), literal(`речен ръкав(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMD`), namedNode(`${skos}prefLabel`), literal(`рукав реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}definition`), literal(`the source and upper part of a stream, including the upper drainage basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}definition`), literal(`часть реки, близкая к её истокам; прилегающая к ней местность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}notation`), literal(`H.STMH`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}prefLabel`), literal(`headwaters`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}prefLabel`), literal(`källfloder`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}prefLabel`), literal(`utspring`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}prefLabel`), literal(`верховье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMH`), namedNode(`${skos}prefLabel`), literal(`горен бйеф`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}notation`), literal(`H.STMI`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}prefLabel`), literal(`пресъхващ поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}prefLabel`), literal(`intermittent stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}prefLabel`), literal(`periodiskt vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende bekk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMI`), namedNode(`${skos}prefLabel`), literal(`река с периодическим водотоком`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}notation`), literal(`H.STMIX`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}prefLabel`), literal(`del av periodiskt vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}prefLabel`), literal(`del av tilbakevendende bekk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}prefLabel`), literal(`section of intermittent stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}prefLabel`), literal(`участок реки с периодическим водотоком`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMIX`), namedNode(`${skos}prefLabel`), literal(`част от пресъхващ пото`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}definition`), literal(`a place where a stream discharges into a lagoon, lake, or the sea`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}definition`), literal(`место впадения реки (в море, озеро и т.п.), конечный участок нижнего течения реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}notation`), literal(`H.STMM`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}prefLabel`), literal(`bekkeutløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}prefLabel`), literal(`stream mouth(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}prefLabel`), literal(`åmynning(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}prefLabel`), literal(`планински поток(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMM`), namedNode(`${skos}prefLabel`), literal(`устье реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}definition`), literal(`a former stream or distributary no longer carrying flowing water, but still evident due to lakes, wetland, topographic or vegetation patterns`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}definition`), literal(`водоем, в котором больше нет воды, но который еще заметный благодаря его топографическим или растительным особенностям`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}notation`), literal(`H.STMQ`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}prefLabel`), literal(`abandoned watercourse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}prefLabel`), literal(`inntørket elveleie`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}prefLabel`), literal(`övergivet vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}prefLabel`), literal(`высохший водоем`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMQ`), namedNode(`${skos}prefLabel`), literal(`пресъхнали реки`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}definition`), literal(`bodies of running water moving to a lower level in a channel on land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}definition`), literal(`небольшие мелкие водотоки с постоянным или временным течением`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}notation`), literal(`H.STMS`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}prefLabel`), literal(`bekker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}prefLabel`), literal(`streams`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}prefLabel`), literal(`vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}prefLabel`), literal(`потоци`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMS`), namedNode(`${skos}prefLabel`), literal(`ручьи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}definition`), literal(`a surface stream that disappears into an underground channel, or dries up in an arid area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}definition`), literal(`река,  полностью высохшая или превратившаяся в подземный канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}notation`), literal(`H.STMSB`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}prefLabel`), literal(`elv uten utløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}prefLabel`), literal(`lost river`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}prefLabel`), literal(`lost river`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}prefLabel`), literal(`высохшая река`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMSB`), namedNode(`${skos}prefLabel`), literal(`изгубващи се реки`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}notation`), literal(`H.STMX`), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}prefLabel`), literal(`del av bekk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}prefLabel`), literal(`del av vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}prefLabel`), literal(`section of stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}prefLabel`), literal(`участок ручья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STMX`), namedNode(`${skos}prefLabel`), literal(`част от поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}definition`), literal(`a relatively narrow waterway, usually narrower and less extensive than a sound, connecting two larger bodies of water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}definition`), literal(`узкое водное пространство, разъединяющее участки суши и соединяющее водоёмы (моря, озёра и т.п.) или их части`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}notation`), literal(`H.STRT`), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}prefLabel`), literal(`sund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}prefLabel`), literal(`sund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}prefLabel`), literal(`strait`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}prefLabel`), literal(`пролив`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.STRT`), namedNode(`${skos}prefLabel`), literal(`пролив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}definition`), literal(`a wetland dominated by tree vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}definition`), literal(`заболоченная территория, на которой преобладает древесная растительность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}notation`), literal(`H.SWMP`), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}prefLabel`), literal(`sump`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}prefLabel`), literal(`swamp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}prefLabel`), literal(`träsk, sumpmark, kärr`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}prefLabel`), literal(`лесное болото`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SWMP`), namedNode(`${skos}prefLabel`), literal(`язовир`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}definition`), literal(`a network of ditches and one or more of the following elements: water supply, reservoir, canal, pump, well, drain, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}definition`), literal(`земельная территория вместе с сетью каналов и др. гидротехнических и эксплуатационных сооружений, обеспечивающих её орошение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}notation`), literal(`H.SYSI`), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}prefLabel`), literal(`bevattningssystem`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}prefLabel`), literal(`irrigation system`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}prefLabel`), literal(`vanningssystem`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}prefLabel`), literal(`напоителен язовир`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.SYSI`), namedNode(`${skos}prefLabel`), literal(`оросительная система`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}definition`), literal(`a tunnel through which a canal passes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}definition`), literal(`тоннель, сооружаемый при пересечении судоходным каналом возвышенности, горного хребта и т. п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}notation`), literal(`H.TNLC`), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}prefLabel`), literal(`canal tunnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}prefLabel`), literal(`canal tunnel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}prefLabel`), literal(`kanaltunnel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}prefLabel`), literal(`канален тунел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.TNLC`), namedNode(`${skos}prefLabel`), literal(`судоходный тоннель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}definition`), literal(`a valley or ravine, bounded by relatively steep banks, which in the rainy season becomes a watercourse; found primarily in North Africa and the Middle East`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}definition`), literal(`русло или долина пересыхающего водотока; в Азии, в Африке`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}notation`), literal(`H.WAD`), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}prefLabel`), literal(`flod`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}prefLabel`), literal(`wadi`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}prefLabel`), literal(`wadi`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}prefLabel`), literal(`вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WAD`), namedNode(`${skos}prefLabel`), literal(`сухи речни корита (вади)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}definition`), literal(`a conspicuously curved or bent segment of a wadi`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}definition`), literal(`изогнутый участок вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}notation`), literal(`H.WADB`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}prefLabel`), literal(`flodkrök`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}prefLabel`), literal(`wadi bend`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}prefLabel`), literal(`wadi-sving`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}prefLabel`), literal(`извивка на вади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADB`), namedNode(`${skos}prefLabel`), literal(`излучина вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}definition`), literal(`a place where two or more wadies join`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}notation`), literal(`H.WADJ`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}prefLabel`), literal(`flodförbindning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}prefLabel`), literal(`wadi junction`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}prefLabel`), literal(`wadi-sammenløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}prefLabel`), literal(`възел на вади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADJ`), namedNode(`${skos}prefLabel`), literal(`место слияния двух или более вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}definition`), literal(`the lower terminus of a wadi where it widens into an adjoining floodplain, depression, or waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}definition`), literal(`место впадения вади (в море, озеро и т.п.), конечный участок нижнего течения вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}notation`), literal(`H.WADM`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}prefLabel`), literal(`flodmynning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}prefLabel`), literal(`wadi mouth`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}prefLabel`), literal(`wadi-utløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}prefLabel`), literal(`гърло на вади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADM`), namedNode(`${skos}prefLabel`), literal(`устье вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}definition`), literal(`valleys or ravines, bounded by relatively steep banks, which in the rainy season become watercourses; found primarily in North Africa and the Middle East`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}definition`), literal(`русла или долины пересыхающих водотоков; в Азии, в Африке`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}notation`), literal(`H.WADS`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}prefLabel`), literal(`floder`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}prefLabel`), literal(`wadier`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}prefLabel`), literal(`wadies`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}prefLabel`), literal(`множество вади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADS`), namedNode(`${skos}prefLabel`), literal(`множество вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}notation`), literal(`H.WADX`), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}prefLabel`), literal(`del av flod`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}prefLabel`), literal(`del av wadi`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}prefLabel`), literal(`section of wadi`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}prefLabel`), literal(`участок вади`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WADX`), namedNode(`${skos}prefLabel`), literal(`част от вади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}definition`), literal(`a turbulent, rotating movement of water in a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}definition`), literal(`вращательное движение воды в реках, морях и т.п.; место, где происходит такое движение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}notation`), literal(`H.WHRL`), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}prefLabel`), literal(`водоворот`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}prefLabel`), literal(`strømvirvel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}prefLabel`), literal(`virvel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}prefLabel`), literal(`whirlpool`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WHRL`), namedNode(`${skos}prefLabel`), literal(`водовъртеж`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}definition`), literal(`a cylindrical hole, pit, or tunnel drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}definition`), literal(`глубокая яма с отвесными стенками, обычно защищённая от обвалов срубом, служащая для добывания воды из водоносных слоёв земли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}notation`), literal(`H.WLL`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}prefLabel`), literal(`brunn, källa`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}prefLabel`), literal(`brønn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}prefLabel`), literal(`well`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}prefLabel`), literal(`кладенец`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLL`), namedNode(`${skos}prefLabel`), literal(`колодец`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}notation`), literal(`H.WLLQ`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}prefLabel`), literal(`abandoned well`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}prefLabel`), literal(`forlatt brønn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}prefLabel`), literal(`övergiven källa`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}prefLabel`), literal(`заброшенный колодец`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLQ`), namedNode(`${skos}prefLabel`), literal(`изоставен кладенец`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}definition`), literal(`cylindrical holes, pits, or tunnels drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}definition`), literal(`глубокие ямы с отвесными стенками, обычно защищённые от обвалов срубом, служащие для добывания воды из водоносных слоёв земли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}notation`), literal(`H.WLLS`), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}prefLabel`), literal(`brønner`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}prefLabel`), literal(`källor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}prefLabel`), literal(`wells`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}prefLabel`), literal(`кладенци`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WLLS`), namedNode(`${skos}prefLabel`), literal(`колодцы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}definition`), literal(`an area subject to inundation, usually characterized by bog, marsh, or swamp vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}definition`), literal(`территория, подвергающаяся частым наводнениям; здесь часто образуются болота, на которых растет характерная для них болотная растительность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}notation`), literal(`H.WTLD`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}prefLabel`), literal(`våtmark`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}prefLabel`), literal(`våtmark`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}prefLabel`), literal(`wetland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}prefLabel`), literal(`влажни зони`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLD`), namedNode(`${skos}prefLabel`), literal(`заболоченная местность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}notation`), literal(`H.WTLDI`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}prefLabel`), literal(`intermittent wetland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}prefLabel`), literal(`periodisk våtmark`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}prefLabel`), literal(`tilbakevendende våtmark`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}prefLabel`), literal(`периодически затопляемая территория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTLDI`), namedNode(`${skos}prefLabel`), literal(`пресъхващи влажни зони`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}definition`), literal(`a natural, well-defined channel produced by flowing water, or an artificial channel designed to carry flowing water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}definition`), literal(`стремительно текущая река или ручей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}notation`), literal(`H.WTRC`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}prefLabel`), literal(`vattendrag`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}prefLabel`), literal(`vannløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}prefLabel`), literal(`watercourse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}prefLabel`), literal(`поток`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRC`), namedNode(`${skos}prefLabel`), literal(`речно корито`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}definition`), literal(`a natural hole, hollow, or small depression that contains water, used by man and animals, especially in arid areas`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}definition`), literal(`естественное углубление, в котором собирается вода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}inScheme`), namedNode(`${gn}H`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}notation`), literal(`H.WTRH`), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}prefLabel`), literal(`vannhull`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}prefLabel`), literal(`vattenhål`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}prefLabel`), literal(`waterhole(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}prefLabel`), literal(`водяная яма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}H.WTRH`), namedNode(`${skos}prefLabel`), literal(`гьол(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}definition`), literal(`a tract of land set aside for agricultural settlement`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}definition`), literal(`участок земли, отведенный для сельскохозяйственных поселений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}notation`), literal(`L.AGRC`), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}prefLabel`), literal(`agricultural colony`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}prefLabel`), literal(`jordbrukskoloni`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}prefLabel`), literal(`landbrukskoloni`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}prefLabel`), literal(`селскостопанска колония`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.AGRC`), namedNode(`${skos}prefLabel`), literal(`сельскохозяйственная колония`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}L`), namedNode(`${rdfs}comment`), literal(`parks,area, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}definition`), literal(`Amusement Park are theme parks, adventure parks offering entertainment, similar to funfairs but with a fix location`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}definition`), literal(`парк развлечений, то же, что и ярмарка, только с постоянным месторасположением`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}notation`), literal(`L.AMUS`), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}prefLabel`), literal(`amusement park`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}prefLabel`), literal(`amusement park`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}prefLabel`), literal(`amusement park`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}prefLabel`), literal(`nöjespark`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.AMUS`), namedNode(`${skos}prefLabel`), literal(`Парк аттракционов  (ПКиО)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}definition`), literal(`a tract of land without homogeneous character or boundaries`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}definition`), literal(`местность, земля, край; часть какой-либо территории (страны, государства, материка, земной суши и т.п.), выделяемая при районировании по определённому существенному признаку`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}notation`), literal(`L.AREA`), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}prefLabel`), literal(`area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}prefLabel`), literal(`area, område`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}prefLabel`), literal(`område`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}prefLabel`), literal(`Область`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.AREA`), namedNode(`${skos}prefLabel`), literal(`регион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}definition`), literal(`an area drained by a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}definition`), literal(`поверхность, с которой речная система, море или озеро собирают воды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}notation`), literal(`L.BSND`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}prefLabel`), literal(`drainage basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}prefLabel`), literal(`dreneringsbasseng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}prefLabel`), literal(`vattenuppsamlingsområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}prefLabel`), literal(`Водосборный бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSND`), namedNode(`${skos}prefLabel`), literal(`доден басейн`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}definition`), literal(`an area underlain by an oil-rich structural basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}definition`), literal(`область с богатой нефтью структурной впадиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}notation`), literal(`L.BSNP`), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}prefLabel`), literal(`petroleum basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}prefLabel`), literal(`petroleumsbasseng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}prefLabel`), literal(`råoljebassäng`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}prefLabel`), literal(`нефтегазовый бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BSNP`), namedNode(`${skos}prefLabel`), literal(`нефтен басейн`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}definition`), literal(`a site of a land battle of historical importance`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}definition`), literal(`район боевых действий; имеет важное историческое значение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}notation`), literal(`L.BTL`), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}prefLabel`), literal(`battlefield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}prefLabel`), literal(`slagfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}prefLabel`), literal(`slagmark`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}prefLabel`), literal(`поле боя`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.BTL`), namedNode(`${skos}prefLabel`), literal(`полесражение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}definition`), literal(`an area in a forest with trees removed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}definition`), literal(`открытое пространство в парке или в лесу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}notation`), literal(`L.CLG`), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}prefLabel`), literal(`clearing`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}prefLabel`), literal(`lysning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}prefLabel`), literal(`uthuggning, röjt område`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}prefLabel`), literal(`поляна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CLG`), namedNode(`${skos}prefLabel`), literal(`сечище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}definition`), literal(`a park or pasture for community use`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}definition`), literal(`земли (выгоны, сенокосы, леса), которые  находятся в общем пользовании`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}notation`), literal(`L.CMN`), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}prefLabel`), literal(`allmenning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}prefLabel`), literal(`allmänt område`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}prefLabel`), literal(`common`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}prefLabel`), literal(`обществена собственост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CMN`), namedNode(`${skos}prefLabel`), literal(`общинные земли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}definition`), literal(`a lease of land by a government for economic development, e.g., mining, forestry`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}definition`), literal(`арендуемая государством земля, пользование которой необходимо для экономического развития, например, шахты, лесные массивы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}notation`), literal(`L.CNS`), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}prefLabel`), literal(`concession area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}prefLabel`), literal(`koncessionsområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}prefLabel`), literal(`konsesjonsområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}prefLabel`), literal(`концесионен район`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CNS`), namedNode(`${skos}prefLabel`), literal(`лицензионная территория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}definition`), literal(`a region in which coal deposits of possible economic value occur`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}definition`), literal(`площадь непрерывного или островного распространения угленосных формаций, значительная по размерам или запасам угля`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}notation`), literal(`L.COLF`), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}prefLabel`), literal(`coalfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}prefLabel`), literal(`kolfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}prefLabel`), literal(`kullfelt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}prefLabel`), literal(`въглищно находище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.COLF`), namedNode(`${skos}prefLabel`), literal(`угольный бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}definition`), literal(`continent : Europe, Africa, Asia, North America, South America, Oceania,Antarctica`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}definition`), literal(`континент: Евразия, Африка, Северная Америка, Южная Америка, Антарктида, Австралия, Океания`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}notation`), literal(`L.CONT`), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}prefLabel`), literal(`continent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}prefLabel`), literal(`kontinent`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}prefLabel`), literal(`kontinent`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}prefLabel`), literal(`континент`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CONT`), namedNode(`${skos}prefLabel`), literal(`континент`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}definition`), literal(`a zone of variable width straddling the shoreline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}definition`), literal(`полоса суши, примыкающая к водной поверхности моря или океана и взаимодействующая с ним`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}notation`), literal(`L.CST`), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}prefLabel`), literal(`coast`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}prefLabel`), literal(`kust`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}prefLabel`), literal(`kyst`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}prefLabel`), literal(`крайбрежие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.CST`), namedNode(`${skos}prefLabel`), literal(`морской берег`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}definition`), literal(`a place where a number of businesses are located`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}definition`), literal(`деловая часть города`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}notation`), literal(`L.CTRB`), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}prefLabel`), literal(`affärscenter`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}prefLabel`), literal(`business center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}prefLabel`), literal(`forretningssenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}prefLabel`), literal(`бизнес центр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.CTRB`), namedNode(`${skos}prefLabel`), literal(`бизнес център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}definition`), literal(`a tract of land on which many houses of similar design are built according to a development plan`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}definition`), literal(`часть застроенной территории населенного пункта, предполагающая целостность архитектурного замысла`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}notation`), literal(`L.DEVH`), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}prefLabel`), literal(`boligområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}prefLabel`), literal(`housing development`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}prefLabel`), literal(`housing development`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}prefLabel`), literal(`жилищна зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.DEVH`), namedNode(`${skos}prefLabel`), literal(`квартал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}definition`), literal(`an open as opposed to wooded area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}definition`), literal(`безлесная равнина, ровное (в отличие от селения, леса) обширное пространство`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}notation`), literal(`L.FLD`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}prefLabel`), literal(`field(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}prefLabel`), literal(`fält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}prefLabel`), literal(`åker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}prefLabel`), literal(`поле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLD`), namedNode(`${skos}prefLabel`), literal(`поле(та)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}definition`), literal(`a tract of level or terraced land which is irrigated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}definition`), literal(`участки земли, подготовленные для естественной биологической очистки сточных вод и выращивания с.-х. растений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}notation`), literal(`L.FLDI`), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}prefLabel`), literal(`(konst)bevattnade fält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}prefLabel`), literal(`irrigated field(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}prefLabel`), literal(`overrislet åker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}prefLabel`), literal(`ирригационные поля`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.FLDI`), namedNode(`${skos}prefLabel`), literal(`напоявани полета`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}definition`), literal(`an area containing a subterranean store of natural gas of economic value`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}definition`), literal(`совокупность залежей природного газа на определенной территории`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}notation`), literal(`L.GASF`), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}prefLabel`), literal(`gasfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}prefLabel`), literal(`gasfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}prefLabel`), literal(`gassfelt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}prefLabel`), literal(`залежи от гас`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.GASF`), namedNode(`${skos}prefLabel`), literal(`месторождение газа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}definition`), literal(`an area of grasses and shrubs used for grazing`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}definition`), literal(`участок травянистой растительности, используемый и поддерживаемый для выпаса домашних животных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}notation`), literal(`L.GRAZ`), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}prefLabel`), literal(`beiteområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}prefLabel`), literal(`betesområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}prefLabel`), literal(`grazing area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}prefLabel`), literal(`пастбище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.GRAZ`), namedNode(`${skos}prefLabel`), literal(`тревиста зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}definition`), literal(`an area covered with gravel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}definition`), literal(`покрытая гравием территория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}notation`), literal(`L.GVL`), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}prefLabel`), literal(`gravel area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}prefLabel`), literal(`grusområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}prefLabel`), literal(`grusområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}prefLabel`), literal(`едрозърнест пясък`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.GVL`), namedNode(`${skos}prefLabel`), literal(`покрытие из гравия`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}definition`), literal(`an area characterized by industrial activity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}definition`), literal(`территория с ярко выраженной индустриально-производственной специализацией`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}notation`), literal(`L.INDS`), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}prefLabel`), literal(`industrial area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}prefLabel`), literal(`industriområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}prefLabel`), literal(`industriområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}prefLabel`), literal(`индустриална зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.INDS`), namedNode(`${skos}prefLabel`), literal(`промышленный район`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}definition`), literal(`a tract of land in the Arctic`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}definition`), literal(`участок земли в Арктике`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}notation`), literal(`L.LAND`), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}prefLabel`), literal(`arctic land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}prefLabel`), literal(`arktisk landskap`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}prefLabel`), literal(`arktiskt land`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}prefLabel`), literal(`арктически територии`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.LAND`), namedNode(`${skos}prefLabel`), literal(`арктические земли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}definition`), literal(`a minor area or place of unspecified or mixed character and indefinite boundaries`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}definition`), literal(`название низовой административно-территориальной единицы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}notation`), literal(`L.LCTY`), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}prefLabel`), literal(`locality`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}prefLabel`), literal(`locality`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}prefLabel`), literal(`trakt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}prefLabel`), literal(`местност`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.LCTY`), namedNode(`${skos}prefLabel`), literal(`район`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}definition`), literal(`a place used by an army or other armed service for storing arms and supplies, and for accommodating and training troops, a base from which operations can be initiated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}definition`), literal(`территория (важный в стратегическом или политическом отношении пункт, район) и размещенные на ней войска с запасами оружия, боеприпасов, продовольствия и других материальных средств, необходимых для боевой и повседневной деятельности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}notation`), literal(`L.MILB`), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}prefLabel`), literal(`military base`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}prefLabel`), literal(`militärbas`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}prefLabel`), literal(`militærbase`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}prefLabel`), literal(`военна база`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.MILB`), namedNode(`${skos}prefLabel`), literal(`военная база`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}definition`), literal(`an area of mine sites where minerals and ores are extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}definition`), literal(`район добычи полезных ископаемых`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}notation`), literal(`L.MNA`), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}prefLabel`), literal(`gruveområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}prefLabel`), literal(`gruvområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}prefLabel`), literal(`mining area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}prefLabel`), literal(`полезни ископаеми`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.MNA`), namedNode(`${skos}prefLabel`), literal(`район разработки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}definition`), literal(`a tract of land where military field exercises are carried out`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}definition`), literal(`участок суши или моря, предназначенный для испытаний различных видов оружия, боевых средств и техники, а также для боевой подготовки войск`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}notation`), literal(`L.MVA`), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}prefLabel`), literal(`maneuver area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}prefLabel`), literal(`maneuver area`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}prefLabel`), literal(`militært treningsområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}prefLabel`), literal(`военен полигон`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.MVA`), namedNode(`${skos}prefLabel`), literal(`полигон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}definition`), literal(`an area used to store supplies, provide barracks for troops and naval personnel, a port for naval vessels, and from which operations are initiated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}definition`), literal(`оборудованный и обороняемый район (зона) побережья и прилегающего участка моря обычно с несколькими пунктами базирования кораблей, с силами и средствами, предназначенными для обороны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}notation`), literal(`L.NVB`), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}prefLabel`), literal(`marinbas`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}prefLabel`), literal(`marinebase`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}prefLabel`), literal(`naval base`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}prefLabel`), literal(`военно-морская база`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.NVB`), namedNode(`${skos}prefLabel`), literal(`военоворска база`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}definition`), literal(`an area in a desert made productive by the availability of water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}definition`), literal(`участок пустыни или полупустыни с обильным естественным или искусственным увлажнением, обусловленным близостью рек и грунтовых вод, и с богатой растительностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}notation`), literal(`L.OAS`), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}prefLabel`), literal(`oas(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}prefLabel`), literal(`oase`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}prefLabel`), literal(`oasis(-es)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}prefLabel`), literal(`оазис`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.OAS`), namedNode(`${skos}prefLabel`), literal(`оазис(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}definition`), literal(`an area containing a subterranean store of petroleum of economic value`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}definition`), literal(`место под землей, где залегают запасы нефти`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}notation`), literal(`L.OILF`), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}prefLabel`), literal(`oilfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}prefLabel`), literal(`oljefelt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}prefLabel`), literal(`oljefält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}prefLabel`), literal(`нефтяное месторождение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.OILF`), namedNode(`${skos}prefLabel`), literal(`петролно находище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}definition`), literal(`an area where peat is harvested`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}definition`), literal(`место, где добывают торф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}notation`), literal(`L.PEAT`), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}prefLabel`), literal(`peat cutting area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}prefLabel`), literal(`torvfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}prefLabel`), literal(`torvskjæringsområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}prefLabel`), literal(`торфено находище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.PEAT`), namedNode(`${skos}prefLabel`), literal(`торфяное месторождение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}definition`), literal(`an area, often of forested land, maintained as a place of beauty, or for recreation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}definition`), literal(`обширная озелененная территория, благоустроенная и художественно оформленная для отдыха под открытым небом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}notation`), literal(`L.PRK`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}prefLabel`), literal(`park`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}prefLabel`), literal(`park`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}prefLabel`), literal(`park`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}prefLabel`), literal(`парк`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRK`), namedNode(`${skos}prefLabel`), literal(`парк`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}definition`), literal(`a place provided with terminal and transfer facilities for loading and discharging waterborne cargo or passengers, usually located in a harbor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}definition`), literal(`место с закрытым водным пространством, специально оборудованное для стоянки, погрузки и разгрузки судов, гавань`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}notation`), literal(`L.PRT`), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}prefLabel`), literal(`пристанище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}prefLabel`), literal(`havn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}prefLabel`), literal(`hamn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}prefLabel`), literal(`port`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.PRT`), namedNode(`${skos}prefLabel`), literal(`порт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}definition`), literal(`an area where loose sand with water moving through it may become unstable when heavy objects are placed at the surface, causing them to sink`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}definition`), literal(`пески, перенасыщенные водой восходящих источников и способные вследствие этого засасывать попадающие на них предметы, животных и человека`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}notation`), literal(`L.QCKS`), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}prefLabel`), literal(`kvicksand`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}prefLabel`), literal(`kvikksand`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}prefLabel`), literal(`quicksand`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}prefLabel`), literal(`зыбучие пески`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.QCKS`), namedNode(`${skos}prefLabel`), literal(`плаващ пясък`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.REP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.REP`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.REP`), namedNode(`${skos}notation`), literal(`L.REP`), namedNode(gn)),
        quad(namedNode(`${gn}L.REP`), namedNode(`${skos}prefLabel`), literal(`republic`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.REP`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}definition`), literal(`a tract of public land reserved for future use or restricted as to use`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}definition`), literal(`особо охраняемая территория, полностью исключенная из любой хозяйственной деятельности в целях сохранения в нетронутом виде природных комплексов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}notation`), literal(`L.RES`), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}prefLabel`), literal(`regulert område`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}prefLabel`), literal(`reservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}prefLabel`), literal(`reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}prefLabel`), literal(`заповедник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RES`), namedNode(`${skos}prefLabel`), literal(`резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}definition`), literal(`a tract of land reserved for agricultural reclamation and/or development`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}definition`), literal(`участок земли, предназначенный для агромелиорации`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}notation`), literal(`L.RESA`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}prefLabel`), literal(`agricultural reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}prefLabel`), literal(`jordbruksreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}prefLabel`), literal(`område regulert til landbruk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}prefLabel`), literal(`аграрен резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESA`), namedNode(`${skos}prefLabel`), literal(`агрозаповедник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}definition`), literal(`a forested area set aside for preservation or controlled use`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}definition`), literal(`особо охраняемый участок леса, использование которого контролируется`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}notation`), literal(`L.RESF`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}prefLabel`), literal(`forest reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}prefLabel`), literal(`skogsreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}prefLabel`), literal(`vernet skog`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}prefLabel`), literal(`горски резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESF`), namedNode(`${skos}prefLabel`), literal(`лесной заповедник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}definition`), literal(`a tract of land used primarily for hunting`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}definition`), literal(`участок территории, выделенный для интенсивного воспроизводства дичи и проведения строго регулируемых охот`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}notation`), literal(`L.RESH`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}prefLabel`), literal(`hunting reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}prefLabel`), literal(`jaktområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}prefLabel`), literal(`jaktreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}prefLabel`), literal(`заповедно-охотничье хозяйство`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESH`), namedNode(`${skos}prefLabel`), literal(`ловен резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}definition`), literal(`an area reserved for the maintenance of a natural habitat`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}definition`), literal(`особо охраняемые участки земли, водной поверхности и воздушного пространства над ними, где располагаются природные комплексы и объекты, которые имеют свое научное, культурное, эстетическое и оздоровительное значение, которые изъяты решениями органов государственной власти полностью или частично из хозяйственного использования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}notation`), literal(`L.RESN`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}prefLabel`), literal(`nature reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}prefLabel`), literal(`naturreservat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}prefLabel`), literal(`naturreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}prefLabel`), literal(`особо охраняемая природная  территория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESN`), namedNode(`${skos}prefLabel`), literal(`природен резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}definition`), literal(`an area of palm trees where use is controlled`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}definition`), literal(`место, где растут пальмы, использование которых контролируется`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}notation`), literal(`L.RESP`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}prefLabel`), literal(`palm tree reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}prefLabel`), literal(`palmereservat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}prefLabel`), literal(`palmträdsreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}prefLabel`), literal(`пальмовый заповедник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESP`), namedNode(`${skos}prefLabel`), literal(`резерват от палмови дървета`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}definition`), literal(`a tract of land set aside for aboriginal, tribal, or native populations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}definition`), literal(`территории, отведенные для поселения коренного населения страны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}notation`), literal(`L.RESV`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}prefLabel`), literal(`reservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}prefLabel`), literal(`резерват`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}prefLabel`), literal(`reservat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}prefLabel`), literal(`reservation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESV`), namedNode(`${skos}prefLabel`), literal(`резервация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}definition`), literal(`a tract of public land reserved for the preservation of wildlife`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}definition`), literal(`заповедник, территория, где природные богатства (животные и растения) находятся под особой охраной правительства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}notation`), literal(`L.RESW`), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}prefLabel`), literal(`viltreservat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}prefLabel`), literal(`viltreservat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}prefLabel`), literal(`wildlife reserve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}prefLabel`), literal(`резерват дива природа`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RESW`), namedNode(`${skos}prefLabel`), literal(`резерват`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}definition`), literal(`an area distinguished by one or more observable physical or cultural characteristics`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}definition`), literal(`область, район, территория, часть страны, отличающиеся совокупностью естественных или исторически сложившихся экономико-географических условий и национального состава населения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}notation`), literal(`L.RGN`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}prefLabel`), literal(`регион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}prefLabel`), literal(`region`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}prefLabel`), literal(`region`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}prefLabel`), literal(`region`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGN`), namedNode(`${skos}prefLabel`), literal(`регион`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}definition`), literal(`a region of a country established for economic development or for statistical purposes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}definition`), literal(`регион страны, характеризующийся своеобразием природных и экономических условий; деление страны на эк. регионы используется для получения статистических данных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}notation`), literal(`L.RGNE`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}prefLabel`), literal(`economic region`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}prefLabel`), literal(`ekonomisk region`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}prefLabel`), literal(`økonomisk region`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}prefLabel`), literal(`икономически регион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNE`), namedNode(`${skos}prefLabel`), literal(`экономический регион`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNH`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNH`), namedNode(`${skos}notation`), literal(`L.RGNH`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNH`), namedNode(`${skos}prefLabel`), literal(`historical region`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNH`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}definition`), literal(`a tract of land distinguished by numerous lakes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}definition`), literal(`место скопления большого количества озер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}notation`), literal(`L.RGNL`), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}prefLabel`), literal(`innsjøområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}prefLabel`), literal(`lake region`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}prefLabel`), literal(`sjöregion`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}prefLabel`), literal(`езерен регион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RGNL`), namedNode(`${skos}prefLabel`), literal(`озерный край`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}definition`), literal(`a tract of land used for artillery firing practice`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}definition`), literal(`участок земли, где проходят военные артиллерийские учения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}notation`), literal(`L.RNGA`), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}prefLabel`), literal(`artillery range`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}prefLabel`), literal(`militært skytefelt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}prefLabel`), literal(`skjutfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}prefLabel`), literal(`артилерийски полигон`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.RNGA`), namedNode(`${skos}prefLabel`), literal(`артиллерийский полигон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}definition`), literal(`a shallow basin or flat where salt accumulates after periodic inundation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}definition`), literal(`мелководье или равнинная местность, где после периодических наводнений собирается соль`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}notation`), literal(`L.SALT`), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}prefLabel`), literal(`salt area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}prefLabel`), literal(`saltområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}prefLabel`), literal(`saltområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}prefLabel`), literal(`засолени територии`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.SALT`), namedNode(`${skos}prefLabel`), literal(`солевой бассейн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}definition`), literal(`an area of permanent snow and ice forming the accumulation area of a glacier`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}definition`), literal(`место скопления многолетнего снега и льда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}notation`), literal(`L.SNOW`), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}prefLabel`), literal(`ледник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}prefLabel`), literal(`snowfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}prefLabel`), literal(`snöfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}prefLabel`), literal(`snødekt område`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.SNOW`), namedNode(`${skos}prefLabel`), literal(`перманентна снежна покривка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}definition`), literal(`a tract of land used by nomadic or other tribes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}definition`), literal(`участок земли, являющийся в течение некоторого времени местом жительства для кочующих племен`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}notation`), literal(`L.TRB`), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}prefLabel`), literal(`stammeområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}prefLabel`), literal(`stamområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}prefLabel`), literal(`tribal area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}prefLabel`), literal(`племенна територия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}L.TRB`), namedNode(`${skos}prefLabel`), literal(`территория племени`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}L.ZZZZZ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}L.ZZZZZ`), namedNode(`${skos}inScheme`), namedNode(`${gn}L`), namedNode(gn)),
        quad(namedNode(`${gn}L.ZZZZZ`), namedNode(`${skos}notation`), literal(`L.ZZZZZ`), namedNode(gn)),
        quad(namedNode(`${gn}L.ZZZZZ`), namedNode(`${skos}prefLabel`), literal(`master source holdings list`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}L.ZZZZZ`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}Map`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}Map`), namedNode(`${rdfs}comment`), literal(`A Web page displaying a map`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Map`), namedNode(`${rdfs}label`), literal(`Map`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}Map`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}Document`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}definition`), literal(`a city, town, village, or other agglomeration of buildings where people live and work`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}definition`), literal(`место, где живут люди (город, село, поселок и т. п.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}notation`), literal(`P.PPL`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}prefLabel`), literal(`befolkad plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}prefLabel`), literal(`befolket sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}prefLabel`), literal(`populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}prefLabel`), literal(`населенный пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPL`), namedNode(`${skos}prefLabel`), literal(`населено място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA2`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA2`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA2`), namedNode(`${skos}notation`), literal(`P.PPLA2`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA2`), namedNode(`${skos}prefLabel`), literal(`seat of a second-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA2`), namedNode(`${skos}prefLabel`), literal(`центр административного деления второго порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA3`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA3`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA3`), namedNode(`${skos}notation`), literal(`P.PPLA3`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA3`), namedNode(`${skos}prefLabel`), literal(`seat of a third-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA3`), namedNode(`${skos}prefLabel`), literal(`центр административного деления третьего порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA4`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA4`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA4`), namedNode(`${skos}notation`), literal(`P.PPLA4`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA4`), namedNode(`${skos}prefLabel`), literal(`seat of a fourth-order administrative division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA4`), namedNode(`${skos}prefLabel`), literal(`центр административного деления четвертого порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}definition`), literal(`seat of a first-order administrative division (PPLC takes precedence over PPLA)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}definition`), literal(`центр административного деления первого порядка (столица политического образования предшествует центру АТД первого порядка)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}notation`), literal(`P.PPLA`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}prefLabel`), literal(`seat of a first-order administrative
            division`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}prefLabel`), literal(`sete for primær administrativ inndeling`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}prefLabel`), literal(`säte för en första ordningens administrativ enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}prefLabel`), literal(`центр административного деления первого порядка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLA`), namedNode(`${skos}prefLabel`), literal(`център на първостепенна административна единица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}notation`), literal(`P.PPLC`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}prefLabel`), literal(`Hovedstad`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}prefLabel`), literal(`capital of a political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}prefLabel`), literal(`huvudstad i politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}prefLabel`), literal(`столица на политическо образувание`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLC`), namedNode(`${skos}prefLabel`), literal(`столица политического образования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}definition`), literal(`a populated place where the population is largely engaged in agricultural activities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}definition`), literal(`населенный пункт, где большая часть населения занята в сельским хозяйством`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}notation`), literal(`P.PPLF`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}prefLabel`), literal(`farm village`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLF`), namedNode(`${skos}prefLabel`), literal(`деревня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}notation`), literal(`P.PPLG`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}prefLabel`), literal(`regjeringssete i en politisk enhet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}prefLabel`), literal(`seat of government of a political entity`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}prefLabel`), literal(`säte av ledningen för en politisk enhet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}prefLabel`), literal(`здание правительства политического образования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLG`), namedNode(`${skos}prefLabel`), literal(`столица на правителство на политическо образувание`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}definition`), literal(`an area similar to a locality but with a small group of dwellings or other buildings`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}definition`), literal(`первичная единица расселения людей в пределах одного застроенного земельного участка: город, поселок городского типа, село. Обязательным признаком населенного пункта является постоянство его использования как места обитания`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}notation`), literal(`P.PPLL`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}prefLabel`), literal(`населенный пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}prefLabel`), literal(`населено място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}prefLabel`), literal(`befolkad ort`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}prefLabel`), literal(`befolket trakt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLL`), namedNode(`${skos}prefLabel`), literal(`populated locality`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}notation`), literal(`P.PPLQ`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}prefLabel`), literal(`abandoned populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}prefLabel`), literal(`avfolket sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}prefLabel`), literal(`tidigare befolkad plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}prefLabel`), literal(`изоставено населено място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLQ`), namedNode(`${skos}prefLabel`), literal(`покинутый населенный пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}definition`), literal(`a populated place whose population is largely engaged in religious occupations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}definition`), literal(`населенный пункт, где большую часть населения составляют люди, объединенные одной верой. Например, монастырь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}notation`), literal(`P.PPLR`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}prefLabel`), literal(`religious populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}prefLabel`), literal(`religiös befolkad plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}prefLabel`), literal(`religiøst befolket sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}prefLabel`), literal(`религиозен център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLR`), namedNode(`${skos}prefLabel`), literal(`религиозная община`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}definition`), literal(`cities, towns, villages, or other agglomerations of buildings where people live and work`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}definition`), literal(`первичные единицы расселения людей в пределах одного застроенного земельного участка: город, поселок городского типа, село. Обязательным признаком населенных пункт является постоянство его использования как места обитания.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}notation`), literal(`P.PPLS`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}prefLabel`), literal(`befolkade platser`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}prefLabel`), literal(`befolkede steder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}prefLabel`), literal(`populated places`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}prefLabel`), literal(`населени места`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLS`), namedNode(`${skos}prefLabel`), literal(`населенные пункты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}definition`), literal(`a village, town or city destroyed by a natural disaster, or by war`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}definition`), literal(`населенный пункт (деревня, город), пострадавший в результате природной катастрофы или войны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}notation`), literal(`P.PPLW`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}prefLabel`), literal(`destroyed populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}prefLabel`), literal(`förstörd befolkad plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}prefLabel`), literal(`ødelagt befolket sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}prefLabel`), literal(`разрушенный населенный пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLW`), namedNode(`${skos}prefLabel`), literal(`разрушено населено място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}notation`), literal(`P.PPLX`), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}prefLabel`), literal(`del av befolkad plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}prefLabel`), literal(`del av befolket sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}prefLabel`), literal(`section of populated place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}prefLabel`), literal(`участок населенного пункта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.PPLX`), namedNode(`${skos}prefLabel`), literal(`част от населено място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}inScheme`), namedNode(`${gn}P`), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}notation`), literal(`P.STLMT`), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}prefLabel`), literal(`israeli settlement`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}prefLabel`), literal(`israelisk bosättning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}prefLabel`), literal(`israelsk bosetning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}prefLabel`), literal(`еврейские поселения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}P.STLMT`), namedNode(`${skos}prefLabel`), literal(`израелски поселения`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}definition`), literal(`a raised roadway across wet ground or shallow water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}definition`), literal(`насыпная дорога для проезда, прохода через топкое место`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}notation`), literal(`R.CSWY`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}prefLabel`), literal(`broväg, höjd gångbana`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}prefLabel`), literal(`causeway`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}prefLabel`), literal(`veifylling`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}prefLabel`), literal(`гать`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWY`), namedNode(`${skos}prefLabel`), literal(`път в блато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}R`), namedNode(`${rdfs}comment`), literal(`road, railroad, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${skos}definition`), literal(`a causeway no longer used for transportation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${skos}notation`), literal(`R.CSWYQ`), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${skos}prefLabel`), literal(`former causeway`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.CSWYQ`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}definition`), literal(`a pipeline used for transporting oil`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}definition`), literal(`трубопровод для перекачки нефти и нефтепродуктов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}notation`), literal(`R.OILP`), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}prefLabel`), literal(`oil pipeline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}prefLabel`), literal(`oljeledning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}prefLabel`), literal(`oljepipeline`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}prefLabel`), literal(`нефтепровод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.OILP`), namedNode(`${skos}prefLabel`), literal(`нефтопровод`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}definition`), literal(`a place for public walking, usually along a beach front`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}definition`), literal(`место для прогулки, особ. набережная, проспект, бульвар, аллея, палуба корабля`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}notation`), literal(`R.PRMN`), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}prefLabel`), literal(`promenad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}prefLabel`), literal(`promenade`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}prefLabel`), literal(`promenade`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}prefLabel`), literal(`променад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.PRMN`), namedNode(`${skos}prefLabel`), literal(`стъргало`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}definition`), literal(`a place where boats, goods, etc., are carried overland between navigable waters`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}definition`), literal(`перевал в верховьях рек различных бассейнов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}notation`), literal(`R.PTGE`), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}prefLabel`), literal(`eid`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}prefLabel`), literal(`portage`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}prefLabel`), literal(`portage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}prefLabel`), literal(`волок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.PTGE`), namedNode(`${skos}prefLabel`), literal(`място за пренос на лодки`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}definition`), literal(`an open way with improved surface for transportation of animals, people and vehicles`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}definition`), literal(`полоса земли, служащая для езды и ходьбы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}notation`), literal(`R.RD`), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}prefLabel`), literal(`road`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}prefLabel`), literal(`vei`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}prefLabel`), literal(`väg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}prefLabel`), literal(`дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RD`), namedNode(`${skos}prefLabel`), literal(`път`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}definition`), literal(`the remains of a road used by ancient cultures`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}definition`), literal(`развалины, на месте которых была дорога во времена античности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}notation`), literal(`R.RDA`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}prefLabel`), literal(`ancient road`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}prefLabel`), literal(`gammel vei`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}prefLabel`), literal(`historisk väg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}prefLabel`), literal(`античен път`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDA`), namedNode(`${skos}prefLabel`), literal(`старая дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}definition`), literal(`a conspicuously curved or bent section of a road`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}definition`), literal(`изогнутый участок дороги`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}notation`), literal(`R.RDB`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}prefLabel`), literal(`road bend`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}prefLabel`), literal(`veikurve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}prefLabel`), literal(`vägkrök`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}prefLabel`), literal(`завой на път`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDB`), namedNode(`${skos}prefLabel`), literal(`поворот дороги`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}definition`), literal(`an excavation cut through a hill or ridge for a road`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}definition`), literal(`вырытый в горном хребте туннель, через который будет проведена дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}notation`), literal(`R.RDCUT`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}prefLabel`), literal(`road cut`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}prefLabel`), literal(`road cut`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}prefLabel`), literal(`veiskjæring`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}prefLabel`), literal(`выемка грунта под дорогу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDCUT`), namedNode(`${skos}prefLabel`), literal(`прекъсване на път`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}definition`), literal(`a place where two or more roads join`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}definition`), literal(`место пересечения двух или более дорог`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}notation`), literal(`R.RDJCT`), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}prefLabel`), literal(`road junction`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}prefLabel`), literal(`veikryss`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}prefLabel`), literal(`vägknytpunkt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}prefLabel`), literal(`кръстопът`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RDJCT`), namedNode(`${skos}prefLabel`), literal(`перекресток`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}definition`), literal(`a place where two or more railroad tracks join`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}definition`), literal(`пункт на пересечении нескольких ж.-д. линий, представляющий собой сложный комплекс разнообразных технических сооружений и устройств`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}notation`), literal(`R.RJCT`), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}prefLabel`), literal(`jernbanekryss`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}prefLabel`), literal(`järnvägsknytpunkt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}prefLabel`), literal(`railroad junction`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}prefLabel`), literal(`железнодорожный узел`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RJCT`), namedNode(`${skos}prefLabel`), literal(`жп кръстопът`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}definition`), literal(`a permanent twin steel-rail track on which freight and passenger cars move long distances`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}definition`), literal(`рельсовый путь, предназначенный для движения поездов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}notation`), literal(`R.RR`), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}prefLabel`), literal(`jernbane`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}prefLabel`), literal(`järnväg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}prefLabel`), literal(`railroad`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}prefLabel`), literal(`железная дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RR`), namedNode(`${skos}prefLabel`), literal(`жп линия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}notation`), literal(`R.RRQ`), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}prefLabel`), literal(`abandoned railroad`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt jernbane`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}prefLabel`), literal(`övergiven järnväg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная железная дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RRQ`), namedNode(`${skos}prefLabel`), literal(`изоставена жп линия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}definition`), literal(`the route taken by caravans`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}definition`), literal(`маршрут следования караванов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}notation`), literal(`R.RTE`), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}prefLabel`), literal(`caravan route`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}prefLabel`), literal(`karavanerute`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}prefLabel`), literal(`karavanväg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}prefLabel`), literal(`Керванен път`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RTE`), namedNode(`${skos}prefLabel`), literal(`караванный путь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}definition`), literal(`a system of tracks used for the making up of trains, and switching and storing freight cars`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}definition`), literal(`техническая железнодорожная станция для расформирования и формирования различных категорий поездов, выполнение техническое обслуживание и коммерческий осмотр составов поездов и устранение выявленных неисправностей вагонов, смена локомотивов и локомотивных бригад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}notation`), literal(`R.RYD`), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}prefLabel`), literal(`jernbaneområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}prefLabel`), literal(`railroad yard`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}prefLabel`), literal(`railroad yard`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}prefLabel`), literal(`жп парк`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.RYD`), namedNode(`${skos}prefLabel`), literal(`сортировочная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}definition`), literal(`a paved urban thoroughfare`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}definition`), literal(`пространство между двумя рядами домов в населенных пунктах для проезда и прохода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}notation`), literal(`R.ST`), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}prefLabel`), literal(`väg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}prefLabel`), literal(`gate`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}prefLabel`), literal(`street`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}prefLabel`), literal(`улица`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.ST`), namedNode(`${skos}prefLabel`), literal(`улица`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}definition`), literal(`a route taken by livestock herds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}definition`), literal(`маршрут перегона крупного рогатого домашнего скота`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}notation`), literal(`R.STKR`), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}prefLabel`), literal(`boskapsled`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}prefLabel`), literal(`rute for krøtterdrift`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}prefLabel`), literal(`stock route`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}prefLabel`), literal(`път на стада`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.STKR`), namedNode(`${skos}prefLabel`), literal(`скотопрогон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}definition`), literal(`a subterranean passageway for transportation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}definition`), literal(`подземное сооружение, служащее для транспортных целей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}notation`), literal(`R.TNL`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}prefLabel`), literal(`tunnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}prefLabel`), literal(`tunnel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}prefLabel`), literal(`tunnel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}prefLabel`), literal(`тунел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNL`), namedNode(`${skos}prefLabel`), literal(`туннель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}definition`), literal(`a cave that is open at both ends`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}definition`), literal(`пещера, открытая с двух концов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}notation`), literal(`R.TNLN`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}prefLabel`), literal(`natural tunnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}prefLabel`), literal(`naturlig tunnel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}prefLabel`), literal(`naturlig tunnel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}prefLabel`), literal(`естествен тунел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLN`), namedNode(`${skos}prefLabel`), literal(`природный туннель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}definition`), literal(`a tunnel through which a road passes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}definition`), literal(`тоннель, через который проходит дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}notation`), literal(`R.TNLRD`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}prefLabel`), literal(`road tunnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}prefLabel`), literal(`veitunnel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}prefLabel`), literal(`vägtunnel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}prefLabel`), literal(`автодорожный туннель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRD`), namedNode(`${skos}prefLabel`), literal(`пътен тунел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}definition`), literal(`a tunnel through which a railroad passes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}definition`), literal(`тоннель, по которому проходит ж/д дорога`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}notation`), literal(`R.TNLRR`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}prefLabel`), literal(`jernbanetunnel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}prefLabel`), literal(`järnvägstunnel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}prefLabel`), literal(`railroad tunnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}prefLabel`), literal(`железнодорожный туннель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLRR`), namedNode(`${skos}prefLabel`), literal(`жп тунел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}definition`), literal(`subterranean passageways for transportation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}definition`), literal(`подземные  сооружение, служащие для транспортных целей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}notation`), literal(`R.TNLS`), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}prefLabel`), literal(`tunneler`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}prefLabel`), literal(`tunnels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}prefLabel`), literal(`tunnlar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}prefLabel`), literal(`тунели`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TNLS`), namedNode(`${skos}prefLabel`), literal(`туннели`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}definition`), literal(`a path, track, or route used by pedestrians, animals, or off-road vehicles`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}definition`), literal(`узкая пешеходная дорожка, протоптанная людьми или животными в лесу, в поле, по снегу и т. п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}inScheme`), namedNode(`${gn}R`), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}notation`), literal(`R.TRL`), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}prefLabel`), literal(`spår, stig`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}prefLabel`), literal(`sti`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}prefLabel`), literal(`trail`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}prefLabel`), literal(`пътека`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}R.TRL`), namedNode(`${skos}prefLabel`), literal(`тропинка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}RDFData`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}RDFData`), namedNode(`${rdfs}comment`), literal(`A Document containing RDF description of one or several features.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}RDFData`), namedNode(`${rdfs}label`), literal(`RDF Data`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}RDFData`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}Document`), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}definition`), literal(`a government building`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}definition`), literal(`Исполнительные и распорядительные органы управления, власти в государстве.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}notation`), literal(`S.ADMF`), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}prefLabel`), literal(`administrasjonsanlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}prefLabel`), literal(`administrativ inrättning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}prefLabel`), literal(`administrative facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}prefLabel`), literal(`административна сграда`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ADMF`), namedNode(`${skos}prefLabel`), literal(`администрация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}S`), namedNode(`${rdfs}comment`), literal(`spot, building, farm, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}definition`), literal(`a building and/or tract of land used for improving agriculture`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}definition`), literal(`здание или участок земли, используемый для повышения качества сельскохозяйственной продукции`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}notation`), literal(`S.AGRF`), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}prefLabel`), literal(`agricultural facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}prefLabel`), literal(`jordbruksanlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}prefLabel`), literal(`jordbruksinrättning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}prefLabel`), literal(`агробаза`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AGRF`), namedNode(`${skos}prefLabel`), literal(`селскостопанска сграда`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}definition`), literal(`an area used to store supplies, provide barracks for air force personnel, hangars and runways for aircraft, and from which operations are initiated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}definition`), literal(`земельный (водный) участок, предназначенный для базирования самолётов стратегической, тактической и транспортной авиации, вертолётов, частей обеспечения, ремонта, запасов материальных и технических средств обеспечения боевых действий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}notation`), literal(`S.AIRB`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}prefLabel`), literal(`airbase`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}prefLabel`), literal(`flybase`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}prefLabel`), literal(`flygbas`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}prefLabel`), literal(`авиабаза`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRB`), namedNode(`${skos}prefLabel`), literal(`авиобаза`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}definition`), literal(`a place on land where aircraft land and take off; no facilities provided for the commercial handling of passengers and cargo`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}definition`), literal(`комплекс сооружений, оборудования и земельный участок с воздушным пространством, предназначенный для взлёта, посадки, размещения и обслуживания самолётов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}notation`), literal(`S.AIRF`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}prefLabel`), literal(`airfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}prefLabel`), literal(`flygfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}prefLabel`), literal(`flyplass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}prefLabel`), literal(`аэродром`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRF`), namedNode(`${skos}prefLabel`), literal(`самолетна писта`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}definition`), literal(`a place where helicopters land and take off`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}definition`), literal(`земельный участок, площадка на здании, судне и т.п., оборудованные для взлёта, посадки и обслуживания вертолётов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}notation`), literal(`S.AIRH`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}prefLabel`), literal(`heliport`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}prefLabel`), literal(`heliport`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}prefLabel`), literal(`landningsplats för helikopter`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}prefLabel`), literal(`вертолетная площадка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRH`), namedNode(`${skos}prefLabel`), literal(`летище за хеикоптери`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}definition`), literal(`a place where aircraft regularly land and take off, with runways, navigational aids, and major facilities for the commercial handling of passengers and cargo`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}definition`), literal(`комплекс сооружений (с аэродромом и аэровокзалом) для осуществления регулярных полётов транспортной авиации и обслуживания пассажиров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}notation`), literal(`S.AIRP`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}prefLabel`), literal(`airport`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}prefLabel`), literal(`flygplats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}prefLabel`), literal(`lufthavn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}prefLabel`), literal(`аэропорт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRP`), namedNode(`${skos}prefLabel`), literal(`летище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}notation`), literal(`S.AIRQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}prefLabel`), literal(`abandoned airfield`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}prefLabel`), literal(`forlatt lufthavn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}prefLabel`), literal(`övergivet flygfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}prefLabel`), literal(`заброшенный аэродром`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AIRQ`), namedNode(`${skos}prefLabel`), literal(`изоставено летище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}definition`), literal(`an oval or circular structure with rising tiers of seats about a stage or open space`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}definition`), literal(`декоративное сооружение в форме эллипса со ступенчато расположенными рядами сидений, предназначенное для зрелищных мероприятий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}notation`), literal(`S.AMTH`), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}prefLabel`), literal(`amfiteater`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}prefLabel`), literal(`amfiteater`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}prefLabel`), literal(`amphitheater`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}prefLabel`), literal(`амфитеатр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AMTH`), namedNode(`${skos}prefLabel`), literal(`амфитеатър`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}definition`), literal(`a place where archeological remains, old structures, or cultural artifacts are located`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}definition`), literal(`остатки древнего укрепленного поселения или города`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}notation`), literal(`S.ANS`), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}prefLabel`), literal(`ancient site`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}prefLabel`), literal(`forntida lämning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}prefLabel`), literal(`historisk sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}prefLabel`), literal(`антични останки`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ANS`), namedNode(`${skos}prefLabel`), literal(`городище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${skos}definition`), literal(`facility or area for the cultivation of aquatic animals and plants, especially fish, shellfish, and seaweed, in natural or controlled marine or freshwater environments; underwater agriculture`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${skos}notation`), literal(`S.AQC`), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${skos}prefLabel`), literal(`aquaculture facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.AQC`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}definition`), literal(`a natural or man-made structure in the form of an arch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}definition`), literal(`декоративное сооружение в виде больших ворот со сводом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}notation`), literal(`S.ARCH`), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}prefLabel`), literal(`arch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}prefLabel`), literal(`bue`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}prefLabel`), literal(`båge, valv`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}prefLabel`), literal(`арка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ARCH`), namedNode(`${skos}prefLabel`), literal(`арка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}definition`), literal(`a point on the earth whose position has been determined by observations of celestial bodies`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}definition`), literal(`научное учреждение, ведущее астрономические и геофизические наблюдения и исследования; здание, специально оборудованное для таких наблюдений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}notation`), literal(`S.ASTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}prefLabel`), literal(`astronomical station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}prefLabel`), literal(`astronomisk stasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}prefLabel`), literal(`astronomisk station`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}prefLabel`), literal(`астрономическа станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASTR`), namedNode(`${skos}prefLabel`), literal(`обсерватория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}definition`), literal(`a facility where the insane are cared for and protected`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}definition`), literal(`место, где можно укрыться, скрыться от чего-н.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}notation`), literal(`S.ASYL`), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}prefLabel`), literal(`asyl`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}prefLabel`), literal(`asylum`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}prefLabel`), literal(`mentalsjukhus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}prefLabel`), literal(`лудница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ASYL`), namedNode(`${skos}prefLabel`), literal(`убежище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}definition`), literal(`a tract of land used for playing team sports, and athletic track and field events`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}definition`), literal(`комплексное спортивное сооружение со специально оборудованными площадками для состязаний, тренировок, вспомогательными помещениями и трибунами для зрителей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}notation`), literal(`S.ATHF`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}prefLabel`), literal(`athletic field`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}prefLabel`), literal(`idrettsbane`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}prefLabel`), literal(`idrottsfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}prefLabel`), literal(`спортно игрище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATHF`), namedNode(`${skos}prefLabel`), literal(`стадион`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}definition`), literal(`An unattended electronic machine in a public place, connected to a data system and related equipment and activated by a bank customer to obtain cash withdrawals and other banking services.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}definition`), literal(`автоматическое устройство, предназначенное для получения наличных денег по кредитной карточке.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}notation`), literal(`S.ATM`), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}prefLabel`), literal(`automatic teller machine`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}prefLabel`), literal(`automatic teller machine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}prefLabel`), literal(`automatic teller machine`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}prefLabel`), literal(`bankomat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ATM`), namedNode(`${skos}prefLabel`), literal(`банкомат`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${skos}definition`), literal(`A business establishment in which money is kept for saving or commercial purposes or is invested, supplied for loans, or exchanged.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${skos}definition`), literal(`особые экономические институты, осуществляющие: аккумуляцию денежных средств и накоплений, предоставление кредита, проведение денежных расчётов, выпуск в обращение определённых видов денег`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${skos}notation`), literal(`S.BANK`), namedNode(gn)),
        quad(namedNode(`${gn}S.BANK`), namedNode(`${skos}prefLabel`), literal(`bank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}definition`), literal(`a fixed artificial navigation mark`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}definition`), literal(`устройство, оборудованное звуковой, световой или радиотехнической сигнализацией для навигационного ориентирования судов, самолетов и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}notation`), literal(`S.BCN`), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}prefLabel`), literal(`beacon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}prefLabel`), literal(`båk, fyrtorn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}prefLabel`), literal(`signalstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}prefLabel`), literal(`маяк`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BCN`), namedNode(`${skos}prefLabel`), literal(`фар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}definition`), literal(`a structure erected across an obstacle such as a stream, road, etc., in order to carry roads, railroads, and pedestrians across`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}definition`), literal(`сооружение для перехода, переезда через реку, овраг, железнодорожный путь и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}notation`), literal(`S.BDG`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}prefLabel`), literal(`bridge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}prefLabel`), literal(`bro`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}prefLabel`), literal(`bro`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}prefLabel`), literal(`мост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDG`), namedNode(`${skos}prefLabel`), literal(`мост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}definition`), literal(`a destroyed or decayed bridge which is no longer functional`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}definition`), literal(`мост, который больше не функционирует`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}notation`), literal(`S.BDGQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}prefLabel`), literal(`raserad bro`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}prefLabel`), literal(`ruined bridge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}prefLabel`), literal(`ødelagt bro`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}prefLabel`), literal(`останки от мост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BDGQ`), namedNode(`${skos}prefLabel`), literal(`разрушенный мост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}definition`), literal(`a structure built for permanent use, as a house, factory, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}definition`), literal(`архитектурное сооружение, постройка (обычно больших размеров), например, дом, завод и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}notation`), literal(`S.BLDG`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}prefLabel`), literal(`building(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}prefLabel`), literal(`byggnad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}prefLabel`), literal(`bygning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}prefLabel`), literal(`здание`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDG`), namedNode(`${skos}prefLabel`), literal(`сграда(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${skos}definition`), literal(`commercial building where business and/or services are conducted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${skos}notation`), literal(`S.BLDO`), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${skos}prefLabel`), literal(`office building`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BLDO`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}definition`), literal(`a fixture marking a point along a boundary`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}definition`), literal(`ограничительный знак, используемый для обозначения границ`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}notation`), literal(`S.BP`), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}prefLabel`), literal(`boundary marker`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}prefLabel`), literal(`grensemarkør`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}prefLabel`), literal(`gränsmärke`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}prefLabel`), literal(`граничен пазар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BP`), namedNode(`${skos}prefLabel`), literal(`межевой знак`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}definition`), literal(`a building for lodging military personnel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}definition`), literal(`шалаши, временные, легкие строения для размещения войск или рабочих`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}notation`), literal(`S.BRKS`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}prefLabel`), literal(`barracks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}prefLabel`), literal(`brakker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}prefLabel`), literal(`kaserner`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}prefLabel`), literal(`бараки`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKS`), namedNode(`${skos}prefLabel`), literal(`бараки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}definition`), literal(`a structure erected to break the force of waves at the entrance to a harbor or port`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение для защиты места стоянки судов или берега от разрушительного действия волн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}notation`), literal(`S.BRKW`), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}prefLabel`), literal(`breakwater`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}prefLabel`), literal(`bølgebryter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}prefLabel`), literal(`vågbrytare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}prefLabel`), literal(`волнорез`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BRKW`), namedNode(`${skos}prefLabel`), literal(`вълнолом`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}definition`), literal(`a facility for baling agricultural products`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}definition`), literal(`место, где прессуют сено в тюки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}notation`), literal(`S.BSTN`), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}prefLabel`), literal(`baling station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}prefLabel`), literal(`baling station`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}prefLabel`), literal(`ballestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}prefLabel`), literal(`прессовальная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BSTN`), namedNode(`${skos}prefLabel`), literal(`товарна станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}definition`), literal(`a waterside facility for servicing, repairing, and building small vessels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}definition`), literal(`расположенное на берегу моря, реки и т.п.  сооружение, которое занимается обслуживанием, ремонтом и изготовлением лодок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}notation`), literal(`S.BTYD`), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}prefLabel`), literal(`boatyard`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}prefLabel`), literal(`skeppsvarv`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}prefLabel`), literal(`verft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}prefLabel`), literal(`лодкостоянка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BTYD`), namedNode(`${skos}prefLabel`), literal(`лодочная мастерская`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}definition`), literal(`a cave used for human burials`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}definition`), literal(`яма для погребения умершего`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}notation`), literal(`S.BUR`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}prefLabel`), literal(`begravningsgrotta(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}prefLabel`), literal(`burial cave(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}prefLabel`), literal(`gravhule`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}prefLabel`), literal(`могила`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUR`), namedNode(`${skos}prefLabel`), literal(`пгребална пещера(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}definition`), literal(`a facility comprising ticket office, platforms, etc. for loading and unloading passengers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}definition`), literal(`транспортное предприятие для обслуживания пассажиров междугородных и пригородных автобусных сообщений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}notation`), literal(`S.BUSTN`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}prefLabel`), literal(`bus station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTN`), namedNode(`${skos}prefLabel`), literal(`автостанция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}definition`), literal(`a place lacking station facilities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}definition`), literal(`пункт, место, установленные для посадки и высадки пассажиров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}notation`), literal(`S.BUSTP`), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}prefLabel`), literal(`Busshållplats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}prefLabel`), literal(`bus stop`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.BUSTP`), namedNode(`${skos}prefLabel`), literal(`автобусная остановка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}definition`), literal(`a heap of stones erected as a landmark or for other purposes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}definition`), literal(`груда камней, служащая условным знаком, надгробным памятником и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}notation`), literal(`S.CARN`), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}prefLabel`), literal(`cairn`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}prefLabel`), literal(`stenkummel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}prefLabel`), literal(`varde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}prefLabel`), literal(`грамада`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CARN`), namedNode(`${skos}prefLabel`), literal(`пирамида из камней`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}definition`), literal(`an underground passageway or chamber, or cavity on the side of a cliff`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}definition`), literal(`углубление, полое пространство, образовавшееся в земной коре, горных массивах естественным путём или созданные человеком, с выходом наружу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}notation`), literal(`S.CAVE`), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}prefLabel`), literal(`cave(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}prefLabel`), literal(`grotta(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}prefLabel`), literal(`grotte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}prefLabel`), literal(`пещера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CAVE`), namedNode(`${skos}prefLabel`), literal(`пещера(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${skos}definition`), literal(`Centres for Continuous Learning`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${skos}notation`), literal(`S.CCL`), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${skos}prefLabel`), literal(`Centre Continuous Learning`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CCL`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}definition`), literal(`a building for public Christian worship`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}definition`), literal(`здание, в котором происходит христианское богослужение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}notation`), literal(`S.CH`), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}prefLabel`), literal(`church`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}prefLabel`), literal(`kirke`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}prefLabel`), literal(`kyrka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}prefLabel`), literal(`церковь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CH`), namedNode(`${skos}prefLabel`), literal(`църква`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}definition`), literal(`a site occupied by tents, huts, or other shelters for temporary use`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}definition`), literal(`временное поселение, стоянка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}notation`), literal(`S.CMP`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}prefLabel`), literal(`camp(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}prefLabel`), literal(`leir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}prefLabel`), literal(`läger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}prefLabel`), literal(`лагер(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMP`), namedNode(`${skos}prefLabel`), literal(`лагерь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}definition`), literal(`a camp used by loggers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}definition`), literal(`временное поселение лесозаготовителей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}notation`), literal(`S.CMPL`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}prefLabel`), literal(`logging camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}prefLabel`), literal(`logging camp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}prefLabel`), literal(`tømmerkoie`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}prefLabel`), literal(`лагер на дървосекачи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPL`), namedNode(`${skos}prefLabel`), literal(`лесной поселок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}definition`), literal(`a camp used by migrant or temporary laborers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}definition`), literal(`лагерь, в котором живут трудовые мигранты, приезжающие на заработки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}notation`), literal(`S.CMPLA`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}prefLabel`), literal(`arbeidsleir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}prefLabel`), literal(`arbetsläger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}prefLabel`), literal(`labor camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}prefLabel`), literal(`лагерь сезонных рабочих`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPLA`), namedNode(`${skos}prefLabel`), literal(`трудов лагер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}definition`), literal(`a camp used by miners`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}definition`), literal(`временное поселение горняков`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}notation`), literal(`S.CMPMN`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}prefLabel`), literal(`gruveleir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}prefLabel`), literal(`gruvläger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}prefLabel`), literal(`mining camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}prefLabel`), literal(`миньорски лагер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPMN`), namedNode(`${skos}prefLabel`), literal(`рудничный поселок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}definition`), literal(`a camp used by oilfield workers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}definition`), literal(`поселок, в котором живут работники нефтяной промышленности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}notation`), literal(`S.CMPO`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}prefLabel`), literal(`oil camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}prefLabel`), literal(`oljeleir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}prefLabel`), literal(`oljeläger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}prefLabel`), literal(`лагер на нефторъботници`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPO`), namedNode(`${skos}prefLabel`), literal(`поселок нефтяников`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}notation`), literal(`S.CMPQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}prefLabel`), literal(`abandoned camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}prefLabel`), literal(`forlatt leir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}prefLabel`), literal(`övergivet läger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}prefLabel`), literal(`изоставен лагер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPQ`), namedNode(`${skos}prefLabel`), literal(`покинутый лагерь/поселок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}definition`), literal(`a camp used by refugees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}definition`), literal(`лагерь, в котором живут беженцы (люди, покинувшие место своего жительства, спасаясь от бедствия (землетрясения, войны, голода и т.п.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}notation`), literal(`S.CMPRF`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}prefLabel`), literal(`flyktingläger`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}prefLabel`), literal(`flyktningleir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}prefLabel`), literal(`refugee camp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}prefLabel`), literal(`бежански лагер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMPRF`), namedNode(`${skos}prefLabel`), literal(`лагерь беженцев`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}definition`), literal(`a burial place or ground`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}definition`), literal(`место, предназначенное для погребения умерших`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}notation`), literal(`S.CMTY`), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}prefLabel`), literal(`cemetery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}prefLabel`), literal(`gravlund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}prefLabel`), literal(`kyrkogård`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}prefLabel`), literal(`гробище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CMTY`), namedNode(`${skos}prefLabel`), literal(`кладбище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}definition`), literal(`a facility, including buildings, antennae, towers and electronic equipment for receiving and transmitting information`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}definition`), literal(`совокупность технических средств оператора связи, обеспечивающих оказание услуг связи и присоединение к сети общего пользования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}notation`), literal(`S.COMC`), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}prefLabel`), literal(`communication center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}prefLabel`), literal(`комуникационен център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.COMC`), namedNode(`${skos}prefLabel`), literal(`узел связи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}definition`), literal(`a pen or enclosure for confining or capturing animals`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}definition`), literal(`загон для скота`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}notation`), literal(`S.CRRL`), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}prefLabel`), literal(`corral(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}prefLabel`), literal(`fålla, inhägnad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}prefLabel`), literal(`innhegning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}prefLabel`), literal(`заграждение(я) за добитък`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CRRL`), namedNode(`${skos}prefLabel`), literal(`корраль`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}definition`), literal(`a building used for entertainment, especially gambling`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}definition`), literal(`игорный дом, в котором осуществляется проведение азартных игр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}notation`), literal(`S.CSNO`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}prefLabel`), literal(`casino`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}prefLabel`), literal(`kasino`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}prefLabel`), literal(`kasino`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}prefLabel`), literal(`казино`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSNO`), namedNode(`${skos}prefLabel`), literal(`казино`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}definition`), literal(`a large fortified building or set of buildings`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}definition`), literal(`здание (или комплекс зданий), сочетающие в себе жилые и оборонительно функции`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}notation`), literal(`S.CSTL`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}prefLabel`), literal(`castle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}prefLabel`), literal(`slott`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}prefLabel`), literal(`slott`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}prefLabel`), literal(`замок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTL`), namedNode(`${skos}prefLabel`), literal(`замък`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}definition`), literal(`a building in a port where customs and duties are paid, and where vessels are entered and cleared`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}definition`), literal(`помещение, где размещается учреждение, ведающее контролем провоза через границу грузов, багажа, почты и собирающее пошлину за такой провоз`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}notation`), literal(`S.CSTM`), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}prefLabel`), literal(`customs house`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}prefLabel`), literal(`tollbod`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}prefLabel`), literal(`tullhus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}prefLabel`), literal(`митница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CSTM`), namedNode(`${skos}prefLabel`), literal(`таможня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}definition`), literal(`a building in which courts of law are held`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}definition`), literal(`здание, в котором проходят заседания суда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}notation`), literal(`S.CTHSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}prefLabel`), literal(`courthouse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}prefLabel`), literal(`domstolsbyggnad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}prefLabel`), literal(`rettsbygning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}prefLabel`), literal(`здание суда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTHSE`), namedNode(`${skos}prefLabel`), literal(`съдебна сграда`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}definition`), literal(`a facility where atomic research is carried out`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}definition`), literal(`научный центр, в котором проводятся атомные исследования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}notation`), literal(`S.CTRA`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}prefLabel`), literal(`atomcentrum`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}prefLabel`), literal(`atomic center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}prefLabel`), literal(`atomsenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}prefLabel`), literal(`атомен център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRA`), namedNode(`${skos}prefLabel`), literal(`центр атомных исследований`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}definition`), literal(`a facility for community recreation and other activities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}definition`), literal(`помещение для проведения культурных и общественных мероприятий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}notation`), literal(`S.CTRCM`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}prefLabel`), literal(`community center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}prefLabel`), literal(`kommunesenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}prefLabel`), literal(`kulturcentrum`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}prefLabel`), literal(`дом культуры`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRCM`), namedNode(`${skos}prefLabel`), literal(`обществен център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}definition`), literal(`a place where more than one facility is situated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}definition`), literal(`центр, предоставляющий не одну, а сразу несколько услуг одновременно`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}notation`), literal(`S.CTRF`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}prefLabel`), literal(`facility center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}prefLabel`), literal(`tjenestesenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}prefLabel`), literal(`tjänstecentrum`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}prefLabel`), literal(`паркинг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRF`), namedNode(`${skos}prefLabel`), literal(`центр обслуживания`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}definition`), literal(`a complex of health care buildings including two or more of the following: hospital, medical school, clinic, pharmacy, doctor's offices, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}definition`), literal(`комплекс лечебных учреждений; включает в себя: больницу, поликлинику, аптеку, медицинский институт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}notation`), literal(`S.CTRM`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}prefLabel`), literal(`legesenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}prefLabel`), literal(`medical center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}prefLabel`), literal(`medicinskt center`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}prefLabel`), literal(`медицински център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRM`), namedNode(`${skos}prefLabel`), literal(`медицинский центр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}definition`), literal(`a facility where more than one religious activity is carried out, e.g., retreat, school, monastery, worship`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}definition`), literal(`комплекс нескольких религиозных учреждений (монашеская обитель, школа для священнослужителей, церковь)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}notation`), literal(`S.CTRR`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}prefLabel`), literal(`религиозен център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}prefLabel`), literal(`religious center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}prefLabel`), literal(`religiöst center`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}prefLabel`), literal(`religiøst senter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRR`), namedNode(`${skos}prefLabel`), literal(`религиозный центр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}definition`), literal(`a facility for launching, tracking, or controlling satellites and space vehicles`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}definition`), literal(`центр, который осуществляет запуск и наблюдение за полетом искусственных спутников земли и космических кораблей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}notation`), literal(`S.CTRS`), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}prefLabel`), literal(`romsenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}prefLabel`), literal(`rymdcenter`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}prefLabel`), literal(`space center`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}prefLabel`), literal(`космически център`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CTRS`), namedNode(`${skos}prefLabel`), literal(`космический центр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}definition`), literal(`a building where a community of nuns lives in seclusion`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}definition`), literal(`обитель, общежитие монахинь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}notation`), literal(`S.CVNT`), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}prefLabel`), literal(`convent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}prefLabel`), literal(`kloster`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}prefLabel`), literal(`kloster`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}prefLabel`), literal(`женски манастир`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.CVNT`), namedNode(`${skos}prefLabel`), literal(`женский монастырь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}definition`), literal(`a barrier constructed across a stream to impound water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение, искусственная насыпь для предохранения местности от затопления, для ограждения водохранилищ и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}notation`), literal(`S.DAM`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}prefLabel`), literal(`damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}prefLabel`), literal(`dam`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}prefLabel`), literal(`demning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}prefLabel`), literal(`дамба`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAM`), namedNode(`${skos}prefLabel`), literal(`язовирна стена`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}definition`), literal(`a destroyed or decayed dam which is no longer functional`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}definition`), literal(`дамба, которая больше не функционирует`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}notation`), literal(`S.DAMQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}prefLabel`), literal(`förstörd damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}prefLabel`), literal(`ruined dam`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}prefLabel`), literal(`ødelagt demning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}prefLabel`), literal(`разрушена язовирна стена`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMQ`), namedNode(`${skos}prefLabel`), literal(`разрушенная дамба`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}definition`), literal(`a dam put down to bedrock in a sand river`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}definition`), literal(`дамба, возведенная на  песчаном дне реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}notation`), literal(`S.DAMSB`), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}prefLabel`), literal(`demning gravd ned til grunnfjellet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}prefLabel`), literal(`sub-surface dam`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}prefLabel`), literal(`underjordisk damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}prefLabel`), literal(`грунтовая дамба`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DAMSB`), namedNode(`${skos}prefLabel`), literal(`нископовърхностна стена`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}definition`), literal(`a facility for the processing, sale and distribution of milk or milk products`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}definition`), literal(`предприятие по производству молочных продуктов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}notation`), literal(`S.DARY`), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}prefLabel`), literal(`dairy`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}prefLabel`), literal(`meieri`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}prefLabel`), literal(`mejeri`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}prefLabel`), literal(`мандра`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DARY`), namedNode(`${skos}prefLabel`), literal(`молочный комбинат`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}definition`), literal(`a dock providing support for a vessel, and means for removing the water so that the bottom of the vessel can be exposed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}definition`), literal(`портовое сооружение для ремонта и постройки судов; сухой док сооружается на защищённой от волнения акватории и представляет собой отделяемую от неё с торца затвором водонепроницаемую камеру`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}notation`), literal(`S.DCKD`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}prefLabel`), literal(`demning gravd ned til grunnfjellet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}prefLabel`), literal(`dry dock`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}prefLabel`), literal(`torrdocka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}prefLabel`), literal(`сух док`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKD`), namedNode(`${skos}prefLabel`), literal(`сухой док`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}definition`), literal(`a facility for servicing, building, or repairing ships`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}definition`), literal(`предприятие для постройки и ремонта судов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}notation`), literal(`S.DCKY`), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}prefLabel`), literal(`skeppsvarv`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}prefLabel`), literal(`dockyard`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}prefLabel`), literal(`skipsverft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}prefLabel`), literal(`верфь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DCKY`), namedNode(`${skos}prefLabel`), literal(`корабостроителница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}definition`), literal(`an earth or stone embankment usually constructed for flood or stream control`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}definition`), literal(`неглубокий и неширокий ров, обычно служащий для спуска или отвода воды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}notation`), literal(`S.DIKE`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}prefLabel`), literal(`канава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}prefLabel`), literal(`damm, fördämning, bank`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}prefLabel`), literal(`dike`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}prefLabel`), literal(`dike`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIKE`), namedNode(`${skos}prefLabel`), literal(`дига`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}definition`), literal(`office, residence, or facility of a foreign government, which may include an embassy, consulate, chancery, office of charge d?affaires, or other diplomatic, economic, military, or cultural mission`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}definition`), literal(`office, residence, or facility of a foreign government, which may include an embassy, consulate, chancery, office of charge d?affaires, or other diplomatic, economic, military, or cultural mission`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}notation`), literal(`S.DIP`), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}prefLabel`), literal(`diplomatic facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DIP`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}definition`), literal(`an area where fuel is stored`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}definition`), literal(`специальное помещение, предназначенное для хранения горючего`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}notation`), literal(`S.DPOF`), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}prefLabel`), literal(`brennstofflager`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}prefLabel`), literal(`bränsledepå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}prefLabel`), literal(`fuel depot`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}prefLabel`), literal(`горивно депо`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.DPOF`), namedNode(`${skos}prefLabel`), literal(`склад горючего`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}definition`), literal(`a large commercialized agricultural landholding with associated buildings and other facilities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}definition`), literal(`крупное земельное владение, обычно с усадьбой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}notation`), literal(`S.EST`), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}prefLabel`), literal(`egendom(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}prefLabel`), literal(`estate(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}prefLabel`), literal(`gods`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}prefLabel`), literal(`имение(я)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.EST`), namedNode(`${skos}prefLabel`), literal(`поместье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${skos}definition`), literal(`an estate that specializes in the growing of bananas`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${skos}notation`), literal(`S.ESTB`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${skos}prefLabel`), literal(`banana plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTB`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${skos}definition`), literal(`an estate specializing in the cultivation of cotton`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${skos}notation`), literal(`S.ESTC`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${skos}prefLabel`), literal(`cotton plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTC`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}definition`), literal(`an estate specializing in the cultivation of oil palm trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}definition`), literal(`большая земельная площадь, на которой выращивают масличные пальмы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}notation`), literal(`S.ESTO`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}prefLabel`), literal(`oil palm plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}prefLabel`), literal(`oljepalmeplantasje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}prefLabel`), literal(`oljepalmsplantage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}prefLabel`), literal(`плантация за маслена палма`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTO`), namedNode(`${skos}prefLabel`), literal(`плантация масличных пальм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}definition`), literal(`an estate which specializes in growing and tapping rubber trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}definition`), literal(`большая земельная площадь, на которой выращивают каучуковые деревья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}notation`), literal(`S.ESTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}prefLabel`), literal(`gummiplantage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}prefLabel`), literal(`gummiplantasje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}prefLabel`), literal(`rubber plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}prefLabel`), literal(`каучукова плантация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTR`), namedNode(`${skos}prefLabel`), literal(`каучуковая плантация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}definition`), literal(`an estate that specializes in growing sugar cane`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}definition`), literal(`большая земельная площадь, на которой выращивают сахарный тростник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}notation`), literal(`S.ESTSG`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}prefLabel`), literal(`sockerplantage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}prefLabel`), literal(`sugar plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}prefLabel`), literal(`sukkerplantasje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}prefLabel`), literal(`захарна плантация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSG`), namedNode(`${skos}prefLabel`), literal(`сахарная плантация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${skos}definition`), literal(`an estate that specializes in growing sisal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${skos}notation`), literal(`S.ESTSL`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${skos}prefLabel`), literal(`sisal plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTSL`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}definition`), literal(`an estate which specializes in growing tea bushes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}definition`), literal(`большая земельная площадь, на которой выращивают чай`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}notation`), literal(`S.ESTT`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}prefLabel`), literal(`tea plantation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}prefLabel`), literal(`teplantage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}prefLabel`), literal(`teplantasje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}prefLabel`), literal(`чайна плантация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTT`), namedNode(`${skos}prefLabel`), literal(`чайная плантация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}notation`), literal(`S.ESTX`), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}prefLabel`), literal(`del av egendom`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}prefLabel`), literal(`del av gods`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}prefLabel`), literal(`section of estate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}prefLabel`), literal(`участок плантации`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ESTX`), namedNode(`${skos}prefLabel`), literal(`част от имение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}definition`), literal(`a building or buildings housing a center, institute, foundation, hospital, prison, mission, courthouse, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}definition`), literal(`организация, образуемая для осуществления определённого рода деятельности (Государственное у. Общественные учреждения. Научные учреждения. Торговое, лечебно-профилактическое, административное у.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}notation`), literal(`S.FCL`), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}prefLabel`), literal(`anlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}prefLabel`), literal(`facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}prefLabel`), literal(`inrättning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}prefLabel`), literal(`съоръжение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FCL`), namedNode(`${skos}prefLabel`), literal(`учреждение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}definition`), literal(`a building or works where metal casting is carried out`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}definition`), literal(`мастерская, в которой происходит обработка металла путем плавления и заливки в литейные формы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}notation`), literal(`S.FNDY`), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}prefLabel`), literal(`foundry`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}prefLabel`), literal(`gjuteri`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}prefLabel`), literal(`støperi`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}prefLabel`), literal(`леярна`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FNDY`), namedNode(`${skos}prefLabel`), literal(`литейный цех`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}definition`), literal(`a tract of land with associated buildings devoted to agriculture`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}definition`), literal(`частное сельскохозяйственное предприятие, принадлежащее фермеру и ведущееся им на собственной или арендованной земле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}notation`), literal(`S.FRM`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}prefLabel`), literal(`farm`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}prefLabel`), literal(`farm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}prefLabel`), literal(`gård`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}prefLabel`), literal(`ферма`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRM`), namedNode(`${skos}prefLabel`), literal(`ферма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}notation`), literal(`S.FRMQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}prefLabel`), literal(`abandoned farm`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}prefLabel`), literal(`forlatt gård`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}prefLabel`), literal(`övergiven farm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}prefLabel`), literal(`изоставена ферма`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMQ`), namedNode(`${skos}prefLabel`), literal(`покинутая (заброшенная) ферма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}definition`), literal(`tracts of land with associated buildings devoted to agriculture`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}definition`), literal(`частные сельскохозяйственные предприятия, принадлежащие фермеру и ведущиеся им на собственной или арендованной земле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}notation`), literal(`S.FRMS`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}prefLabel`), literal(`farmer`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}prefLabel`), literal(`farms`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}prefLabel`), literal(`gårder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}prefLabel`), literal(`ферми`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMS`), namedNode(`${skos}prefLabel`), literal(`фермы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}definition`), literal(`the buildings and adjacent service areas of a farm`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}definition`), literal(`жилой дом с примыкающими надворными постройками и угодьями (сад, огород и т.п.), представляющий собой отдельное хозяйство (преимущественно в сельской местности)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}notation`), literal(`S.FRMT`), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}prefLabel`), literal(`bondgård`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}prefLabel`), literal(`farmstead`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}prefLabel`), literal(`gårdsbruk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}prefLabel`), literal(`усадьба`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FRMT`), namedNode(`${skos}prefLabel`), literal(`чифлик`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}definition`), literal(`a defensive structure or earthworks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}definition`), literal(`защитное сооружение или земляное укрепление`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}notation`), literal(`S.FT`), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}prefLabel`), literal(`fort`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}prefLabel`), literal(`fort`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}prefLabel`), literal(`fort`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}prefLabel`), literal(`крепость`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FT`), namedNode(`${skos}prefLabel`), literal(`форт`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}definition`), literal(`a boat or other floating conveyance and terminal facilities regularly used to transport people and vehicles across a waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}definition`), literal(`плоскодонное судно, плот для переправы людей, транспорта, грузов через реку, озеро или пролив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}notation`), literal(`S.FY`), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}prefLabel`), literal(`ferge`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}prefLabel`), literal(`ferry`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}prefLabel`), literal(`färja`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}prefLabel`), literal(`паром`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.FY`), namedNode(`${skos}prefLabel`), literal(`ферибот`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}definition`), literal(`a controlled access entrance or exit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}definition`), literal(`конструкция для регулирования входа и выхода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}notation`), literal(`S.GATE`), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}prefLabel`), literal(`gate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}prefLabel`), literal(`grind`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}prefLabel`), literal(`grind,port`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}prefLabel`), literal(`бариера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.GATE`), namedNode(`${skos}prefLabel`), literal(`ворота`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}definition`), literal(`an enclosure for displaying selected plant or animal life`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}definition`), literal(`участок земли для выращивания садовых растений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}notation`), literal(`S.GDN`), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}prefLabel`), literal(`garden(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}prefLabel`), literal(`hage`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}prefLabel`), literal(`trädgård(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}prefLabel`), literal(`градина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.GDN`), namedNode(`${skos}prefLabel`), literal(`сад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}definition`), literal(`a set of steps leading to a river, which are of religious significance, and at their base is usually a platform for bathing`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}definition`), literal(`a set of steps leading to a river, which are of religious significance, and at their base is usually a platform for bathing`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}notation`), literal(`S.GHAT`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}prefLabel`), literal(`ghat`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHAT`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}definition`), literal(`a house used to provide lodging for paying guests`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}definition`), literal(`дом с меблированными комнатами («номерами») для временного проживания путешественников`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}notation`), literal(`S.GHSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}prefLabel`), literal(`gjestehus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}prefLabel`), literal(`guest house`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}prefLabel`), literal(`gästhus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}prefLabel`), literal(`гостиница`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GHSE`), namedNode(`${skos}prefLabel`), literal(`къща за гости`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}definition`), literal(`a facility for separating gas from oil`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}definition`), literal(`аппарат для отделения газа от нефти`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}notation`), literal(`S.GOSP`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}prefLabel`), literal(`gas och olje separator`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}prefLabel`), literal(`gas-oil separator plant`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}prefLabel`), literal(`separasjonsanlegg for gass og olje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}prefLabel`), literal(`нефтегазовый сепаратор`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOSP`), namedNode(`${skos}prefLabel`), literal(`сепаратор на нефт-гас`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${skos}definition`), literal(`a facility housing local governmental offices, usually a city, town, or village hall`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${skos}notation`), literal(`S.GOVL`), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${skos}prefLabel`), literal(`local government office`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GOVL`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}definition`), literal(`a burial site`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}definition`), literal(`место захоронения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}notation`), literal(`S.GRVE`), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}prefLabel`), literal(`могила`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}prefLabel`), literal(`grav`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}prefLabel`), literal(`grav`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}prefLabel`), literal(`grave`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.GRVE`), namedNode(`${skos}prefLabel`), literal(`гроб`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}definition`), literal(`a secluded residence, usually for religious sects`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}definition`), literal(`жилище монахов-отшельников`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}notation`), literal(`S.HERM`), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}prefLabel`), literal(`eneboerhytte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}prefLabel`), literal(`eremitage`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}prefLabel`), literal(`hermitage`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}prefLabel`), literal(`отшелническа килия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HERM`), namedNode(`${skos}prefLabel`), literal(`скит`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}definition`), literal(`a place where caravans stop for rest`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}definition`), literal(`место, где караваны останавливаются, чтобы передохнуть`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}notation`), literal(`S.HLT`), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}prefLabel`), literal(`halting place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}prefLabel`), literal(`halting place`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}prefLabel`), literal(`stoppested`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}prefLabel`), literal(`место привала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HLT`), namedNode(`${skos}prefLabel`), literal(`отбивка за почивка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${skos}definition`), literal(`a residence, owner's or manager's, on a sheep or cattle station, woolshed, outcamp, or Aboriginal outstation, specific to Australia and New Zealand`), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${skos}notation`), literal(`S.HMSD`), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${skos}prefLabel`), literal(`homestead`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HMSD`), namedNode(`${skos}historyNote`), literal(`Added in v3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}definition`), literal(`a building used as a human habitation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}definition`), literal(`жилое здание, строение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}notation`), literal(`S.HSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}prefLabel`), literal(`house(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}prefLabel`), literal(`hus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}prefLabel`), literal(`hus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}prefLabel`), literal(`дом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSE`), namedNode(`${skos}prefLabel`), literal(`къща(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}definition`), literal(`a large house, mansion, or chateau, on a large estate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}definition`), literal(`дом, находящийся за городом, вне города, вблизи от него`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}notation`), literal(`S.HSEC`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}prefLabel`), literal(`country house`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}prefLabel`), literal(`landsted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}prefLabel`), literal(`lantgods`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}prefLabel`), literal(`загородный дом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSEC`), namedNode(`${skos}prefLabel`), literal(`селска къща`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}definition`), literal(`a building in which sick or injured, especially those confined to bed, are medically treated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}definition`), literal(`лечебное учреждение, больница`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}notation`), literal(`S.HSP`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}prefLabel`), literal(`hospital`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}prefLabel`), literal(`sjukhus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}prefLabel`), literal(`sykehus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}prefLabel`), literal(`болница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSP`), namedNode(`${skos}prefLabel`), literal(`госпиталь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}definition`), literal(`a medical facility associated with a hospital for outpatients`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}definition`), literal(`медицинское учреждение, осуществляющее внебольничное лечебно-профилактическое обслуживание населения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}notation`), literal(`S.HSPC`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}prefLabel`), literal(`clinic`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}prefLabel`), literal(`klinik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}prefLabel`), literal(`klinikk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}prefLabel`), literal(`клиника`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPC`), namedNode(`${skos}prefLabel`), literal(`поликлиника`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}definition`), literal(`a building where medical or dental aid is dispensed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}definition`), literal(`медицинское учреждение, занимающееся лечением и предупреждением болезней путём систематического врачебного наблюдения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}notation`), literal(`S.HSPD`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}prefLabel`), literal(`klinik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}prefLabel`), literal(`apotek`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}prefLabel`), literal(`dispensary`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}prefLabel`), literal(`диспансер`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPD`), namedNode(`${skos}prefLabel`), literal(`диспансер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}definition`), literal(`an asylum or hospital for lepers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}definition`), literal(`приют для прокаженных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}notation`), literal(`S.HSPL`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}prefLabel`), literal(`leprasykehus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}prefLabel`), literal(`leprosarium`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}prefLabel`), literal(`leprosarium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}prefLabel`), literal(`лепрозорий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSPL`), namedNode(`${skos}prefLabel`), literal(`общежитие за прокажени`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}definition`), literal(`a place of historical importance`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}definition`), literal(`здания, сооружения, памятные места и предметы, связанные с важнейшими историческими событиями, жизнью исторических деятелей и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}notation`), literal(`S.HSTS`), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}prefLabel`), literal(`historisk sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}prefLabel`), literal(`historical site`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}prefLabel`), literal(`historisk plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}prefLabel`), literal(`исторический памятник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HSTS`), namedNode(`${skos}prefLabel`), literal(`историческо място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}definition`), literal(`a building providing lodging and/or meals for the public`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}definition`), literal(`то же, что и гостиница; дом для временного проживания туристов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}notation`), literal(`S.HTL`), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}prefLabel`), literal(`hotel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}prefLabel`), literal(`hotell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}prefLabel`), literal(`hotell`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}prefLabel`), literal(`отель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HTL`), namedNode(`${skos}prefLabel`), literal(`хотел`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}definition`), literal(`a small primitive house`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}definition`), literal(`небольшой примитивный домик`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}notation`), literal(`S.HUT`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}prefLabel`), literal(`hut`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}prefLabel`), literal(`hydda`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}prefLabel`), literal(`hytte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}prefLabel`), literal(`хижа`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUT`), namedNode(`${skos}prefLabel`), literal(`хижина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}definition`), literal(`small primitive houses`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}definition`), literal(`небольшие примитивные домики`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}notation`), literal(`S.HUTS`), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}prefLabel`), literal(`huts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}prefLabel`), literal(`hyddor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}prefLabel`), literal(`hytter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}prefLabel`), literal(`хижи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.HUTS`), namedNode(`${skos}prefLabel`), literal(`хижины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}definition`), literal(`территория (важный в стратегическом или политическом отношении пункт, район) и размещенные на ней войска с запасами оружия, боеприпасов, продовольствия и других материальных средств, необходимых для боевой и повседневной деятельности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}definition`), literal(`a facility for use of and control by armed forces`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}notation`), literal(`S.INSM`), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}prefLabel`), literal(`военная база`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}prefLabel`), literal(`military installation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}prefLabel`), literal(`militär installation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}prefLabel`), literal(`militæranlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.INSM`), namedNode(`${skos}prefLabel`), literal(`военна инсталация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}definition`), literal(`a facility where research is carried out`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}definition`), literal(`учреждение, занимающееся исследованиями`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}notation`), literal(`S.ITTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}prefLabel`), literal(`forskningsinstitut`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}prefLabel`), literal(`forskningsinstitutt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}prefLabel`), literal(`research institute`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}prefLabel`), literal(`иследователски институт`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ITTR`), namedNode(`${skos}prefLabel`), literal(`научно-исследовательский институт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}definition`), literal(`a structure built out into the water at a river mouth or harbor entrance to regulate currents and silting`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение, перегораживающее реку (или др. водоток) для подъёма уровня воды перед ним, сосредоточения напора в месте расположения сооружения и создания водохранилища`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}notation`), literal(`S.JTY`), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}prefLabel`), literal(`вълнолом`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}prefLabel`), literal(`jetty`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}prefLabel`), literal(`molo`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}prefLabel`), literal(`pir,brygga`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.JTY`), namedNode(`${skos}prefLabel`), literal(`плотина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}definition`), literal(`a place where boats receive or discharge passengers and freight, but lacking most port facilities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}definition`), literal(`совокупность сооружений и устройств для стоянки и обслуживания судов, посадки и высадки пассажиров, грузовых операций и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}notation`), literal(`S.LDNG`), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}prefLabel`), literal(`kai`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}prefLabel`), literal(`landing`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}prefLabel`), literal(`landstigning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}prefLabel`), literal(`причал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LDNG`), namedNode(`${skos}prefLabel`), literal(`стоварище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}definition`), literal(`a settled area inhabited by lepers in relative isolation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}definition`), literal(`лечебное учреждение для больных проказой; место проживания и лечения таких больных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}notation`), literal(`S.LEPC`), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}prefLabel`), literal(`приют для прокаженных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}prefLabel`), literal(`leper colony`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}prefLabel`), literal(`leprakoloni`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}prefLabel`), literal(`spetälskekoloni`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LEPC`), namedNode(`${skos}prefLabel`), literal(`колония на прокажени`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}definition`), literal(`A place in which information resources such as books are kept for reading, reference, or lending.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}definition`), literal(`учреждение или отдел какого-л. учреждения, собирающие и хранящие книги, периодику, памятники письменности и т.п. для общественного пользования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}notation`), literal(`S.LIBR`), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}prefLabel`), literal(`bibliotek`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}prefLabel`), literal(`library`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}prefLabel`), literal(`library`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}prefLabel`), literal(`library`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LIBR`), namedNode(`${skos}prefLabel`), literal(`библиотека`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}definition`), literal(`a place for trash and garbage disposal in which the waste is buried between layers of earth to build up low-lying land`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}definition`), literal(`место, куда свозят, выбрасывают мусор, нечистоты, негодные вещи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}notation`), literal(`S.LNDF`), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}prefLabel`), literal(`landfill`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}prefLabel`), literal(`landfill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}prefLabel`), literal(`landfill`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}prefLabel`), literal(`landfill`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LNDF`), namedNode(`${skos}prefLabel`), literal(`свалка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}definition`), literal(`a basin in a waterway with gates at each end by means of which vessels are passed from one water level to another`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение между водоёмами с различными уровнями воды, позволяющее переводить суда из одного водоёма в другой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}notation`), literal(`S.LOCK`), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}prefLabel`), literal(`lock(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}prefLabel`), literal(`sluse`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}prefLabel`), literal(`sluss(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}prefLabel`), literal(`шлюз`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LOCK`), namedNode(`${skos}prefLabel`), literal(`шлюз(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}definition`), literal(`a distinctive structure exhibiting a major navigation light`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}definition`), literal(`сооружение башенного типа, служащее ориентиром для опознавания берегов, определения места судна и предупреждения о навигационной опасности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}notation`), literal(`S.LTHSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}prefLabel`), literal(`фар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}prefLabel`), literal(`fyr`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}prefLabel`), literal(`fyrtårn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}prefLabel`), literal(`lighthouse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.LTHSE`), namedNode(`${skos}prefLabel`), literal(`световой маяк`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}definition`), literal(`A large, often enclosed shopping complex containing various stores, businesses, and restaurants usually accessible by common passageways.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}definition`), literal(`группа разнородных торговых предприятий, сосредоточенных в одном месте, функционирующих и управляемых как единый, целостный объект`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}notation`), literal(`S.MALL`), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}prefLabel`), literal(`kjøpesenter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}prefLabel`), literal(`köpcentrum`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}prefLabel`), literal(`mall`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}prefLabel`), literal(`мол`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MALL`), namedNode(`${skos}prefLabel`), literal(`торговый центр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}definition`), literal(`a harbor facility for small boats, yachts, etc.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}definition`), literal(`специально оборудованное место, сооружение для причаливания и стоянки лодок, яхт и т.д.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}notation`), literal(`S.MAR`), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}prefLabel`), literal(`marina`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}prefLabel`), literal(`marina`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}prefLabel`), literal(`småbåthavn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}prefLabel`), literal(`пристань`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MAR`), namedNode(`${skos}prefLabel`), literal(`яхтостроителница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}definition`), literal(`one or more buildings where goods are manufactured, processed or fabricated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}definition`), literal(`промышленное или крупное промысловое предприятие, или комплекс предприятий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}notation`), literal(`S.MFG`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}prefLabel`), literal(`fabrik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}prefLabel`), literal(`fabrikk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}prefLabel`), literal(`factory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}prefLabel`), literal(`завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFG`), namedNode(`${skos}prefLabel`), literal(`фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}definition`), literal(`one or more buildings where beer is brewed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}definition`), literal(`предприятие по производству пива`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}notation`), literal(`S.MFGB`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}prefLabel`), literal(`brewery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}prefLabel`), literal(`bryggeri`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}prefLabel`), literal(`bryggeri`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}prefLabel`), literal(`пивоварна`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGB`), namedNode(`${skos}prefLabel`), literal(`пивоварня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}definition`), literal(`a building where food items are canned`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}definition`), literal(`предприятие по производству консерв`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}notation`), literal(`S.MFGC`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}prefLabel`), literal(`cannery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}prefLabel`), literal(`hermetikkfabrikk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}prefLabel`), literal(`konservfabrik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}prefLabel`), literal(`консервна фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGC`), namedNode(`${skos}prefLabel`), literal(`консервный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}definition`), literal(`a facility for processing copper ore`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}definition`), literal(`предприятие по переработке медной руды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}notation`), literal(`S.MFGCU`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}prefLabel`), literal(`copper works`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}prefLabel`), literal(`kopparbruk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}prefLabel`), literal(`kopperverk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}prefLabel`), literal(`медеплавильный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGCU`), namedNode(`${skos}prefLabel`), literal(`медна фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}definition`), literal(`a furnace in which limestone is reduced to lime`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}definition`), literal(`печь для обжига извести`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}notation`), literal(`S.MFGLM`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}prefLabel`), literal(`kalkbrenneri`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}prefLabel`), literal(`kalkugn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}prefLabel`), literal(`limekiln`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}prefLabel`), literal(`варница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGLM`), namedNode(`${skos}prefLabel`), literal(`известеобжигательная печь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}definition`), literal(`a factory where ammunition is made`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}definition`), literal(`предприятие по производству оружия`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}notation`), literal(`S.MFGM`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}prefLabel`), literal(`ammunisjonsfabrikk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}prefLabel`), literal(`ammunitionsfabrik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}prefLabel`), literal(`munitions plant`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}prefLabel`), literal(`оружейный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGM`), namedNode(`${skos}prefLabel`), literal(`фабрка за амуниции`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}definition`), literal(`a facility for producing fertilizer`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}definition`), literal(`предприятие по производству удобрений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}notation`), literal(`S.MFGPH`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}prefLabel`), literal(`fosfatanlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}prefLabel`), literal(`fosfatfabrik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}prefLabel`), literal(`phosphate works`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}prefLabel`), literal(`фосфатна фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGPH`), namedNode(`${skos}prefLabel`), literal(`фосфатный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}notation`), literal(`S.MFGQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}prefLabel`), literal(`abandoned factory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt fabrikk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}prefLabel`), literal(`övergiven fabrik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}prefLabel`), literal(`изоставена фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGQ`), namedNode(`${skos}prefLabel`), literal(`покинутый завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}definition`), literal(`a facility for converting raw sugar into refined sugar`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}definition`), literal(`завод по переработки сахарного тростника в рафинад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}notation`), literal(`S.MFGSG`), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}prefLabel`), literal(`sockerbruk, sockerraffinaderi`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}prefLabel`), literal(`sugar refinery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}prefLabel`), literal(`sukkerraffineri`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}prefLabel`), literal(`захарна рафинерия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MFGSG`), namedNode(`${skos}prefLabel`), literal(`рафинадный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}definition`), literal(`a place where goods are bought and sold at regular intervals`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}definition`), literal(`место торговли, на котором встречаются продавцы и покупатели`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}notation`), literal(`S.MKT`), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}prefLabel`), literal(`marked`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}prefLabel`), literal(`market`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}prefLabel`), literal(`marknad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}prefLabel`), literal(`пазар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MKT`), namedNode(`${skos}prefLabel`), literal(`рынок`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}definition`), literal(`a building housing machines for transforming, shaping, finishing, grinding, or extracting products`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}definition`), literal(`промышленное предприятие, обрабатывающее сырье машинным способом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}notation`), literal(`S.ML`), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}prefLabel`), literal(`kvarn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}prefLabel`), literal(`mill(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}prefLabel`), literal(`mølle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}prefLabel`), literal(`мелница(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ML`), namedNode(`${skos}prefLabel`), literal(`фабрика`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}definition`), literal(`a facility for improving the metal content of ore by concentration`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}definition`), literal(`предприятие, которое занимается отделением друг от друга входящих в состав руды металлов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}notation`), literal(`S.MLM`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}prefLabel`), literal(`malmbehandlingsanlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}prefLabel`), literal(`malmförädling`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}prefLabel`), literal(`ore treatment plant`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}prefLabel`), literal(`завод по переработке руды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLM`), namedNode(`${skos}prefLabel`), literal(`миннообогатително предприятие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}definition`), literal(`a mill where oil is extracted from olives`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}definition`), literal(`предприятие, которое занимается переработкой оливок и получением из них оливкового масла.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}notation`), literal(`S.MLO`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}prefLabel`), literal(`olive oil mill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}prefLabel`), literal(`olivenoljemølle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}prefLabel`), literal(`olivoljebruk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}prefLabel`), literal(`завод по производству оливкового масла`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLO`), namedNode(`${skos}prefLabel`), literal(`фабрика за зехтин`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}definition`), literal(`a facility where sugar cane is processed into raw sugar`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}definition`), literal(`предприятие, которое занимается переработкой сахарного тростника в нерафинированный сахар`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}notation`), literal(`S.MLSG`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}prefLabel`), literal(`sockerbruk, sockerraffinaderi`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}prefLabel`), literal(`sugar mill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}prefLabel`), literal(`sukkermølle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}prefLabel`), literal(`захарна фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSG`), namedNode(`${skos}prefLabel`), literal(`сахарный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}definition`), literal(`a sugar mill no longer used as a sugar mill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}definition`), literal(`сахарный завод, прекративший свою работу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}notation`), literal(`S.MLSGQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}prefLabel`), literal(`former sugar mill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}prefLabel`), literal(`tidigare sockerbruk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}prefLabel`), literal(`tidligere sukkermølle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}prefLabel`), literal(`бивша захарна фабрика`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSGQ`), namedNode(`${skos}prefLabel`), literal(`бывший сахарный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}definition`), literal(`a mill where logs or lumber are sawn to specified shapes and sizes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}definition`), literal(`изготовление пиломатериалов (брусьев и досок) из брёвен`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}notation`), literal(`S.MLSW`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}prefLabel`), literal(`sagbruk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}prefLabel`), literal(`sawmill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}prefLabel`), literal(`sågverk`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}prefLabel`), literal(`дъскорезница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLSW`), namedNode(`${skos}prefLabel`), literal(`лесопильный завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}definition`), literal(`a mill or water pump powered by wind`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}definition`), literal(`аэродинамический механизм, который выполняет механическую работу за счет энергии ветра, улавливаемой крыльями мельницы. Наиболее известным применением ветряных мельниц является их использование для помола муки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}notation`), literal(`S.MLWND`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}prefLabel`), literal(`vindmølle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}prefLabel`), literal(`väderkvarn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}prefLabel`), literal(`windmill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}prefLabel`), literal(`ветряная мельница`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWND`), namedNode(`${skos}prefLabel`), literal(`вятърна мелница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}definition`), literal(`a mill powered by running water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}definition`), literal(`гидротехнические сооружение, использующее гидроэнергию, получаемую с водяного колеса, движение которого выполняет полезную работу посредством зубчатой передачи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}notation`), literal(`S.MLWTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}prefLabel`), literal(`kvernhus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}prefLabel`), literal(`vattenkvarn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}prefLabel`), literal(`water mill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}prefLabel`), literal(`водна мелница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MLWTR`), namedNode(`${skos}prefLabel`), literal(`водяная мельница`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}definition`), literal(`a site where mineral ores are extracted from the ground by excavating surface pits and subterranean passages`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, ведущее добычу полезных ископаемых подземным способом; место проведения подземных работ`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}notation`), literal(`S.MN`), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}prefLabel`), literal(`gruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}prefLabel`), literal(`gruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}prefLabel`), literal(`mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}prefLabel`), literal(`мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MN`), namedNode(`${skos}prefLabel`), literal(`шахта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}definition`), literal(`a mine where gold ore, or alluvial gold is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}definition`), literal(`предприятие, осуществляющее добычу золота или золотой руды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}notation`), literal(`S.MNAU`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}prefLabel`), literal(`gold mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}prefLabel`), literal(`guldgruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}prefLabel`), literal(`gullgruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}prefLabel`), literal(`златна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNAU`), namedNode(`${skos}prefLabel`), literal(`золотопромышленный рудник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}definition`), literal(`a mine where coal is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, ведущее добычу угля подземным способом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}notation`), literal(`S.MNC`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}prefLabel`), literal(`coal mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}prefLabel`), literal(`kolgruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}prefLabel`), literal(`kullgruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}prefLabel`), literal(`въглищна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNC`), namedNode(`${skos}prefLabel`), literal(`угольная шахта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}definition`), literal(`a mine where chrome ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, ведущее добычу хрома подземным способом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}notation`), literal(`S.MNCR`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}prefLabel`), literal(`chrome mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}prefLabel`), literal(`kromgruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}prefLabel`), literal(`kromgruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}prefLabel`), literal(`хромна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCR`), namedNode(`${skos}prefLabel`), literal(`шахта по добыче хрома`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}definition`), literal(`a mine where copper ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, осуществляющее добычу меди`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}notation`), literal(`S.MNCU`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}prefLabel`), literal(`copper mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}prefLabel`), literal(`koppargruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}prefLabel`), literal(`koppergruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}prefLabel`), literal(`медна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNCU`), namedNode(`${skos}prefLabel`), literal(`медный рудник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${skos}definition`), literal(`a place where diatomaceous earth is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${skos}notation`), literal(`S.MNDT`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${skos}prefLabel`), literal(`diatomite mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNDT`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}definition`), literal(`a mine where iron ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, осуществляющее добычу железа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}notation`), literal(`S.MNFE`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}prefLabel`), literal(`iron mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}prefLabel`), literal(`jerngruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}prefLabel`), literal(`järngruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}prefLabel`), literal(`железный рудник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNFE`), namedNode(`${skos}prefLabel`), literal(`желязна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}definition`), literal(`a commemorative structure or statue`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}definition`), literal(`архитектурное или скульптурное сооружение в память какого-л. лица, события`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}notation`), literal(`S.MNMT`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}prefLabel`), literal(`monument`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}prefLabel`), literal(`monument`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}prefLabel`), literal(`monument`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}prefLabel`), literal(`монумент`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNMT`), namedNode(`${skos}prefLabel`), literal(`памятник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}definition`), literal(`a mine from which salt is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}definition`), literal(`горнопромышленное предприятие, осуществляющее добычу солей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}notation`), literal(`S.MNN`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}prefLabel`), literal(`salt mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}prefLabel`), literal(`saltgruva(or)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}prefLabel`), literal(`saltgruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}prefLabel`), literal(`солна мина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNN`), namedNode(`${skos}prefLabel`), literal(`соляная шахта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${skos}definition`), literal(`a mine where nickel ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${skos}notation`), literal(`S.MNNI`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${skos}prefLabel`), literal(`nickel mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNNI`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${skos}definition`), literal(`a mine where lead ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${skos}notation`), literal(`S.MNPB`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${skos}prefLabel`), literal(`lead mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPB`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${skos}definition`), literal(`a place where heavy metals are concentrated and running water is used to extract them from unconsolidated sediments`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${skos}notation`), literal(`S.MNPL`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${skos}prefLabel`), literal(`placer mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNPL`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}notation`), literal(`S.MNQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}prefLabel`), literal(`abandoned mine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt gruve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}prefLabel`), literal(`övergiven gruva`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная шахта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQ`), namedNode(`${skos}prefLabel`), literal(`изоставена мина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}definition`), literal(`a surface mine where building stone or gravel and sand, etc. are extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}definition`), literal(`место открытой разработки неглубоко залегающих полезных ископаемых (угля, песка, глины и т.п.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}notation`), literal(`S.MNQR`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}prefLabel`), literal(`quarry(-ies)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}prefLabel`), literal(`steinbrudd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}prefLabel`), literal(`stenbrott`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}prefLabel`), literal(`каменоломна(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNQR`), namedNode(`${skos}prefLabel`), literal(`карьер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${skos}definition`), literal(`a mine where tin ore is extracted`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${skos}notation`), literal(`S.MNSN`), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${skos}prefLabel`), literal(`tin mine(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MNSN`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение для защиты места стоянки судов или берега от разрушительного действия волн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}definition`), literal(`a massive structure of masonry or large stones serving as a pier or breakwater`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}notation`), literal(`S.MOLE`), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}prefLabel`), literal(`дига`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}prefLabel`), literal(`molo`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}prefLabel`), literal(`mole`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}prefLabel`), literal(`pir, vågbrytare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MOLE`), namedNode(`${skos}prefLabel`), literal(`волнолом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}definition`), literal(`a building for public Islamic worship`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}definition`), literal(`у мусульман: молитвенный дом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}notation`), literal(`S.MSQE`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}prefLabel`), literal(`moské`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}prefLabel`), literal(`moské`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}prefLabel`), literal(`mosque`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}prefLabel`), literal(`джамия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSQE`), namedNode(`${skos}prefLabel`), literal(`мечеть`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}definition`), literal(`a place characterized by dwellings, school, church, hospital and other facilities operated by a religious group for the purpose of providing charitable services and to propagate religion`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}definition`), literal(`жилые дома, больница, школа, принадлежащие религиозной организации, которая занимается благотворительностью и распространением собственной религии среди инаковерующих`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}notation`), literal(`S.MSSN`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}prefLabel`), literal(`beskickning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}prefLabel`), literal(`misjonsstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}prefLabel`), literal(`mission`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}prefLabel`), literal(`мисия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSN`), namedNode(`${skos}prefLabel`), literal(`резиденция миссионеров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}notation`), literal(`S.MSSNQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}prefLabel`), literal(`abandoned mission`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt misjonsstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}prefLabel`), literal(`övergiven beskickning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная резиденция миссионеров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSSNQ`), namedNode(`${skos}prefLabel`), literal(`изоставена мисия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}definition`), literal(`a building and grounds where a community of monks lives in seclusion`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}definition`), literal(`религиозная община монахов, представляющая собой церковно-хозяйственную организацию, владеющую землями и капиталами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}notation`), literal(`S.MSTY`), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}prefLabel`), literal(`kloster`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}prefLabel`), literal(`monastery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}prefLabel`), literal(`munkkloster`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}prefLabel`), literal(`манастир`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MSTY`), namedNode(`${skos}prefLabel`), literal(`мужской монастырь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}definition`), literal(`metro station (Underground, Tube, or Métro)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}definition`), literal(`пункт остановки электропоездов в  метрополитене`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}notation`), literal(`S.MTRO`), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}prefLabel`), literal(`metro station`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}prefLabel`), literal(`metro station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}prefLabel`), literal(`metro station`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}prefLabel`), literal(`tunnelbanestation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MTRO`), namedNode(`${skos}prefLabel`), literal(`станция метро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}definition`), literal(`a building where objects of permanent interest in one or more of the arts and sciences are preserved and exhibited`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}definition`), literal(`учреждение, собирающее, хранящее и выставляющее на обозрение памятники истории, искусства, культуры, науки, техники и других областей, сфер деятельности общества; помещение такого учреждения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}notation`), literal(`S.MUS`), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}prefLabel`), literal(`museum`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}prefLabel`), literal(`museum`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}prefLabel`), literal(`museum`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}prefLabel`), literal(`музей`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.MUS`), namedNode(`${skos}prefLabel`), literal(`музей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}definition`), literal(`a religious house or school where novices are trained`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}definition`), literal(`религиозный дом, где учатся послушники, готовящиеся стать монахами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}notation`), literal(`S.NOV`), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}prefLabel`), literal(`novisiat`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}prefLabel`), literal(`novitiat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}prefLabel`), literal(`novitiate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}prefLabel`), literal(`дом послушничества`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.NOV`), namedNode(`${skos}prefLabel`), literal(`семинария`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}definition`), literal(`a place where plants are propagated for transplanting or grafting`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}definition`), literal(`тёплое с покрытием из прозрачного материала помещение для выращивания ранних овощей, цветов, теплолюбивых растений; оранжерея`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}notation`), literal(`S.NSY`), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}prefLabel`), literal(`barnehage`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}prefLabel`), literal(`nursery(-ies)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}prefLabel`), literal(`plantskola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}prefLabel`), literal(`парник(-ци)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.NSY`), namedNode(`${skos}prefLabel`), literal(`теплица`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}definition`), literal(`a wildlife or scenic observation point`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}definition`), literal(`специально оборудованное место, с которого ведётся наблюдение за действиями противника и своих войск`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}notation`), literal(`S.OBPT`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}prefLabel`), literal(`observasjonssted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}prefLabel`), literal(`observation point`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}prefLabel`), literal(`observationspunkt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}prefLabel`), literal(`наблюдателна точка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBPT`), namedNode(`${skos}prefLabel`), literal(`наблюдательный пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}definition`), literal(`научное учреждение, ведущее астрономические и геофизические наблюдения и исследования; здание, специально оборудованное для таких наблюдений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}definition`), literal(`a facility equipped for observation of atmospheric or space phenomena`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}notation`), literal(`S.OBS`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}prefLabel`), literal(`обсерватория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}prefLabel`), literal(`observatorium`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}prefLabel`), literal(`observatorium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}prefLabel`), literal(`observatory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBS`), namedNode(`${skos}prefLabel`), literal(`обсерватория`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}definition`), literal(`a facility equipped with an array of antennae for receiving radio waves from space`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}definition`), literal(`учреждение, оборудованное антеннами для приема радиоволн из Космоса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}notation`), literal(`S.OBSR`), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}prefLabel`), literal(`radio observatory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}prefLabel`), literal(`radioobservatorium`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}prefLabel`), literal(`radioobservatorium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}prefLabel`), literal(`радио обсерватория`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OBSR`), namedNode(`${skos}prefLabel`), literal(`радиообсерватория`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}definition`), literal(`a section of an oil pipeline where two or more pipes join together`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}definition`), literal(`участок нефтепровода, на котором происходит соединение двух или более трубопроводов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}notation`), literal(`S.OILJ`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}prefLabel`), literal(`knutpunkt för oljepipeline`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}prefLabel`), literal(`oil pipeline junction`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}prefLabel`), literal(`oljeledningsknutepunkt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}prefLabel`), literal(`връзка на нефтопровод`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILJ`), namedNode(`${skos}prefLabel`), literal(`место соединение нескольких нефтепроводов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}notation`), literal(`S.OILQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}prefLabel`), literal(`abandoned oil well`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}prefLabel`), literal(`forlatt oljebrønn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}prefLabel`), literal(`övergiven oljekälla`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная нефтяная скважина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILQ`), namedNode(`${skos}prefLabel`), literal(`изоставен петролен кладенец`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}definition`), literal(`a facility for converting crude oil into refined petroleum products`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}definition`), literal(`предприятие, которое занимается переработкой нефти в бензин, авиационный керосин, мазут, дизельное топливо, смазочные масла, смазки, битумы, нефтяной кокс сырьё для нефтехимии`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}notation`), literal(`S.OILR`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}prefLabel`), literal(`oil refinery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}prefLabel`), literal(`oljeraffinaderi`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}prefLabel`), literal(`oljeraffineri`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}prefLabel`), literal(`нефтеперерабатывающий завод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILR`), namedNode(`${skos}prefLabel`), literal(`петролна рафинерия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}definition`), literal(`a tract of land occupied by large, cylindrical, metal tanks in which oil or liquid petrochemicals are stored`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}definition`), literal(`промышленный объект для хранения нефти или нефтепродуктов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}notation`), literal(`S.OILT`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}prefLabel`), literal(`depå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}prefLabel`), literal(`petrokjemisk anlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}prefLabel`), literal(`tank farm`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}prefLabel`), literal(`нефтехранилище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILT`), namedNode(`${skos}prefLabel`), literal(`петролна база`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}definition`), literal(`a well from which oil may be pumped`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}definition`), literal(`вертикальная горная выработка круглого сечения, предназначенная для разведки либо добычи нефти и попутного газа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}notation`), literal(`S.OILW`), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}prefLabel`), literal(`oil well`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}prefLabel`), literal(`oljebrønn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}prefLabel`), literal(`oljekälla`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}prefLabel`), literal(`нефтяная скважина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OILW`), namedNode(`${skos}prefLabel`), literal(`петролен кладенец`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}definition`), literal(`A theater designed chiefly for the performance of operas.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}definition`), literal(`театр; оперная труппа театра`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}notation`), literal(`S.OPRA`), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}prefLabel`), literal(`opera house`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}prefLabel`), literal(`operahus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}prefLabel`), literal(`operahus`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}prefLabel`), literal(`опера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.OPRA`), namedNode(`${skos}prefLabel`), literal(`оперный дом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}definition`), literal(`a large stately house, often a royal or presidential residence`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}definition`), literal(`здание, являющееся жилищем, постоянным местопребыванием царствующей особы, главы государства, а также членов царствующей семьи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}notation`), literal(`S.PAL`), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}prefLabel`), literal(`palace`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}prefLabel`), literal(`palass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}prefLabel`), literal(`palats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}prefLabel`), literal(`дворец`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PAL`), namedNode(`${skos}prefLabel`), literal(`дворец`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}definition`), literal(`a tower-like storied structure, usually a Buddhist shrine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}definition`), literal(`в Китае, Японии и некоторых других странах: культовое мемориальное буддийское сооружение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}notation`), literal(`S.PGDA`), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}prefLabel`), literal(`pagod`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}prefLabel`), literal(`pagoda`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}prefLabel`), literal(`pagode`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}prefLabel`), literal(`пагода`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PGDA`), namedNode(`${skos}prefLabel`), literal(`пагода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}definition`), literal(`a structure built out into navigable water on piles providing berthing for ships and recreation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}definition`), literal(`двусторонний причал, выдающийся в акваторию порта и предназначенный для швартовки судов с двух сторон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}notation`), literal(`S.PIER`), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}prefLabel`), literal(`pier`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}prefLabel`), literal(`pir`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}prefLabel`), literal(`pir, kaj, vågbrytare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}prefLabel`), literal(`пирс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PIER`), namedNode(`${skos}prefLabel`), literal(`пристан`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}definition`), literal(`an area used for parking vehicles`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}definition`), literal(`место для парковки автотранспорта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}notation`), literal(`S.PKLT`), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}prefLabel`), literal(`parkerginsplats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}prefLabel`), literal(`parkeringsplass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}prefLabel`), literal(`parking lot`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}prefLabel`), literal(`автостоянка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PKLT`), namedNode(`${skos}prefLabel`), literal(`място за паркиране`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}definition`), literal(`a facility for pumping oil through a pipeline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}definition`), literal(`станция, предназначенная для перекачки нефти через трубопроводы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}notation`), literal(`S.PMPO`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}prefLabel`), literal(`oil pumping station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}prefLabel`), literal(`oljepumpestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}prefLabel`), literal(`pumpstation för olja`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}prefLabel`), literal(`нефтена помпена станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPO`), namedNode(`${skos}prefLabel`), literal(`нефтеперекачивающая станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}definition`), literal(`a facility for pumping water from a major well or through a pipeline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}definition`), literal(`специальное здание для насосов, перекачивающих воду из водоёма к местам её использования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}notation`), literal(`S.PMPW`), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}prefLabel`), literal(`pumpstation för vatten`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}prefLabel`), literal(`vannpumpestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}prefLabel`), literal(`water pumping station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}prefLabel`), literal(`водна помпена станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PMPW`), namedNode(`${skos}prefLabel`), literal(`водокачка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}definition`), literal(`a public building in which mail is received, sorted and distributed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}definition`), literal(`учреждение связи, ведающее пересылкой писем, периодических изданий, посылок, денег и т.п.; здание, помещение, где находится это учреждение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}notation`), literal(`S.PO`), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}prefLabel`), literal(`post office`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}prefLabel`), literal(`postkontor`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}prefLabel`), literal(`postkontor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}prefLabel`), literal(`почта`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PO`), namedNode(`${skos}prefLabel`), literal(`пощенска станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}definition`), literal(`a building in which police are stationed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}definition`), literal(`здание, в котором располагается пост милиции`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}notation`), literal(`S.PP`), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}prefLabel`), literal(`police post`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}prefLabel`), literal(`polispostering`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}prefLabel`), literal(`politiforlegning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}prefLabel`), literal(`милицейский пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PP`), namedNode(`${skos}prefLabel`), literal(`полицейски пост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}notation`), literal(`S.PPQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}prefLabel`), literal(`abandoned police post`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt politiforlegning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}prefLabel`), literal(`övergiven polispostering`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}prefLabel`), literal(`заброшенный полицейский пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PPQ`), namedNode(`${skos}prefLabel`), literal(`изоставен полицейски пост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}definition`), literal(`a controlled access to a park`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}definition`), literal(`вход в парк, запираемый створами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}notation`), literal(`S.PRKGT`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}prefLabel`), literal(`inngang til militæranlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}prefLabel`), literal(`park gate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}prefLabel`), literal(`parkingång`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}prefLabel`), literal(`ворота парка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKGT`), namedNode(`${skos}prefLabel`), literal(`паркова бариера`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}definition`), literal(`a park administrative facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}definition`), literal(`здание, в котором располагается администрация парка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}notation`), literal(`S.PRKHQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}prefLabel`), literal(`hovedkvarter på militæranlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}prefLabel`), literal(`park headquarters`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}prefLabel`), literal(`park huvudkontor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}prefLabel`), literal(`администрация на парк`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRKHQ`), namedNode(`${skos}prefLabel`), literal(`администрация парка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}definition`), literal(`a facility for confining prisoners`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}definition`), literal(`место заключения, здание, где содержатся лица, приговорённые судом к лишению свободы; лица, находящиеся под следствием`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}notation`), literal(`S.PRN`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}prefLabel`), literal(`fengsel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}prefLabel`), literal(`fängelse`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}prefLabel`), literal(`prison`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}prefLabel`), literal(`зътвор`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRN`), namedNode(`${skos}prefLabel`), literal(`тюрьма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}definition`), literal(`a facility for confining, training, and reforming young law offenders`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}definition`), literal(`исправительно-трудовое учреждение, в котором отбывают наказание лица до 18 лет, осуждённые к лишению свободы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}notation`), literal(`S.PRNJ`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}prefLabel`), literal(`forbedringsanstalt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}prefLabel`), literal(`reformatory`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}prefLabel`), literal(`uppfostringsanstalt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}prefLabel`), literal(`исправително училище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNJ`), namedNode(`${skos}prefLabel`), literal(`колония для несовершеннолетних`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}notation`), literal(`S.PRNQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}prefLabel`), literal(`abandoned prison`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt fengsel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}prefLabel`), literal(`övergivet fängelse`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная тюрьма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PRNQ`), namedNode(`${skos}prefLabel`), literal(`изоставен затвор`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}definition`), literal(`a facility for generating electric power`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}definition`), literal(`предприятие, где производится электроэнергия из других видов энергии`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}notation`), literal(`S.PS`), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}prefLabel`), literal(`kraftstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}prefLabel`), literal(`kraftstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}prefLabel`), literal(`power station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}prefLabel`), literal(`влектростанция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PS`), namedNode(`${skos}prefLabel`), literal(`электростанция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}definition`), literal(`a building where electricity is generated from water power`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}definition`), literal(`электростанция, преобразующая энергию падающей воды в электроэнергию (сокращённо ГЭС)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}notation`), literal(`S.PSH`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}prefLabel`), literal(`hydroelectric power station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}prefLabel`), literal(`vannkraftverk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}prefLabel`), literal(`vattenkraftstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}prefLabel`), literal(`ВЕЦ`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSH`), namedNode(`${skos}prefLabel`), literal(`гидроэлектростанция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}definition`), literal(`a post or station at an international boundary for the regulation of movement of people and goods`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}definition`), literal(`пост, ведающий контролем  передвижения через международную границу людей и товаров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}notation`), literal(`S.PSTB`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}prefLabel`), literal(`border post`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}prefLabel`), literal(`grensestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}prefLabel`), literal(`gränspostering`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}prefLabel`), literal(`граничен пост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTB`), namedNode(`${skos}prefLabel`), literal(`пограничный пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}definition`), literal(`a building at an international boundary where customs and duties are paid on goods`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}definition`), literal(`пост, ведающий контролем провоза через границу грузов, багажа, почты и собирающее пошлину за такой провоз`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}notation`), literal(`S.PSTC`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}prefLabel`), literal(`customs post`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}prefLabel`), literal(`tollstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}prefLabel`), literal(`tullpostering`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}prefLabel`), literal(`митнически пост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTC`), namedNode(`${skos}prefLabel`), literal(`таможенный пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}definition`), literal(`a post from which patrols are sent out`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}definition`), literal(`вид наряда, который используется для несения патрульно-постовой службы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}notation`), literal(`S.PSTP`), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}prefLabel`), literal(`patrol post`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}prefLabel`), literal(`patruljepost`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}prefLabel`), literal(`patrullpostering`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}prefLabel`), literal(`патрулен пост`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PSTP`), namedNode(`${skos}prefLabel`), literal(`патрульный пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}definition`), literal(`an ancient massive structure of square ground plan with four triangular faces meeting at a point and used for enclosing tombs`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}definition`), literal(`В Древнем Египте: массивное сооружение из каменных блоков с четырёхугольным основанием и сходящимися к вершине боковыми гранями, служившее гробницей фараона`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}notation`), literal(`S.PYR`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}prefLabel`), literal(`pyramid`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}prefLabel`), literal(`pyramid`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}prefLabel`), literal(`pyramide`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}prefLabel`), literal(`пирамида`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYR`), namedNode(`${skos}prefLabel`), literal(`пирамида`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}definition`), literal(`ancient massive structures of square ground plan with four triangular faces meeting at a point and used for enclosing tombs`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}definition`), literal(`В Древнем Египте: массивные сооружения из каменных блоков с четырёхугольным основанием и сходящимися к вершине боковыми гранями, служившие гробницей фараона`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}notation`), literal(`S.PYRS`), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}prefLabel`), literal(`pyramider`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}prefLabel`), literal(`pyramider`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}prefLabel`), literal(`pyramids`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}prefLabel`), literal(`пирамиди`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.PYRS`), namedNode(`${skos}prefLabel`), literal(`пирамиды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}definition`), literal(`a structure of solid construction along a shore or bank which provides berthing for ships and which generally provides cargo handling facilities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}definition`), literal(`стоянка для судов; специальное сооружение, к которому причаливают суда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}notation`), literal(`S.QUAY`), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}prefLabel`), literal(`причал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}prefLabel`), literal(`brygge`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}prefLabel`), literal(`kaj`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}prefLabel`), literal(`quay`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.QUAY`), namedNode(`${skos}prefLabel`), literal(`кей`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${skos}definition`), literal(`a road junction formed around a central circle about which traffic moves in one direction only`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${skos}notation`), literal(`S.RDCR`), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${skos}prefLabel`), literal(`traffic circle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RDCR`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}definition`), literal(`a recreation field where golf is played`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}definition`), literal(`место для отдыха, где находится поле, предназначенное для игры в гольф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}notation`), literal(`S.RECG`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}prefLabel`), literal(`golf course`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}prefLabel`), literal(`golfbana`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}prefLabel`), literal(`golfbane`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}prefLabel`), literal(`голф игрище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECG`), namedNode(`${skos}prefLabel`), literal(`поле для гольфа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}definition`), literal(`a track where races are held`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}definition`), literal(`специально оборудованный участок для конных бегов, скачек и состязаний, представляющий собой площадь овальной формы с амфитеатром для зрителей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}notation`), literal(`S.RECR`), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}prefLabel`), literal(`kapplöpningsbana`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}prefLabel`), literal(`racetrack`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}prefLabel`), literal(`veddeløpsbane`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}prefLabel`), literal(`ипподром`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RECR`), namedNode(`${skos}prefLabel`), literal(`хиподрум`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}definition`), literal(`A place where meals are served to the public`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}definition`), literal(`торговое заведение, где можно вкусно поесть и приятно провести время (иногда с музыкой, танцами и т.п.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}notation`), literal(`S.REST`), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}prefLabel`), literal(`restaurang`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}prefLabel`), literal(`restaurant`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}prefLabel`), literal(`restaurant`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}prefLabel`), literal(`ресторан`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.REST`), namedNode(`${skos}prefLabel`), literal(`ресторант`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${skos}definition`), literal(`a building where goods and/or services are offered for sale`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${skos}notation`), literal(`S.RET`), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${skos}prefLabel`), literal(`store`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RET`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}definition`), literal(`a structure maintained for the rest and shelter of travelers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}definition`), literal(`лечебно-профилактическое учреждение для лечения и отдыха`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}notation`), literal(`S.RHSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}prefLabel`), literal(`hvilehjem`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}prefLabel`), literal(`härbärge, vilohem`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}prefLabel`), literal(`resthouse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}prefLabel`), literal(`дом отдыха`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RHSE`), namedNode(`${skos}prefLabel`), literal(`страноприемница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}definition`), literal(`a breeding place of a colony of birds or seals`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}definition`), literal(`место, где лежат стадами некоторые морские животные`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}notation`), literal(`S.RKRY`), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}prefLabel`), literal(`djurkoloni`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}prefLabel`), literal(`fuglekoloni`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}prefLabel`), literal(`rookery`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}prefLabel`), literal(`лежбище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RKRY`), namedNode(`${skos}prefLabel`), literal(`птича колония`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}definition`), literal(`an ancient site of significant religious importance`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}definition`), literal(`место религиозного поклонения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}notation`), literal(`S.RLG`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}prefLabel`), literal(`religious site`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}prefLabel`), literal(`religiös plats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}prefLabel`), literal(`religiøst sted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}prefLabel`), literal(`религиозная святыня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLG`), namedNode(`${skos}prefLabel`), literal(`религиозно място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}definition`), literal(`a place of temporary seclusion, especially for religious groups`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}definition`), literal(`жилище, где кто-л. чувствует себя безопасно, уютно и спокойно; пристанище, прибежище для бездомных или одиноких, нуждающихся людей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}notation`), literal(`S.RLGR`), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}prefLabel`), literal(`fristad, tillflyktsort`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}prefLabel`), literal(`retreat`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}prefLabel`), literal(`tilfluktssted`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}prefLabel`), literal(`приют`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RLGR`), namedNode(`${skos}prefLabel`), literal(`приют`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}definition`), literal(`a large farm specializing in extensive grazing of livestock`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}definition`), literal(`крупная ферма, основной специализацией которой является разведение крупного рогатого скота`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}notation`), literal(`S.RNCH`), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}prefLabel`), literal(`ranch`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}prefLabel`), literal(`ranch(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}prefLabel`), literal(`ranch(es)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}prefLabel`), literal(`ранчо`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RNCH`), namedNode(`${skos}prefLabel`), literal(`ранчо(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}definition`), literal(`a short track parallel to and joining the main track`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}definition`), literal(`короткая железная дорога, параллельная и примыкающая к главной железной дороге`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}notation`), literal(`S.RSD`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}prefLabel`), literal(`jernbanesidespor`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}prefLabel`), literal(`järnvägsstickspår`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}prefLabel`), literal(`railroad siding`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}prefLabel`), literal(`запасный железнодорожный путь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSD`), namedNode(`${skos}prefLabel`), literal(`коловоз`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}definition`), literal(`a signal at the entrance of a particular section of track governing the movement of trains`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}definition`), literal(`сигнал для передачи приказов и указаний, обеспечивающих безопасность движения поездов, маневровых работ`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}notation`), literal(`S.RSGNL`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}prefLabel`), literal(`jernbanesignal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}prefLabel`), literal(`järnvägssignal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}prefLabel`), literal(`railroad signal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}prefLabel`), literal(`железнодорожный сигнал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSGNL`), namedNode(`${skos}prefLabel`), literal(`жп сигнализация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}definition`), literal(`a specialized facility for vacation, health, or participation sports activities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}definition`), literal(`местность с целебными природными свойствами, используемая для лечебных целей и для отдыха`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}notation`), literal(`S.RSRT`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}prefLabel`), literal(`feriested`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}prefLabel`), literal(`resort`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}prefLabel`), literal(`semesterort`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}prefLabel`), literal(`курорт`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSRT`), namedNode(`${skos}prefLabel`), literal(`курорт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}definition`), literal(`a facility comprising ticket office, platforms, etc. for loading and unloading train passengers and freight`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}definition`), literal(`здание или комплекс зданий для обслуживания пассажиров и размещения служб на железнодорожных станциях`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}notation`), literal(`S.RSTN`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}prefLabel`), literal(`jernbanestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}prefLabel`), literal(`järnvägsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}prefLabel`), literal(`railroad station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}prefLabel`), literal(`ж/д вокзал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTN`), namedNode(`${skos}prefLabel`), literal(`жп гара`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}notation`), literal(`S.RSTNQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}prefLabel`), literal(`abandoned railroad station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt jernbanestasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}prefLabel`), literal(`övergiven järnvägsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}prefLabel`), literal(`заброшенный вокзал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTNQ`), namedNode(`${skos}prefLabel`), literal(`изоставена жп гара`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}definition`), literal(`a place lacking station facilities where trains stop to pick up and unload passengers and freight`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}definition`), literal(`пункт, место, установленные для посадки и высадки пассажиров электропоезда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}notation`), literal(`S.RSTP`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}prefLabel`), literal(`jernbanestoppested`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}prefLabel`), literal(`järnvägsstopp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}prefLabel`), literal(`railroad stop`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}prefLabel`), literal(`жп спирка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTP`), namedNode(`${skos}prefLabel`), literal(`остановка поезда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}notation`), literal(`S.RSTPQ`), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}prefLabel`), literal(`abandoned railroad stop`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}prefLabel`), literal(`nedlagt jernbanestoppested`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}prefLabel`), literal(`övergivet järnvägsstopp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}prefLabel`), literal(`заброшенная остановка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RSTPQ`), namedNode(`${skos}prefLabel`), literal(`изоставена жп спирка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}definition`), literal(`a destroyed or decayed structure which is no longer functional`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}definition`), literal(`развалины какого-л. строения, сооружения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}notation`), literal(`S.RUIN`), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}prefLabel`), literal(`ruin`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}prefLabel`), literal(`ruin(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}prefLabel`), literal(`ruin(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}prefLabel`), literal(`руина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.RUIN`), namedNode(`${skos}prefLabel`), literal(`руины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}definition`), literal(`building(s) where instruction in one or more branches of knowledge takes place`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}definition`), literal(`учебное заведение, которое осуществляет общее образование и воспитание молодого поколения; здание, в котором помещается это заведение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}notation`), literal(`S.SCH`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}prefLabel`), literal(`school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}prefLabel`), literal(`skola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}prefLabel`), literal(`skole`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}prefLabel`), literal(`училище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCH`), namedNode(`${skos}prefLabel`), literal(`школа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}definition`), literal(`a school with a curriculum focused on agriculture`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}definition`), literal(`школа, в учебном плане которой сделан акцент на изучение сельскохозяйственных наук`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}notation`), literal(`S.SCHA`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}prefLabel`), literal(`agricultural school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}prefLabel`), literal(`jordbruksskola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}prefLabel`), literal(`landbruksskole`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}prefLabel`), literal(`земеделско училище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHA`), namedNode(`${skos}prefLabel`), literal(`сельскохозяйственная школа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}definition`), literal(`the grounds and buildings of an institution of higher learning`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}definition`), literal(`в Англии, США и некоторых других странах: высшее или среднее учебное заведение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}notation`), literal(`S.SCHC`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}prefLabel`), literal(`college`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}prefLabel`), literal(`høyskole`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}prefLabel`), literal(`universitet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}prefLabel`), literal(`колеж`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHC`), namedNode(`${skos}prefLabel`), literal(`колледж`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${skos}definition`), literal(`Driving School`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${skos}notation`), literal(`S.SCHD`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${skos}prefLabel`), literal(`Driving School`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHD`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}definition`), literal(`Language Schools & Institutions`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}definition`), literal(`языковые учебные заведения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}notation`), literal(`S.SCHL`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`Language School`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`Språkskola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`language school`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`language school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`language school`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHL`), namedNode(`${skos}prefLabel`), literal(`языковая школа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}definition`), literal(`a school at which military science forms the core of the curriculum`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}definition`), literal(`военное образовательное учреждение высшего и среднего профессионального образования`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}notation`), literal(`S.SCHM`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}prefLabel`), literal(`military school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}prefLabel`), literal(`militärskola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}prefLabel`), literal(`militærskole`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}prefLabel`), literal(`военен колеж`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHM`), namedNode(`${skos}prefLabel`), literal(`военное училище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}definition`), literal(`a school at which maritime sciences form the core of the curriculum`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}definition`), literal(`военно-учебное заведение для подготовки офицеров военно-морского флота (ВМФ)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}notation`), literal(`S.SCHN`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}prefLabel`), literal(`maritime school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}prefLabel`), literal(`sjöfartsskola`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}prefLabel`), literal(`sjøfartsskole`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}prefLabel`), literal(`военно-морское училище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHN`), namedNode(`${skos}prefLabel`), literal(`морско училище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}definition`), literal(`post-secondary school with a specifically technical or vocational curriculum`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}definition`), literal(`школа, предоставляющая профессионально-техническое образование`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}notation`), literal(`S.SCHT`), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}prefLabel`), literal(`technical school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SCHT`), namedNode(`${skos}prefLabel`), literal(`техническое училище`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}definition`), literal(`state exam preparation centres`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}definition`), literal(`центры по подготовке к сдаче государственного экзамена`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}notation`), literal(`S.SECP`), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}prefLabel`), literal(`State Exam Prep Centre`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}prefLabel`), literal(`State Exam Prep Centre`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}prefLabel`), literal(`State Exam Prep Centre`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}prefLabel`), literal(`State Exam Prep Centre`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SECP`), namedNode(`${skos}prefLabel`), literal(`центр подготовки к государственному экзамену`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}definition`), literal(`a fence or wall enclosure for sheep and other small herd animals`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}definition`), literal(`хлев, загон для овец`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}notation`), literal(`S.SHPF`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}prefLabel`), literal(`fårfälla`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}prefLabel`), literal(`sauekve`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}prefLabel`), literal(`sheepfold`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}prefLabel`), literal(`кошара за овце`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHPF`), namedNode(`${skos}prefLabel`), literal(`овчарня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}definition`), literal(`a structure or place memorializing a person or religious concept`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}definition`), literal(`в христианской церкви: большой ларец (в виде гробницы или саркофага), в котором хранятся мощи святого`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}notation`), literal(`S.SHRN`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}prefLabel`), literal(`helgedom`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}prefLabel`), literal(`helligdom`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}prefLabel`), literal(`shrine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}prefLabel`), literal(`рака`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHRN`), namedNode(`${skos}prefLabel`), literal(`светилище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}definition`), literal(`a building for storing goods, especially provisions`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}definition`), literal(`специальное помещение для хранения товаров, сырья, оборудования и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}notation`), literal(`S.SHSE`), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}prefLabel`), literal(`lagerbygning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}prefLabel`), literal(`magasin`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}prefLabel`), literal(`storehouse`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}prefLabel`), literal(`склад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SHSE`), namedNode(`${skos}prefLabel`), literal(`хамбар`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение между водоёмами с различными уровнями воды, позволяющее переводить суда из одного водоёма в другой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}definition`), literal(`a conduit or passage for carrying off surplus water from a waterbody, usually regulated by means of a sluice gate`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}notation`), literal(`S.SLCE`), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}prefLabel`), literal(`sluse`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}prefLabel`), literal(`шлюз`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}prefLabel`), literal(`sluice`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}prefLabel`), literal(`sluss`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SLCE`), namedNode(`${skos}prefLabel`), literal(`шлюз`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}definition`), literal(`лечебно-профилактическое учреждение для лечения и отдыха`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}definition`), literal(`a facility where victims of physical or mental disorders are treated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}notation`), literal(`S.SNTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}prefLabel`), literal(`sanatorium`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}prefLabel`), literal(`sanatorium`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}prefLabel`), literal(`sanatorium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}prefLabel`), literal(`санаторий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SNTR`), namedNode(`${skos}prefLabel`), literal(`санаториум`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}definition`), literal(`a resort area usually developed around a medicinal spring`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}definition`), literal(`курорт с минеральным источником`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}notation`), literal(`S.SPA`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}prefLabel`), literal(`bad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}prefLabel`), literal(`spa`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}prefLabel`), literal(`spa`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}prefLabel`), literal(`спа`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPA`), namedNode(`${skos}prefLabel`), literal(`спа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}definition`), literal(`a passage or outlet through which surplus water flows over, around or through a dam`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}definition`), literal(`водосброс, осуществляющийся путём свободного перелива воды через гребень плотины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}notation`), literal(`S.SPLY`), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}prefLabel`), literal(`dammavlopp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}prefLabel`), literal(`overløp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}prefLabel`), literal(`spillway`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}prefLabel`), literal(`водослив`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SPLY`), namedNode(`${skos}prefLabel`), literal(`преливник`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}definition`), literal(`a broad, open, public area near the center of a town or city`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}definition`), literal(`незастроенное, обрамлённое какими-л. зданиями, зелёными насаждениями место в пределах города или села, составляющее часть городского, сельского пространства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}notation`), literal(`S.SQR`), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}prefLabel`), literal(`plass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}prefLabel`), literal(`square`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}prefLabel`), literal(`torg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}prefLabel`), literal(`площад`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SQR`), namedNode(`${skos}prefLabel`), literal(`площадь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}definition`), literal(`a building for the shelter and feeding of farm animals, especially horses`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}definition`), literal(`помещение для содержания лошадей, обычно представляет собой постройку, разделённую на индивидуальные для каждой лошади секции, которые называются денниками`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}notation`), literal(`S.STBL`), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}prefLabel`), literal(`stable`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}prefLabel`), literal(`stall`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}prefLabel`), literal(`stall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}prefLabel`), literal(`конюшня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STBL`), namedNode(`${skos}prefLabel`), literal(`обор`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}definition`), literal(`комплексное спортивное сооружение со специально оборудованными площадками для состязаний, тренировок, вспомогательными помещениями и трибунами для зрителей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}definition`), literal(`a structure with an enclosure for athletic games with tiers of seats for spectators`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}notation`), literal(`S.STDM`), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}prefLabel`), literal(`стадион`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}prefLabel`), literal(`stadion`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}prefLabel`), literal(`stadium`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}prefLabel`), literal(`stadium`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STDM`), namedNode(`${skos}prefLabel`), literal(`стадион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}definition`), literal(`a scientific facility used as a base from which research is carried out or monitored`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}definition`), literal(`помещение, которое используется в качестве базы для проведения различных научных исследований`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}notation`), literal(`S.STNB`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}prefLabel`), literal(`forskningsbase`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}prefLabel`), literal(`forskningsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}prefLabel`), literal(`scientific research base`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}prefLabel`), literal(`научно иследователска база`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNB`), namedNode(`${skos}prefLabel`), literal(`научно-исследовательская база`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}definition`), literal(`a facility from which the coast is guarded by armed vessels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}definition`), literal(`пункт, с которого вооруженные корабли ведут охрану береговой линии`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}notation`), literal(`S.STNC`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}prefLabel`), literal(`coast guard station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}prefLabel`), literal(`kustvaktsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}prefLabel`), literal(`kystvaktstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}prefLabel`), literal(`пост береговой охраны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNC`), namedNode(`${skos}prefLabel`), literal(`станция на брегова охрана`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}definition`), literal(`a facility for carrying out experiments`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}definition`), literal(`место проведения различного рода испытаний`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}notation`), literal(`S.STNE`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}prefLabel`), literal(`eksperimentstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}prefLabel`), literal(`experiment station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}prefLabel`), literal(`experimentstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}prefLabel`), literal(`експериментална станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNE`), namedNode(`${skos}prefLabel`), literal(`испытательная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}definition`), literal(`a collection of buildings and facilities for carrying out forest management`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}definition`), literal(`хозяйственные строения, в которых располагается управление лесным участком`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}notation`), literal(`S.STNF`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}prefLabel`), literal(`forest station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}prefLabel`), literal(`skogsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}prefLabel`), literal(`skogstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}prefLabel`), literal(`горска станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNF`), namedNode(`${skos}prefLabel`), literal(`лесничество`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}definition`), literal(`a station at which vehicles, goods, and people are inspected`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}definition`), literal(`место досмотра вещей и обыска людей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}notation`), literal(`S.STNI`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}prefLabel`), literal(`inspection station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}prefLabel`), literal(`inspeksjonsstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}prefLabel`), literal(`inspektionsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}prefLabel`), literal(`инспекционна станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNI`), namedNode(`${skos}prefLabel`), literal(`контрольно-пропускной пункт`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}definition`), literal(`a station at which weather elements are recorded`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}definition`), literal(`учреждение, которое проводит регулярные наблюдения за состоянием атмосферы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}notation`), literal(`S.STNM`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}prefLabel`), literal(`meteorological station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}prefLabel`), literal(`meteorologisk stasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}prefLabel`), literal(`meteorologisk station`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}prefLabel`), literal(`метеорологическая станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNM`), namedNode(`${skos}prefLabel`), literal(`метереологична станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}definition`), literal(`a facility for producing and transmitting information by radio waves`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}definition`), literal(`комплекс устройств для передачи информации посредством радиоволн и (или) её приёма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}notation`), literal(`S.STNR`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}prefLabel`), literal(`radio station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}prefLabel`), literal(`radiostasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}prefLabel`), literal(`radiostation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}prefLabel`), literal(`радио станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNR`), namedNode(`${skos}prefLabel`), literal(`радиостанция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}definition`), literal(`a facility for tracking and communicating with orbiting satellites`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}definition`), literal(`космический аппарат, предназначенный для долговременного пребывания людей на околоземной орбите с целью проведения научных исследований в условиях космического пространства, разведки, наблюдений за поверхностью и атмосферой планеты, астрономических наблюдений, и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}notation`), literal(`S.STNS`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}prefLabel`), literal(`satellite station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}prefLabel`), literal(`satellitstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}prefLabel`), literal(`satellittstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}prefLabel`), literal(`орбитальная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNS`), namedNode(`${skos}prefLabel`), literal(`сателитна станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}definition`), literal(`a facility for butchering whales and processing train oil`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}definition`), literal(`место забоя китов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}notation`), literal(`S.STNW`), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}prefLabel`), literal(`hvalfangststasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}prefLabel`), literal(`valstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}prefLabel`), literal(`whaling station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}prefLabel`), literal(`китобойная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STNW`), namedNode(`${skos}prefLabel`), literal(`китоловна станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}definition`), literal(`stones or slabs placed for ease in ascending or descending a steep slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}definition`), literal(`пристройка перед входом в дом, состоящая из площадки и лестницы, иногда под навесом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}notation`), literal(`S.STPS`), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}prefLabel`), literal(`steps`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}prefLabel`), literal(`trappa`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}prefLabel`), literal(`trinn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}prefLabel`), literal(`крыльцо`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.STPS`), namedNode(`${skos}prefLabel`), literal(`стъпало`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}definition`), literal(`facility for the processing of sewage and/or wastewater`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}definition`), literal(`комплекс инженерных сооружений в системе канализации населённого места или промышленного предприятия, предназначенный для очистки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}notation`), literal(`S.SWT`), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}prefLabel`), literal(`sewage treatment plant`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.SWT`), namedNode(`${skos}prefLabel`), literal(`очистное сооружение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}definition`), literal(`A building, room, or outdoor structure for the presentation of plays, films, or other dramatic performances`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}definition`), literal(`учреждение, организация, занимающиеся устройством представлений`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}notation`), literal(`S.THTR`), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}prefLabel`), literal(`teater`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}prefLabel`), literal(`teater`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}prefLabel`), literal(`theater`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}prefLabel`), literal(`театр`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.THTR`), namedNode(`${skos}prefLabel`), literal(`театър`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}definition`), literal(`яма для погребения умершего`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}definition`), literal(`a structure for interring bodies`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}notation`), literal(`S.TMB`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}prefLabel`), literal(`могила`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}prefLabel`), literal(`grav`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}prefLabel`), literal(`grav(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}prefLabel`), literal(`tomb(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMB`), namedNode(`${skos}prefLabel`), literal(`гробница(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}definition`), literal(`an edifice dedicated to religious worship`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}definition`), literal(`здание, предназначенное для совершения богослужений и религиозных обрядов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}notation`), literal(`S.TMPL`), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}prefLabel`), literal(`tempel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}prefLabel`), literal(`tempel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}prefLabel`), literal(`temple(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}prefLabel`), literal(`храм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TMPL`), namedNode(`${skos}prefLabel`), literal(`храм(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}definition`), literal(`a small artificial pond used for immersing cattle in chemically treated water for disease control`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}definition`), literal(`искусственный водоем со специальным химическим раствором; в этот водоем опускают крупный рогатый скот для профилактики от опасных заболеваний`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}notation`), literal(`S.TNKD`), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}prefLabel`), literal(`cattle dipping tank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}prefLabel`), literal(`cattle dipping tank`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}prefLabel`), literal(`desinfeksjonsstasjon for kveg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}prefLabel`), literal(`макательная ванна для крупного рогатого скота`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TNKD`), namedNode(`${skos}prefLabel`), literal(`яма за третиране на животни`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}definition`), literal(`a high conspicuous structure, typically much higher than its diameter`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}definition`), literal(`высокое узкое архитектурное или инженерное сооружение (круглой, четырёхгранной или многогранной формы) различного назначения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}notation`), literal(`S.TOWR`), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}prefLabel`), literal(`torn`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}prefLabel`), literal(`tower`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}prefLabel`), literal(`tårn`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}prefLabel`), literal(`башня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TOWR`), namedNode(`${skos}prefLabel`), literal(`кула`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}definition`), literal(`facilities for the handling of vehicular freight and passengers`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}definition`), literal(`станция для перегрузки материалов с одного вида транспорта на другой и для пересадки пассажиров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}notation`), literal(`S.TRANT`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}prefLabel`), literal(`transit terminal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRANT`), namedNode(`${skos}prefLabel`), literal(`перевалочная база/станция пересадки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}definition`), literal(`a point on the earth whose position has been determined by triangulation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}definition`), literal(`опорный геодезический пункт, созданный методом триангуляции (геодезия)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}notation`), literal(`S.TRIG`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}prefLabel`), literal(`triangulation station`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}prefLabel`), literal(`trianguleringsstasjon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}prefLabel`), literal(`trianguleringsstation`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}prefLabel`), literal(`триангулачна точка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRIG`), namedNode(`${skos}prefLabel`), literal(`триангуляционный пост`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}definition`), literal(`a tank farm or loading facility at the end of an oil pipeline`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}definition`), literal(`нефтебаза или нефтеналивная станция в конце нефтепровода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}notation`), literal(`S.TRMO`), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}prefLabel`), literal(`oil pipeline terminal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}prefLabel`), literal(`oljepipelineterminal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}prefLabel`), literal(`terminal for oljerørledning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}prefLabel`), literal(`конечный пункт нефтепровода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TRMO`), namedNode(`${skos}prefLabel`), literal(`нефтен терминал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}definition`), literal(`Temporary Work Offices`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}definition`), literal(`учреждение, осуществляющее посредничество между предпринимателями и наёмными работниками`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}notation`), literal(`S.TWO`), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}prefLabel`), literal(`Temp Work Office`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}prefLabel`), literal(`temp work office`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}prefLabel`), literal(`temp work office`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}prefLabel`), literal(`temp work office`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.TWO`), namedNode(`${skos}prefLabel`), literal(`биржа труда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${skos}definition`), literal(`Post Universitary Education Institutes (post graduate studies and highly specialised master programs) & MBA`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${skos}notation`), literal(`S.UNIO`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${skos}prefLabel`), literal(`postgrad & MBA`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIO`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}definition`), literal(`University Preparation Schools & Institutions`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}definition`), literal(`подготовительные курсы для поступления в высшее учебное заведение`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}notation`), literal(`S.UNIP`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}prefLabel`), literal(`University Prep School`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}prefLabel`), literal(`university prep school`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}prefLabel`), literal(`university prep school`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}prefLabel`), literal(`university prep school`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIP`), namedNode(`${skos}prefLabel`), literal(`подготовительные курсы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}definition`), literal(`An institution for higher learning with teaching and research facilities constituting a graduate school and professional schools that award master's degrees and doctorates and an undergraduate division that awards bachelor's degrees.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}definition`), literal(`высшее учебно-научное заведение с различными гуманитарными и естественно-математическими отделениями (факультетами)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}notation`), literal(`S.UNIV`), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}prefLabel`), literal(`universitet`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}prefLabel`), literal(`universitet`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}prefLabel`), literal(`university`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}prefLabel`), literal(`университет`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.UNIV`), namedNode(`${skos}prefLabel`), literal(`университет`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}definition`), literal(`a facility operated by the United States Government in Panama`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}definition`), literal(`учреждение, которое находится под контролем правительства США в Панаме`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}notation`), literal(`S.USGE`), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}prefLabel`), literal(`amerikansk regeringsbyggnad`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}prefLabel`), literal(`anlegg tilhørende USA`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}prefLabel`), literal(`united states government establishment`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}prefLabel`), literal(`представителство на САЩ`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.USGE`), namedNode(`${skos}prefLabel`), literal(`представительство США в Панаме`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}definition`), literal(`a building or camp at which veterinary services are available`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}definition`), literal(`больница, где лечат животных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}notation`), literal(`S.VETF`), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}prefLabel`), literal(`veterinary facility`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}prefLabel`), literal(`veterinärklinik`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}prefLabel`), literal(`veterinæranlegg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}prefLabel`), literal(`ветеринарна лечебница`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.VETF`), namedNode(`${skos}prefLabel`), literal(`ветеринарная клиника`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}definition`), literal(`a thick masonry structure, usually enclosing a field or building, or forming the side of a structure`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}definition`), literal(`вертикальная часть здания, служащая для поддержания перекрытий и разделения помещения на части`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}notation`), literal(`S.WALL`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}prefLabel`), literal(`mur`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}prefLabel`), literal(`mur`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}prefLabel`), literal(`wall`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}prefLabel`), literal(`вал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALL`), namedNode(`${skos}prefLabel`), literal(`стена`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}definition`), literal(`the remains of a linear defensive stone structure`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}definition`), literal(`руины защитного сооружения, построенного из камня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}notation`), literal(`S.WALLA`), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}prefLabel`), literal(`ancient wall`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}prefLabel`), literal(`fortidsmur`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}prefLabel`), literal(`historisk damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}prefLabel`), literal(`античен вал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WALLA`), namedNode(`${skos}prefLabel`), literal(`античная стена`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}definition`), literal(`a small dam in a stream, designed to raise the water level or to divert stream flow through a desired channel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение, перегораживающее водоток для подъёма воды в реке, создания водохранилища или электростанции`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}notation`), literal(`S.WEIR`), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}prefLabel`), literal(`плотина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}prefLabel`), literal(`damm, fördämning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}prefLabel`), literal(`fiskedam`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}prefLabel`), literal(`weir(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WEIR`), namedNode(`${skos}prefLabel`), literal(`бент(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}definition`), literal(`a structure of open rather than solid construction along a shore or a bank which provides berthing for ships and cargo-handling facilities`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}definition`), literal(`специально оборудованное место, сооружение для причаливания и стоянки судов`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}notation`), literal(`S.WHRF`), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}prefLabel`), literal(`kai`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}prefLabel`), literal(`пристань`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}prefLabel`), literal(`kaj, brygga`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}prefLabel`), literal(`wharf(-ves)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WHRF`), namedNode(`${skos}prefLabel`), literal(`пристан(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}definition`), literal(`the site of the remains of a wrecked vessel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}definition`), literal(`остатки кораблекрушения, выброшенные морем на берег`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}notation`), literal(`S.WRCK`), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}prefLabel`), literal(`vrak`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}prefLabel`), literal(`vrak`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}prefLabel`), literal(`wreck`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}prefLabel`), literal(`гробница за кораби`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WRCK`), namedNode(`${skos}prefLabel`), literal(`обломки разбитого судна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}definition`), literal(`a facility for supplying potable water through a water source and a system of pumps and filtration beds`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}definition`), literal(`система наносов и очистных сооружений, сквозь которые проходит вода, используемая в дальнейшем для питья и технических целей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}notation`), literal(`S.WTRW`), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}prefLabel`), literal(`vannverk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}prefLabel`), literal(`vattenverk, vattenkonst`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}prefLabel`), literal(`waterworks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}prefLabel`), literal(`водопроводна станция`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.WTRW`), namedNode(`${skos}prefLabel`), literal(`водопроводная станция`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}definition`), literal(`an area, usually a section of a port, where goods may be received and shipped free of customs duty and of most customs regulations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}definition`), literal(`территория, на которой не взимаются таможенные пошлины, налоги и сборы с пересекающих границу иностранных товаров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}notation`), literal(`S.ZNF`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}prefLabel`), literal(`free trade zone`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}prefLabel`), literal(`frihandelssone`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}prefLabel`), literal(`frihandelszon`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}prefLabel`), literal(`зона свободной торговли`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZNF`), namedNode(`${skos}prefLabel`), literal(`свободна търговска зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}definition`), literal(`a zoological garden or park where wild animals are kept for exhibition`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}definition`), literal(`зоологический парк, где содержат диких животных с целью их демонстрации`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}inScheme`), namedNode(`${gn}S`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}notation`), literal(`S.ZOO`), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}prefLabel`), literal(`dyrehage`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}prefLabel`), literal(`zoo`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}prefLabel`), literal(`zoo`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}prefLabel`), literal(`зоопарк`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}S.ZOO`), namedNode(`${skos}prefLabel`), literal(`зоопарк`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}definition`), literal(`a small basin containing naturally occurring asphalt`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}definition`), literal(`небольшой бассейн, который вместо воды заполнен природным асфальтом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}notation`), literal(`T.ASPH`), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}prefLabel`), literal(`asfaltsjø`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}prefLabel`), literal(`asfaltssjö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}prefLabel`), literal(`asphalt lake`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}prefLabel`), literal(`асфалтово езеро`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ASPH`), namedNode(`${skos}prefLabel`), literal(`асфальтовое озеро`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}T`), namedNode(`${rdfs}comment`), literal(`mountain, hill, rock, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}definition`), literal(`a ring-shaped coral reef which has closely spaced islands on it encircling a lagoon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}definition`), literal(`коралловый остров кольцеобразной формы с мелководной лагуной внутри (преимущественно в Индийском и Тихом океанах)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}notation`), literal(`T.ATOL`), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}prefLabel`), literal(`atoll`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}prefLabel`), literal(`atoll(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}prefLabel`), literal(`atoll(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}prefLabel`), literal(`атол(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ATOL`), namedNode(`${skos}prefLabel`), literal(`атолл`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}definition`), literal(`a shallow ridge or mound of coarse unconsolidated material in a stream channel, at the mouth of a stream, estuary, or lagoon and in the wave-break zone along coasts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}definition`), literal(`наносная мель у морских берегов (обычно в устье реки)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}notation`), literal(`T.BAR`), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}prefLabel`), literal(`rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}prefLabel`), literal(`bar`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}prefLabel`), literal(`bar`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}prefLabel`), literal(`бар`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BAR`), namedNode(`${skos}prefLabel`), literal(`нанос`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}definition`), literal(`a shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}definition`), literal(`отлогий намывной берег, удобный для купания и принятия солнечных ванн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}notation`), literal(`T.BCH`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}prefLabel`), literal(`beach`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}prefLabel`), literal(`strand`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}prefLabel`), literal(`strand`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}prefLabel`), literal(`бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCH`), namedNode(`${skos}prefLabel`), literal(`пляж`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}definition`), literal(`a shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}definition`), literal(`отлогие намывные берега, удобные для купания и принятия солнечных ванн`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}notation`), literal(`T.BCHS`), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}prefLabel`), literal(`beaches`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}prefLabel`), literal(`strender`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}prefLabel`), literal(`stränder`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}prefLabel`), literal(`брегове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BCHS`), namedNode(`${skos}prefLabel`), literal(`пляжи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}definition`), literal(`an area characterized by a maze of very closely spaced, deep, narrow, steep-sided ravines, and sharp crests and pinnacles`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}definition`), literal(`неплодородная эродированная сильнопересечённая местность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}notation`), literal(`T.BDLD`), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}prefLabel`), literal(`badlands`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}prefLabel`), literal(`ofruktbart land`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}prefLabel`), literal(`steinørken`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}prefLabel`), literal(`Необитаема зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BDLD`), namedNode(`${skos}prefLabel`), literal(`бесплодная земля`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}definition`), literal(`a high altitude or high latitude bare, flat area covered with large angular rocks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}definition`), literal(`равнинная местность, покрытая большими углообразными валунами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}notation`), literal(`T.BLDR`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}prefLabel`), literal(`boulder field`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}prefLabel`), literal(`steinmark`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}prefLabel`), literal(`stenblocksfält`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}prefLabel`), literal(`Скалиста зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLDR`), namedNode(`${skos}prefLabel`), literal(`завалуненное поле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}definition`), literal(`a hole in coastal rock through which sea water is forced by a rising tide or waves and spurted through an outlet into the air`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}definition`), literal(`a hole in coastal rock through which sea water is forced by a rising tide or waves and spurted through an outlet into the air`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}notation`), literal(`T.BLHL`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}prefLabel`), literal(`blowhole`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}prefLabel`), literal(`blowhole(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}prefLabel`), literal(`blowhole(s)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}prefLabel`), literal(`luftehull`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLHL`), namedNode(`${skos}prefLabel`), literal(`ноздра(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}definition`), literal(`a small depression in sandy terrain, caused by wind erosion`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}definition`), literal(`небольшое углубление на песчаной местности, образовавшееся в результате эрозии`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}notation`), literal(`T.BLOW`), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}prefLabel`), literal(`blowout(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}prefLabel`), literal(`utblåsning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}prefLabel`), literal(`utvidgning(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}prefLabel`), literal(`пукнатина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BLOW`), namedNode(`${skos}prefLabel`), literal(`развеянная дюна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}definition`), literal(`a long, narrow bedrock platform bounded by steeper slopes above and below, usually overlooking a waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}definition`), literal(`выдающаяся вперед часть горного массива (обычно над водой), имеющая вид ступени или террасы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}notation`), literal(`T.BNCH`), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}prefLabel`), literal(`avsats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}prefLabel`), literal(`bench`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}prefLabel`), literal(`benk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}prefLabel`), literal(`банка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BNCH`), namedNode(`${skos}prefLabel`), literal(`выступ, имеющий вид ступени или террасы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}definition`), literal(`a small, isolated, usually flat-topped hill with steep sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}definition`), literal(`небольшая  возвышенность округлой или овальной формы с крутым склоном`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}notation`), literal(`T.BUTE`), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}prefLabel`), literal(`butte(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}prefLabel`), literal(`høyde med bratte sider`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}prefLabel`), literal(`kulle`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}prefLabel`), literal(`Изолирана скала(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.BUTE`), namedNode(`${skos}prefLabel`), literal(`крутой холм на равнине`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}definition`), literal(`a land area, more prominent than a point, projecting into the sea and marking a notable change in coastal direction`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}definition`), literal(`часть суши, острым углом вдающаяся в водное пространство (море, озеро, реку)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}notation`), literal(`T.CAPE`), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}prefLabel`), literal(`cape`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}prefLabel`), literal(`nes`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}prefLabel`), literal(`udde, kap`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}prefLabel`), literal(`мыс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CAPE`), namedNode(`${skos}prefLabel`), literal(`нос`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}definition`), literal(`a deep narrow slot, notch, or groove in a coastal cliff`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}definition`), literal(`узкое ущелье в горах`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}notation`), literal(`T.CFT`), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}prefLabel`), literal(`cleft(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}prefLabel`), literal(`klyfta`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}prefLabel`), literal(`kløft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}prefLabel`), literal(`расщелина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CFT`), namedNode(`${skos}prefLabel`), literal(`цепнатина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}definition`), literal(`a depression measuring kilometers across formed by the collapse of a volcanic mountain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}definition`), literal(`котлообразная впадина с крутыми склонами и ровным дном, образовавшаяся вследствие провала вершины вулкана, а иногда и прилегающей к нему местности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}notation`), literal(`T.CLDA`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}prefLabel`), literal(`caldera`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}prefLabel`), literal(`caldera`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}prefLabel`), literal(`krater`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}prefLabel`), literal(`Вулканично пропадане`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLDA`), namedNode(`${skos}prefLabel`), literal(`кальдера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}definition`), literal(`a high, steep to perpendicular slope overlooking a waterbody or lower area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}definition`), literal(`отвесная скала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}notation`), literal(`T.CLF`), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}prefLabel`), literal(`brant klippa, stup`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}prefLabel`), literal(`cliff(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}prefLabel`), literal(`klippe`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}prefLabel`), literal(`урва(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CLF`), namedNode(`${skos}prefLabel`), literal(`утес`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}definition`), literal(`a deep, narrow valley with steep sides cutting into a plateau or mountainous area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}definition`), literal(`глубокая речная долина с очень крутыми или отвесными склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}notation`), literal(`T.CNYN`), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}prefLabel`), literal(`canyon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}prefLabel`), literal(`canyon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}prefLabel`), literal(`kanjon, djup flodbädd`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}prefLabel`), literal(`каньон`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CNYN`), namedNode(`${skos}prefLabel`), literal(`каньон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}definition`), literal(`a conical landform composed of mud or volcanic material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}definition`), literal(`рельеф канонической формы, образованный из вулканогенного материала и покрытый грязью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}notation`), literal(`T.CONE`), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}prefLabel`), literal(`cone(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}prefLabel`), literal(`kjegle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}prefLabel`), literal(`kon`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}prefLabel`), literal(`конус вулкана`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CONE`), namedNode(`${skos}prefLabel`), literal(`конус(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}definition`), literal(`a strip or area of land having significance as an access way`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}definition`), literal(`узкое длинное пространство, проход, ограниченные с обеих сторон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}notation`), literal(`T.CRDR`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}prefLabel`), literal(`corridor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}prefLabel`), literal(`korridor`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}prefLabel`), literal(`korridor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}prefLabel`), literal(`коридор`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRDR`), namedNode(`${skos}prefLabel`), literal(`коридор`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}definition`), literal(`a bowl-like hollow partially surrounded by cliffs or steep slopes at the head of a glaciated valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}definition`), literal(`естественное чашеобразное углубление в привершинной части горы (обычно со скалистыми или покрытыми льдом, снегом стенами)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}notation`), literal(`T.CRQ`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}prefLabel`), literal(`cirque`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}prefLabel`), literal(`dalgryte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}prefLabel`), literal(`kitteldal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}prefLabel`), literal(`цирк`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQ`), namedNode(`${skos}prefLabel`), literal(`циркус`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}definition`), literal(`bowl-like hollows partially surrounded by cliffs or steep slopes at the head of a glaciated valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}definition`), literal(`естественные чашеобразные углубления в привершинной части горы (обычно со скалистыми или покрытыми льдом, снегом стенами)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}notation`), literal(`T.CRQS`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}prefLabel`), literal(`cirques`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}prefLabel`), literal(`dalgryter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}prefLabel`), literal(`kitteldalar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}prefLabel`), literal(`цирки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRQS`), namedNode(`${skos}prefLabel`), literal(`циркуси`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}definition`), literal(`a generally circular saucer or bowl-shaped depression caused by volcanic or meteorite explosive action`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}definition`), literal(`углубление на вершине вулкана, из которого при извержении выливается лава`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}notation`), literal(`T.CRTR`), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}prefLabel`), literal(`krater`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}prefLabel`), literal(`crater(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}prefLabel`), literal(`krater`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}prefLabel`), literal(`кратер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CRTR`), namedNode(`${skos}prefLabel`), literal(`кратер(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}definition`), literal(`an asymmetric ridge formed on tilted strata`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}definition`), literal(`наклонная равнина, круто обрезанная с одной стороны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}notation`), literal(`T.CUET`), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}prefLabel`), literal(`backe`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}prefLabel`), literal(`cuesta`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}prefLabel`), literal(`cuesta(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}prefLabel`), literal(`куэста`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.CUET`), namedNode(`${skos}prefLabel`), literal(`стръмен хълм(ове)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}definition`), literal(`a flat plain formed by alluvial deposits at the mouth of a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}definition`), literal(`устье большой реки с его разветвлениями на отдельные рукава и прилегающая к нему суша`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}notation`), literal(`T.DLTA`), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}prefLabel`), literal(`delta`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}prefLabel`), literal(`delta`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}prefLabel`), literal(`delta`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}prefLabel`), literal(`делта`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.DLTA`), namedNode(`${skos}prefLabel`), literal(`дельта реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}definition`), literal(`a low area surrounded by higher land and usually characterized by interior drainage`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}definition`), literal(`понижение земной поверхности в пределах суши, на дне океанов и морей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}notation`), literal(`T.DPR`), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}prefLabel`), literal(`depression(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}prefLabel`), literal(`depression(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}prefLabel`), literal(`fordypning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}prefLabel`), literal(`впадина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DPR`), namedNode(`${skos}prefLabel`), literal(`депресия(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}definition`), literal(`a large area with little or no vegetation due to extreme environmental conditions`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}definition`), literal(`обширная засушливая область с небольшим количеством осадков, резкими колебаниями воздуха и почвы и скудной растительностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}notation`), literal(`T.DSRT`), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}prefLabel`), literal(`desert`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}prefLabel`), literal(`öken`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}prefLabel`), literal(`ørken`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}prefLabel`), literal(`пустина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.DSRT`), namedNode(`${skos}prefLabel`), literal(`пустыня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}definition`), literal(`a wave form, ridge or star shape feature composed of sand`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}definition`), literal(`песчаный холм или их группа, образованные ветром на слабо закреплённых растительностью песчаных массивах`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}notation`), literal(`T.DUNE`), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}prefLabel`), literal(`dune(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}prefLabel`), literal(`sanddyn(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}prefLabel`), literal(`sanddyne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}prefLabel`), literal(`дюна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DUNE`), namedNode(`${skos}prefLabel`), literal(`дюня(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}definition`), literal(`a line separating adjacent drainage basins`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}definition`), literal(`возвышенная местность между бассейнами рек, разделяющая их`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}notation`), literal(`T.DVD`), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}prefLabel`), literal(`divide`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}prefLabel`), literal(`vannskille`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}prefLabel`), literal(`vattendelare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}prefLabel`), literal(`водораздел`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.DVD`), namedNode(`${skos}prefLabel`), literal(`разделение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}definition`), literal(`an extensive tract of shifting sand and sand dunes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}definition`), literal(`тип пустынь с песчаной поверхностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}notation`), literal(`T.ERG`), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}prefLabel`), literal(`sandy desert`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}prefLabel`), literal(`sandöken`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}prefLabel`), literal(`sandørken`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}prefLabel`), literal(`песчаная пустыня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ERG`), namedNode(`${skos}prefLabel`), literal(`пясъчна пустиня`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}definition`), literal(`a fan-shaped wedge of coarse alluvium with apex merging with a mountain stream bed and the fan spreading out at a low angle slope onto an adjacent plain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}definition`), literal(`форма рельефа, имеющая вид слабовыпуклого полуконуса, образованного скоплением рыхлого обломочного материала (аллювия) в устьевой части временных водных потоков и небольших рек или при выходе их из гор на предгорные равнины или из ущелий в более широкую долину`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}notation`), literal(`T.FAN`), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}prefLabel`), literal(`avleiringsvifte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}prefLabel`), literal(`fan(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}prefLabel`), literal(`fan(s)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}prefLabel`), literal(`ветрило(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.FAN`), namedNode(`${skos}prefLabel`), literal(`конус выноса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}definition`), literal(`a shallow part of a stream which can be crossed on foot or by land vehicle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}definition`), literal(`мелкое место во всю ширину реки, озера и т.п., удобное для перехода, переезда`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}notation`), literal(`T.FORD`), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}prefLabel`), literal(`ford`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}prefLabel`), literal(`vadested`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}prefLabel`), literal(`vadställe`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}prefLabel`), literal(`брод`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.FORD`), namedNode(`${skos}prefLabel`), literal(`брод`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}definition`), literal(`a crack associated with volcanism`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}definition`), literal(`глубокая трещина, узкое ущелье в горной породе, в земле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}notation`), literal(`T.FSR`), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}prefLabel`), literal(`fissure`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}prefLabel`), literal(`klyfta, spricka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}prefLabel`), literal(`revne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}prefLabel`), literal(`расселина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.FSR`), namedNode(`${skos}prefLabel`), literal(`цепнатина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}definition`), literal(`a low place in a ridge, not used for transportation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}definition`), literal(`крутой, глубокий обрыв, очень глубокая расселина, бездна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}notation`), literal(`T.GAP`), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}prefLabel`), literal(`kløft`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}prefLabel`), literal(`gap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}prefLabel`), literal(`gap, öppning, hål, klyfta`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}prefLabel`), literal(`клисура`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.GAP`), namedNode(`${skos}prefLabel`), literal(`пропасть`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}definition`), literal(`a short, narrow, steep-sided section of a stream valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}definition`), literal(`узкая крутосклонная долина (обычно в пределах горной страны), промытая рекой в твёрдых коренных породах`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}notation`), literal(`T.GRGE`), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}prefLabel`), literal(`gorge(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}prefLabel`), literal(`juv`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}prefLabel`), literal(`trång klyfta mellan berg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}prefLabel`), literal(`пролом(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.GRGE`), namedNode(`${skos}prefLabel`), literal(`ущелье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}definition`), literal(`часть суши, острым углом вдающаяся в водное пространство (море, озеро, реку)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}definition`), literal(`a high projection of land extending into a large body of water beyond the line of the coast`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}notation`), literal(`T.HDLD`), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}prefLabel`), literal(`нос`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}prefLabel`), literal(`halvö,udde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}prefLabel`), literal(`headland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}prefLabel`), literal(`pynt`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.HDLD`), namedNode(`${skos}prefLabel`), literal(`возвышенный мыс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}definition`), literal(`a rounded elevation of limited extent rising above the surrounding land with local relief of less than 300m`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}definition`), literal(`небольшая отлогая горка, возвышенность округлой или овальной формы с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}notation`), literal(`T.HLL`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}prefLabel`), literal(`kulle`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}prefLabel`), literal(`hill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}prefLabel`), literal(`ås`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}prefLabel`), literal(`възвишение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLL`), namedNode(`${skos}prefLabel`), literal(`холм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}definition`), literal(`rounded elevations of limited extent rising above the surrounding land with local relief of less than 300m`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}definition`), literal(`небольшие отлогие горки, возвышенности округлой или овальной формы с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}notation`), literal(`T.HLLS`), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}prefLabel`), literal(`hills`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}prefLabel`), literal(`kullar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}prefLabel`), literal(`åser`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}prefLabel`), literal(`възвишения`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.HLLS`), namedNode(`${skos}prefLabel`), literal(`холмы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}definition`), literal(`a patch of ground, distinct from and slightly above the surrounding plain or wetland. Often occurs in groups`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}definition`), literal(`ледяная глыба, образовавшаяся при сжатии льдов на северных морях и реках`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}notation`), literal(`T.HMCK`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}prefLabel`), literal(`hammock (stykker av hevet land)`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}prefLabel`), literal(`hammock`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}prefLabel`), literal(`hammock(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}prefLabel`), literal(`торос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMCK`), namedNode(`${skos}prefLabel`), literal(`хамак(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}definition`), literal(`a relatively sand-free, high bedrock plateau in a hot desert, with or without a gravel veneer`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}definition`), literal(`тип пустыни, развитой на слабовыветренных коренных породах плато низкогорий и мелкосопочника, покрытых щебнем и галькой (поверхность К. п. почти лишена почвенно-растительного покрова, животный компонент типично пустынный)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}notation`), literal(`T.HMDA`), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}prefLabel`), literal(`steinørken`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}prefLabel`), literal(`klippöken`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}prefLabel`), literal(`rock desert`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}prefLabel`), literal(`каменистая пустыня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.HMDA`), namedNode(`${skos}prefLabel`), literal(`пустинно плато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}definition`), literal(`a relatively undissected upland between adjacent stream valleys`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}definition`), literal(`местность, расположенная между двумя реками`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}notation`), literal(`T.INTF`), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}prefLabel`), literal(`interfluve`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}prefLabel`), literal(`interfluve`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}prefLabel`), literal(`land mellom to elver`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}prefLabel`), literal(`междуречье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.INTF`), namedNode(`${skos}prefLabel`), literal(`промеждутък`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}definition`), literal(`a tract of land, smaller than a continent, surrounded by water at high water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}definition`), literal(`часть суши, со всех сторон окружённая водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}notation`), literal(`T.ISL`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}prefLabel`), literal(`island`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}prefLabel`), literal(`ö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}prefLabel`), literal(`øy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}prefLabel`), literal(`остров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISL`), namedNode(`${skos}prefLabel`), literal(`остров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${skos}definition`), literal(`small island, bigger than rock, smaller than island.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${skos}notation`), literal(`T.ISLET`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${skos}prefLabel`), literal(`islet`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLET`), namedNode(`${skos}historyNote`), literal(`Added in v3.0`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}definition`), literal(`an island created by landfill or diking and filling in a wetland, bay, or lagoon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}definition`), literal(`искусственный остров (для разработки морских месторождений нефти и газа)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}notation`), literal(`T.ISLF`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}prefLabel`), literal(`artificial island`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}prefLabel`), literal(`artificiell ö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}prefLabel`), literal(`kunstig øy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}prefLabel`), literal(`искусственный остров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLF`), namedNode(`${skos}prefLabel`), literal(`искуствен остров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}definition`), literal(`a mangrove swamp surrounded by a waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}definition`), literal(`мангровое болото, окруженное водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}notation`), literal(`T.ISLM`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}prefLabel`), literal(`mangrove island`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}prefLabel`), literal(`mangrove ö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}prefLabel`), literal(`mangroveøy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}prefLabel`), literal(`мангров остров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLM`), namedNode(`${skos}prefLabel`), literal(`мангровый остров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}definition`), literal(`tracts of land, smaller than a continent, surrounded by water at high water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}definition`), literal(`части суши, со всех сторон окружённые водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}notation`), literal(`T.ISLS`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}prefLabel`), literal(`islands`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}prefLabel`), literal(`öar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}prefLabel`), literal(`øyer`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}prefLabel`), literal(`острова`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLS`), namedNode(`${skos}prefLabel`), literal(`острови`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}definition`), literal(`a coastal island connected to the mainland by barrier beaches, levees or dikes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}definition`), literal(`побережье острова, соединенное с материком посредством вырытого рва, траншеи или дамбы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}notation`), literal(`T.ISLT`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}prefLabel`), literal(`halvö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}prefLabel`), literal(`land-tied island`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}prefLabel`), literal(`øy med landforbindelse`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}prefLabel`), literal(`остров свързан със сушата`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLT`), namedNode(`${skos}prefLabel`), literal(`соединяющийся с материком остров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}notation`), literal(`T.ISLX`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}prefLabel`), literal(`del av ö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}prefLabel`), literal(`del av øy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}prefLabel`), literal(`section of island`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}prefLabel`), literal(`участок острова`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISLX`), namedNode(`${skos}prefLabel`), literal(`част от остров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}definition`), literal(`a narrow strip of land connecting two larger land masses and bordered by water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}definition`), literal(`полоса суши, соединяющая два материка или материк с полуостровом и т.п., разделённые водой`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}notation`), literal(`T.ISTH`), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}prefLabel`), literal(`isthmus`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}prefLabel`), literal(`landtunge`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}prefLabel`), literal(`näs`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}prefLabel`), literal(`перешеек`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.ISTH`), namedNode(`${skos}prefLabel`), literal(`провлак`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}definition`), literal(`a distinctive landscape developed on soluble rock such as limestone characterized by sinkholes, caves, disappearing streams, and underground drainage`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}definition`), literal(`ландшафт, образованный деятельностью подземных вод на участках суши, поверхность которых сложена растворимыми горными породами: известняками, гипсом, каменной солью и др.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}notation`), literal(`T.KRST`), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}prefLabel`), literal(`karst area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}prefLabel`), literal(`karstområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}prefLabel`), literal(`karstområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}prefLabel`), literal(`карст`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.KRST`), namedNode(`${skos}prefLabel`), literal(`карстовый район`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}definition`), literal(`an area of solidified lava`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}notation`), literal(`T.LAVA`), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}prefLabel`), literal(`lava area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}prefLabel`), literal(`lavaområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}prefLabel`), literal(`lavaområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}prefLabel`), literal(`зона с лава`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.LAVA`), namedNode(`${skos}prefLabel`), literal(`район застывшей лавы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}definition`), literal(`гидротехническое сооружение, перегораживающее водоток для подъёма воды в реке, создания водохранилища или электростанции`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}definition`), literal(`a natural low embankment bordering a distributary or meandering stream; often built up artificially to control floods`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}notation`), literal(`T.LEV`), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}prefLabel`), literal(`demning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}prefLabel`), literal(`плотина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}prefLabel`), literal(`вал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}prefLabel`), literal(`levee`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.LEV`), namedNode(`${skos}prefLabel`), literal(`skyddsvall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}definition`), literal(`a flat-topped, isolated elevation with steep slopes on all sides, less extensive than a plateau`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}definition`), literal(`обширная возвышенность с равнинной или холмистой поверхностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}notation`), literal(`T.MESA`), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}prefLabel`), literal(`mesa`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}prefLabel`), literal(`mesa(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}prefLabel`), literal(`platå(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}prefLabel`), literal(`плоскогорье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MESA`), namedNode(`${skos}prefLabel`), literal(`скалисто плато(а)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}definition`), literal(`a low, isolated, rounded hill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}definition`), literal(`холм, горка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}notation`), literal(`T.MND`), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}prefLabel`), literal(`höjd(er)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}prefLabel`), literal(`mound(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}prefLabel`), literal(`voll`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}prefLabel`), literal(`бугор`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MND`), namedNode(`${skos}prefLabel`), literal(`могила(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}definition`), literal(`a mound, ridge, or other accumulation of glacial till`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}definition`), literal(`скопление обломков горных пород, образуемое на границе передвижения и таяния ледников`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}notation`), literal(`T.MRN`), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}prefLabel`), literal(`moraine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}prefLabel`), literal(`morene`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}prefLabel`), literal(`morän`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}prefLabel`), literal(`морена`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.MRN`), namedNode(`${skos}prefLabel`), literal(`морена`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}definition`), literal(`an elevation standing high above the surrounding area with small summit area, steep slopes and local relief of 300m or more`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}definition`), literal(`Значительная возвышенность, поднимающаяся над окружающей местностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}notation`), literal(`T.MT`), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}prefLabel`), literal(`berg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}prefLabel`), literal(`fjell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}prefLabel`), literal(`mountain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}prefLabel`), literal(`гора`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MT`), namedNode(`${skos}prefLabel`), literal(`планина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}definition`), literal(`a mountain range or a group of mountains or high ridges`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}definition`), literal(`значительные возвышенности, поднимающиеся над окружающей местностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}notation`), literal(`T.MTS`), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}prefLabel`), literal(`berg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}prefLabel`), literal(`fjell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}prefLabel`), literal(`mountains`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}prefLabel`), literal(`горы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.MTS`), namedNode(`${skos}prefLabel`), literal(`планини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}definition`), literal(`a narrow strip of land between the two limbs of a meander loop at its narrowest point`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}definition`), literal(`узкий участок суши между двумя краями излучины реки; самая узкая часть меандра реки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}notation`), literal(`T.NKM`), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}prefLabel`), literal(`meander neck`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}prefLabel`), literal(`meander neck`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}prefLabel`), literal(`meanderhals`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}prefLabel`), literal(`Извивка между меандри`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.NKM`), namedNode(`${skos}prefLabel`), literal(`шейка меандра`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}definition`), literal(`a rock or mountain peak protruding through glacial ice`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}definition`), literal(`изолированный скалистый пик, горный гребень или холм, выступающий над ледниковой поверхностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}notation`), literal(`T.NTK`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}prefLabel`), literal(`nunatak`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}prefLabel`), literal(`nunatak`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}prefLabel`), literal(`nunatak`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}prefLabel`), literal(`Ледникова скала`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTK`), namedNode(`${skos}prefLabel`), literal(`нунатак`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}definition`), literal(`rocks or mountain peaks protruding through glacial ice`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}definition`), literal(`изолированные скалистые пики, горные гребни или холмы, выступающие над ледниковой поверхностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}notation`), literal(`T.NTKS`), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}prefLabel`), literal(`nunataker`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}prefLabel`), literal(`nunatakker`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}prefLabel`), literal(`nunataks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}prefLabel`), literal(`Ледникови скали`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.NTKS`), namedNode(`${skos}prefLabel`), literal(`нунатаки`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}definition`), literal(`a near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}definition`), literal(`большое углубление, впадина в земной поверхности с покатым спуском со всех сторон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}notation`), literal(`T.PAN`), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}prefLabel`), literal(`aurhelle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}prefLabel`), literal(`pan`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}prefLabel`), literal(`sänka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}prefLabel`), literal(`котловина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PAN`), namedNode(`${skos}prefLabel`), literal(`котловина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}definition`), literal(`a near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}definition`), literal(`большие углубления, впадины в земной поверхности с покатым спуском со всех сторон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}notation`), literal(`T.PANS`), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}prefLabel`), literal(`aurheller`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}prefLabel`), literal(`pans`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}prefLabel`), literal(`sänkor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}prefLabel`), literal(`котловини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PANS`), namedNode(`${skos}prefLabel`), literal(`котловины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}definition`), literal(`a break in a mountain range or other high obstruction, used for transportation from one side to the other [See also gap]`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}definition`), literal(`ущелье, узкий, тесный проход между возвышенностями или водными преградами (в котором можно остановить противника)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}notation`), literal(`T.PASS`), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}prefLabel`), literal(`bergspass, trång väg(passage)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}prefLabel`), literal(`pass`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}prefLabel`), literal(`pass`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}prefLabel`), literal(`Дефиле`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PASS`), namedNode(`${skos}prefLabel`), literal(`дефиле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}definition`), literal(`an elongate area of land projecting into a body of water and nearly surrounded by water`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}definition`), literal(`часть суши, с трёх сторон омываемая водой, а четвёртой стороной примыкающая к материку или острову`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}notation`), literal(`T.PEN`), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}prefLabel`), literal(`halvö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}prefLabel`), literal(`halvøy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}prefLabel`), literal(`peninsula`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}prefLabel`), literal(`полуостров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PEN`), namedNode(`${skos}prefLabel`), literal(`полуостров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}notation`), literal(`T.PENX`), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}prefLabel`), literal(`del av halvö`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}prefLabel`), literal(`del av halvøy`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}prefLabel`), literal(`section of peninsula`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}prefLabel`), literal(`участок полуострова`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PENX`), namedNode(`${skos}prefLabel`), literal(`част от полуостров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}definition`), literal(`a pointed elevation atop a mountain, ridge, or other hypsographic feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}definition`), literal(`остроконечная горная вершина или высшая точка горной вершины вообще`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}notation`), literal(`T.PK`), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}prefLabel`), literal(`peak`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}prefLabel`), literal(`tind`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}prefLabel`), literal(`topp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}prefLabel`), literal(`връх`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PK`), namedNode(`${skos}prefLabel`), literal(`пик`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}definition`), literal(`pointed elevations atop a mountain, ridge, or other hypsographic features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}definition`), literal(`остроконечные горные вершины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}notation`), literal(`T.PKS`), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}prefLabel`), literal(`peaks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}prefLabel`), literal(`tinder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}prefLabel`), literal(`toppar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}prefLabel`), literal(`върхове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PKS`), namedNode(`${skos}prefLabel`), literal(`пики`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}definition`), literal(`an elevated plain with steep slopes on one or more sides, and often with incised streams`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}definition`), literal(`возвышенная равнина, ограниченная чётко выраженными уступами, крутыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}notation`), literal(`T.PLAT`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}prefLabel`), literal(`plateau`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}prefLabel`), literal(`platå`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}prefLabel`), literal(`platå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}prefLabel`), literal(`плато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLAT`), namedNode(`${skos}prefLabel`), literal(`плато`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}notation`), literal(`T.PLATX`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}prefLabel`), literal(`del av platå`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}prefLabel`), literal(`del av platå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}prefLabel`), literal(`section of plateau`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}prefLabel`), literal(`участок плато`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLATX`), namedNode(`${skos}prefLabel`), literal(`част от плато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}definition`), literal(`an area reclaimed from the sea by diking and draining`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}definition`), literal(`осушенный участок моря или другого водоёма`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}notation`), literal(`T.PLDR`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}prefLabel`), literal(`invallat landområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}prefLabel`), literal(`polder`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}prefLabel`), literal(`polder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}prefLabel`), literal(`Преградена с дига зона`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLDR`), namedNode(`${skos}prefLabel`), literal(`польдер`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}definition`), literal(`an extensive area of comparatively level to gently undulating land, lacking surface irregularities, and usually adjacent to a higher area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}definition`), literal(`обширный участок суши без значительных повышений и понижений поверхности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}notation`), literal(`T.PLN`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}prefLabel`), literal(`поле(та)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}prefLabel`), literal(`plain(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}prefLabel`), literal(`sletteland`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}prefLabel`), literal(`slätt(land)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLN`), namedNode(`${skos}prefLabel`), literal(`равнина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}notation`), literal(`T.PLNX`), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}prefLabel`), literal(`del av slette`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}prefLabel`), literal(`del av slättland`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}prefLabel`), literal(`section of plain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}prefLabel`), literal(`Част от поле`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PLNX`), namedNode(`${skos}prefLabel`), literal(`участок равнины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}definition`), literal(`a bluff or prominent hill overlooking or projecting into a lowland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}definition`), literal(`выступ, мыс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}notation`), literal(`T.PROM`), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}prefLabel`), literal(`hög udde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}prefLabel`), literal(`promontory(-ies)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}prefLabel`), literal(`tange`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}prefLabel`), literal(`издатина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PROM`), namedNode(`${skos}prefLabel`), literal(`промонторий`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}definition`), literal(`a tapering piece of land projecting into a body of water, less prominent than a cape`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}definition`), literal(`длинная узкая отмель, идущая от берега, или низменный узкий мыс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}notation`), literal(`T.PT`), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}prefLabel`), literal(`odde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}prefLabel`), literal(`point`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}prefLabel`), literal(`udde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}prefLabel`), literal(`Място`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PT`), namedNode(`${skos}prefLabel`), literal(`выступающая морская коса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}definition`), literal(`tapering pieces of land projecting into a body of water, less prominent than a cape`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}definition`), literal(`длинные узкие отмели, идущие от берега, или низменные узкие мысы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}notation`), literal(`T.PTS`), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}prefLabel`), literal(`odder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}prefLabel`), literal(`points`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}prefLabel`), literal(`uddar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}prefLabel`), literal(`Места`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.PTS`), namedNode(`${skos}prefLabel`), literal(`выступающие морские косы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}definition`), literal(`a ridge of sand just inland and parallel to the beach, usually in series`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}definition`), literal(`песчаная гряда, находящаяся на суше или идущая параллельно пляжу`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}notation`), literal(`T.RDGB`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}prefLabel`), literal(`beach ridge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}prefLabel`), literal(`bergskam`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}prefLabel`), literal(`strandrygg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}prefLabel`), literal(`Плажен хребет`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGB`), namedNode(`${skos}prefLabel`), literal(`гребень косы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}definition`), literal(`a long narrow elevation with steep sides, and a more or less continuous crest`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}definition`), literal(`ряд гор, тянущихся в одном направлении, горная цепь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}notation`), literal(`T.RDGE`), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}prefLabel`), literal(`ridge(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}prefLabel`), literal(`rygg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}prefLabel`), literal(`rygg, kam, ås`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}prefLabel`), literal(`горный хребет`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RDGE`), namedNode(`${skos}prefLabel`), literal(`хребет(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}definition`), literal(`каменистая пустыня`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}definition`), literal(`a desert plain characterized by a surface veneer of gravel and stones`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}notation`), literal(`T.REG`), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}prefLabel`), literal(`steinørken`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}prefLabel`), literal(`stenöken`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}prefLabel`), literal(`stony desert`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}prefLabel`), literal(`гаммада`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.REG`), namedNode(`${skos}prefLabel`), literal(`камениста пустиня`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}definition`), literal(`a conspicuous, isolated rocky mass`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}definition`), literal(`каменная глыба, утёс с крутыми склонами и острыми выступами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}notation`), literal(`T.RK`), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}prefLabel`), literal(`klippa`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}prefLabel`), literal(`rock`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}prefLabel`), literal(`stein`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}prefLabel`), literal(`скала`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.RK`), namedNode(`${skos}prefLabel`), literal(`скала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}definition`), literal(`an irregular mass of fallen rock at the base of a cliff or steep slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}definition`), literal(`камни, низвергающиеся с гор лавиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}notation`), literal(`T.RKFL`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}prefLabel`), literal(`ras`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}prefLabel`), literal(`rockfall`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}prefLabel`), literal(`steinras`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}prefLabel`), literal(`Свлачище`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKFL`), namedNode(`${skos}prefLabel`), literal(`камнепад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}definition`), literal(`conspicuous, isolated rocky masses`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}definition`), literal(`остроконечные горные вершины или высшие точки горной вершины вообще`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}notation`), literal(`T.RKS`), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}prefLabel`), literal(`klipper`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}prefLabel`), literal(`klippor`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}prefLabel`), literal(`rocks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}prefLabel`), literal(`скали`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.RKS`), namedNode(`${skos}prefLabel`), literal(`скалы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}definition`), literal(`a tract of land covered with sand`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}definition`), literal(`территория, покрытая песками`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}notation`), literal(`T.SAND`), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}prefLabel`), literal(`sand area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}prefLabel`), literal(`sandområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}prefLabel`), literal(`sandområde`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}prefLabel`), literal(`Пясъчна област`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SAND`), namedNode(`${skos}prefLabel`), literal(`район песков`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}definition`), literal(`a channel formerly containing the water of a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}definition`), literal(`углубление в почве, по которому ранее текла вода`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}notation`), literal(`T.SBED`), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}prefLabel`), literal(`dry stream bed`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}prefLabel`), literal(`tørt elveleie`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}prefLabel`), literal(`uttorkad flodbädd`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}prefLabel`), literal(`Сухо легло на поток`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SBED`), namedNode(`${skos}prefLabel`), literal(`высохшее речное русло`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}definition`), literal(`a long line of cliffs or steep slopes separating level surfaces above and below`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}definition`), literal(`покатая поверхность горы, холма и т.п.; склон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}notation`), literal(`T.SCRP`), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}prefLabel`), literal(`brant sluttning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}prefLabel`), literal(`bratt skråning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}prefLabel`), literal(`escarpment`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}prefLabel`), literal(`Насип`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SCRP`), namedNode(`${skos}prefLabel`), literal(`откос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}definition`), literal(`a broad, open pass crossing a ridge or between hills or mountains`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}definition`), literal(`продолговатая впадина, понижение между вершинами горного хребта или возвышенности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}notation`), literal(`T.SDL`), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}prefLabel`), literal(`saddle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}prefLabel`), literal(`sadelformad bergsrygg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}prefLabel`), literal(`sal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}prefLabel`), literal(`Седловина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SDL`), namedNode(`${skos}prefLabel`), literal(`седловина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}definition`), literal(`a narrow zone bordering a waterbody which covers and uncovers at high and low water, respectively`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}definition`), literal(`полоса земной поверхности по обе стороны береговой линии моря, озера, водохранилища`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}notation`), literal(`T.SHOR`), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}prefLabel`), literal(`бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}prefLabel`), literal(`bredd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}prefLabel`), literal(`kust, strand`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}prefLabel`), literal(`shore`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SHOR`), namedNode(`${skos}prefLabel`), literal(`побережье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}definition`), literal(`a small crater-shape depression in a karst area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}definition`), literal(`отрицательная форма рельефа, замкнутая впадина чашеобразной, конической или другой формы, диаметром до 50 метров, глубиной до 15 (иногда до 200) метров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}notation`), literal(`T.SINK`), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}prefLabel`), literal(`sänka`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}prefLabel`), literal(`jordfallshull`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}prefLabel`), literal(`sinkhole`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}prefLabel`), literal(`Впадина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SINK`), namedNode(`${skos}prefLabel`), literal(`карстовая воронка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}definition`), literal(`a mound of earth material, at the base of a slope and the associated scoured area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}definition`), literal(`естественное или специально сооруженное возвышение для спуска на лыжах, санках и т.п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}notation`), literal(`T.SLID`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}prefLabel`), literal(`kana`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}prefLabel`), literal(`ras`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}prefLabel`), literal(`slide`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}prefLabel`), literal(`Стръмнина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLID`), namedNode(`${skos}prefLabel`), literal(`горка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}definition`), literal(`a surface with a relatively uniform slope angle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}definition`), literal(`наклонная поверхность, скат (горы, холма и т.п.)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}notation`), literal(`T.SLP`), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}prefLabel`), literal(`kontinentalskråning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}prefLabel`), literal(`slope(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}prefLabel`), literal(`sluttning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}prefLabel`), literal(`наклон(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SLP`), namedNode(`${skos}prefLabel`), literal(`склон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}definition`), literal(`a narrow, straight or curved continuation of a beach into a waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}definition`), literal(`узкий и длинный мыс при слиянии двух рек; песчаная коса, намытая прибоем`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}notation`), literal(`T.SPIT`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}prefLabel`), literal(`tange`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}prefLabel`), literal(`landtunga`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}prefLabel`), literal(`spit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}prefLabel`), literal(`Дълъг подводен бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPIT`), namedNode(`${skos}prefLabel`), literal(`стрелка`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}definition`), literal(`a subordinate ridge projecting outward from a hill, mountain or other elevation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}definition`), literal(`ответвление основной горной цепи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}notation`), literal(`T.SPUR`), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}prefLabel`), literal(`utspring`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}prefLabel`), literal(`spur(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}prefLabel`), literal(`utlöpare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}prefLabel`), literal(`Издадена скала(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.SPUR`), namedNode(`${skos}prefLabel`), literal(`отрог`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}definition`), literal(`a steep concave slope formed by an accumulation of loose rock fragments at the base of a cliff or steep slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}definition`), literal(`пологий спуск, покрытый обломками горных пород, осыпающимися в результате выветривания`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}notation`), literal(`T.TAL`), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}prefLabel`), literal(`steinur`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}prefLabel`), literal(`stenrassluttning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}prefLabel`), literal(`talus slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}prefLabel`), literal(`Склон`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.TAL`), namedNode(`${skos}prefLabel`), literal(`скат, покрытый осыпью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}definition`), literal(`a long wind-swept trough between parallel longitudinal dunes`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}definition`), literal(`понижение земной поверхности в пределах суши, на дне океанов и морей, расположенное между двумя дюнами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}notation`), literal(`T.TRGD`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}prefLabel`), literal(`dal mellom sanddyner`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}prefLabel`), literal(`interdune trough(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}prefLabel`), literal(`ränna mellan dyner`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}prefLabel`), literal(`бразда(и) между дюни`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRGD`), namedNode(`${skos}prefLabel`), literal(`впадина между дюнами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}definition`), literal(`a long, narrow alluvial platform bounded by steeper slopes above and below, usually overlooking a waterbody`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}definition`), literal(`горизонтальная или слегка наклонная площадка, образующая уступ на склоне местности, естественного происхождения или устроенная искусственно`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}notation`), literal(`T.TRR`), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}prefLabel`), literal(`terass`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}prefLabel`), literal(`terrace`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}prefLabel`), literal(`terrasse`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}prefLabel`), literal(`тераса`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.TRR`), namedNode(`${skos}prefLabel`), literal(`терраса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}definition`), literal(`обширная возвышенность с равнинной или холмистой поверхностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}definition`), literal(`an extensive interior region of high land with low to moderate surface relief`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}notation`), literal(`T.UPLD`), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}prefLabel`), literal(`плоскогорье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}prefLabel`), literal(`högland`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}prefLabel`), literal(`oppland`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}prefLabel`), literal(`upland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.UPLD`), namedNode(`${skos}prefLabel`), literal(`низина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}definition`), literal(`an elongated depression usually traversed by a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}definition`), literal(`удлинённая впадина между гор или в холмистой местности; равнина вдоль речного русла`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}notation`), literal(`T.VAL`), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}prefLabel`), literal(`dal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}prefLabel`), literal(`dal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}prefLabel`), literal(`valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}prefLabel`), literal(`долина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VAL`), namedNode(`${skos}prefLabel`), literal(`долина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}definition`), literal(`a valley the floor of which is notably higher than the valley or shore to which it leads; most common in areas that have been glaciated`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}definition`), literal(`боковая долина, днище которой оканчивается выше днища главной долины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}notation`), literal(`T.VALG`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}prefLabel`), literal(`hanging valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}prefLabel`), literal(`hengende dal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}prefLabel`), literal(`hängdal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}prefLabel`), literal(`Наклонена долина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALG`), namedNode(`${skos}prefLabel`), literal(`висячая долина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}definition`), literal(`elongated depressions usually traversed by a stream`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}definition`), literal(`удлинённые впадины между гор или в холмистой местности; равнины вдоль речного русла`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}notation`), literal(`T.VALS`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}prefLabel`), literal(`dalar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}prefLabel`), literal(`daler`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}prefLabel`), literal(`valleys`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}prefLabel`), literal(`долини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALS`), namedNode(`${skos}prefLabel`), literal(`долины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}notation`), literal(`T.VALX`), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}prefLabel`), literal(`del av dal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}prefLabel`), literal(`del av dal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}prefLabel`), literal(`section of valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}prefLabel`), literal(`участок долины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VALX`), namedNode(`${skos}prefLabel`), literal(`част от долина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}definition`), literal(`a conical elevation composed of volcanic materials with a crater at the top`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}definition`), literal(`конусообразная гора с кратером на вершине, через который из недр земли извергаются огонь, лава, пепел, горячие газы, пары воды и обломки горных пород`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}inScheme`), namedNode(`${gn}T`), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}notation`), literal(`T.VLC`), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}prefLabel`), literal(`volcano`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}prefLabel`), literal(`vulkan`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}prefLabel`), literal(`vulkan`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}prefLabel`), literal(`вулкан`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}T.VLC`), namedNode(`${skos}prefLabel`), literal(`вулкан`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}definition`), literal(`a gentle slope, with a generally smooth surface, particularly found around groups of islands and seamounts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}definition`), literal(`прибрежная мелководная зона океана (с глубинами до 200 м); материковая отмель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}notation`), literal(`U.APNU`), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}prefLabel`), literal(`apron`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}prefLabel`), literal(`plattform`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}prefLabel`), literal(`slette`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}prefLabel`), literal(`Козирка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.APNU`), namedNode(`${skos}prefLabel`), literal(`береговой шельф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}U`), namedNode(`${rdfs}comment`), literal(`undersea`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}definition`), literal(`a low bulge around the southeastern end of the island of Hawaii`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}definition`), literal(`территория, пространство, границы которого имеют форму изогнутой линии (например, дуга на юго-востоке Гавайского хребта)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}notation`), literal(`U.ARCU`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}prefLabel`), literal(`arch`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}prefLabel`), literal(`bue`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}prefLabel`), literal(`båge, valv`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}prefLabel`), literal(`Арка`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARCU`), namedNode(`${skos}prefLabel`), literal(`дуга`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}definition`), literal(`an area of subdued corrugations off Baja California`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}definition`), literal(`an area of subdued corrugations off Baja California`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}notation`), literal(`U.ARRU`), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}prefLabel`), literal(`arrugado`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}prefLabel`), literal(`arrugado`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}prefLabel`), literal(`arrugado`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}prefLabel`), literal(`veckig`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.ARRU`), namedNode(`${skos}prefLabel`), literal(`Нагъване`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}definition`), literal(`a region adjacent to a continent, normally occupied by or bordering a shelf, that is highly irregular with depths well in excess of those typical of a shelf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}definition`), literal(`невысокий порог, отделяющий геосинклиналь от океана`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}notation`), literal(`U.BDLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}prefLabel`), literal(`borderland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}prefLabel`), literal(`grenseområde`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}prefLabel`), literal(`gränsland`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}prefLabel`), literal(`Гранична област`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.BDLU`), namedNode(`${skos}prefLabel`), literal(`бордерленд`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}definition`), literal(`elevations, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}definition`), literal(`геологические образования, обязанные своим происхождением деятельности текучей воды; возвышенности на поверхности шельфа, не препятствующие судоходству`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}notation`), literal(`U.BKSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}prefLabel`), literal(`bredd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}prefLabel`), literal(`banks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}prefLabel`), literal(`strandsluttningar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}prefLabel`), literal(`Крайбрежия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.BKSU`), namedNode(`${skos}prefLabel`), literal(`наносы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${skos}definition`), literal(`a small terrace`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${skos}notation`), literal(`U.BNCU`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${skos}prefLabel`), literal(`bench`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNCU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}definition`), literal(`an elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}definition`), literal(`геологическое образование, обязанное своим происхождением деятельности текучей воды; возвышенность на поверхности шельфа, не препятствующее судоходству`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}notation`), literal(`U.BNKU`), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}prefLabel`), literal(`нанос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}prefLabel`), literal(`bank`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}prefLabel`), literal(`bredd`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}prefLabel`), literal(`strandsluttning, vall`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.BNKU`), namedNode(`${skos}prefLabel`), literal(`Крайбрежие`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}definition`), literal(`понижение земной поверхности в пределах суши, на дне океанов и морей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}definition`), literal(`a depression more or less equidimensional in plan and of variable extent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}notation`), literal(`U.BSNU`), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}prefLabel`), literal(`впадина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}prefLabel`), literal(`basin`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}prefLabel`), literal(`basseng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}prefLabel`), literal(`sänka, bassäng`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.BSNU`), namedNode(`${skos}prefLabel`), literal(`басейн`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}definition`), literal(`an entire mountain system including the subordinate ranges, interior plateaus, and basins`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}definition`), literal(`горная цепь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}notation`), literal(`U.CDAU`), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}prefLabel`), literal(`bergskedja`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}prefLabel`), literal(`cordillera`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}prefLabel`), literal(`fjellkjede`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}prefLabel`), literal(`кордельера`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CDAU`), namedNode(`${skos}prefLabel`), literal(`кордилиери`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}definition`), literal(`relatively narrow, deep depressions with steep sides, the bottom of which generally has a continuous slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}definition`), literal(`глубокие речные долины с очень крутыми или отвесными склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}notation`), literal(`U.CNSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}prefLabel`), literal(`canyoner`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}prefLabel`), literal(`canyons`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}prefLabel`), literal(`kanjoner`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}prefLabel`), literal(`каньони`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNSU`), namedNode(`${skos}prefLabel`), literal(`каньоны`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}definition`), literal(`глубокая речная долина с очень крутыми или отвесными склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}definition`), literal(`a relatively narrow, deep depression with steep sides, the bottom of which generally has a continuous slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}notation`), literal(`U.CNYU`), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}prefLabel`), literal(`canyon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}prefLabel`), literal(`canyon`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}prefLabel`), literal(`каньон`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}prefLabel`), literal(`каньон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CNYU`), namedNode(`${skos}prefLabel`), literal(`kanjon`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}definition`), literal(`a gentle slope rising from oceanic depths towards the foot of a continental slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}definition`), literal(`континентальное подножие, один из основных элементов подводной окраины материков; расположено между основанием материкового склона и внешней границей ложа океана`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}notation`), literal(`U.CRSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}prefLabel`), literal(`continental rise`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}prefLabel`), literal(`kontinentalhöjning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}prefLabel`), literal(`kontinentalstigning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}prefLabel`), literal(`Континентална издатина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.CRSU`), namedNode(`${skos}prefLabel`), literal(`материковое подножие`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}definition`), literal(`a localized deep area within the confines of a larger feature, such as a trough, basin or trench`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}definition`), literal(`водная глубь, морская бездна; глубокий провал в болоте, топь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}notation`), literal(`U.DEPU`), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}prefLabel`), literal(`deep`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}prefLabel`), literal(`djup`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}prefLabel`), literal(`dyp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}prefLabel`), literal(`Бездна`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.DEPU`), namedNode(`${skos}prefLabel`), literal(`пучина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}definition`), literal(`a line along which there is a marked increase of slope at the outer margin of a continental shelf or island shelf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}definition`), literal(`внешний край континентального шельфа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}notation`), literal(`U.EDGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}prefLabel`), literal(`бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}prefLabel`), literal(`kontinentalsokkelkant`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}prefLabel`), literal(`shelf edge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}prefLabel`), literal(`shelf edge`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.EDGU`), namedNode(`${skos}prefLabel`), literal(`бровка шельфа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}definition`), literal(`отвесная скала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}definition`), literal(`an elongated and comparatively steep slope separating flat or gently sloping areas`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}notation`), literal(`U.ESCU`), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}prefLabel`), literal(`утес`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}prefLabel`), literal(`brant sluttning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}prefLabel`), literal(`bratt skråning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}prefLabel`), literal(`Насип`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.ESCU`), namedNode(`${skos}prefLabel`), literal(`escarpment (or scarp)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}definition`), literal(`a relatively smooth feature normally sloping away from the lower termination of a canyon or canyon system`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}definition`), literal(`аккумулятивная форма рельефа, образованная скоплением обломочных пород, вынесенных горными реками на предгорную равнину или в более плоскую широкую долину, где происходит резкое уменьшение живой силы потока`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}notation`), literal(`U.FANU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}prefLabel`), literal(`avleiringsvifte`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}prefLabel`), literal(`fan`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}prefLabel`), literal(`fan`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}prefLabel`), literal(`Вертрило`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.FANU`), namedNode(`${skos}prefLabel`), literal(`конус выступа`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}definition`), literal(`a small level or nearly level area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}definition`), literal(`равнина, расположенная не выше 200 м над уровнем моря; низменная территория, местность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}notation`), literal(`U.FLTU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}prefLabel`), literal(`flat`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}prefLabel`), literal(`flat`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}prefLabel`), literal(`flate`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}prefLabel`), literal(`Плитчина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.FLTU`), namedNode(`${skos}prefLabel`), literal(`низменность`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${skos}definition`), literal(`a branch of a canyon or valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${skos}notation`), literal(`U.FRKU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${skos}prefLabel`), literal(`fork`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRKU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${skos}definition`), literal(`a branch of a canyon or valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${skos}notation`), literal(`U.FRSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${skos}prefLabel`), literal(`forks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRSU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}definition`), literal(`an extensive linear zone of irregular topography of the sea floor, characterized by steep-sided or asymmetrical ridges, troughs, or escarpments`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}definition`), literal(`система крупных разломов (сбросов) и грабенов (рифтов)`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}notation`), literal(`U.FRZU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}prefLabel`), literal(`bruddsone`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}prefLabel`), literal(`fracture zone`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}prefLabel`), literal(`fracture zone`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}prefLabel`), literal(`Зона на накъсване`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.FRZU`), namedNode(`${skos}prefLabel`), literal(`зона разломов земной коры`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}definition`), literal(`a closed, linear, narrow, shallow depression`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}definition`), literal(`длинная узкая впадина на дне океана или моря`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}notation`), literal(`U.FURU`), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}prefLabel`), literal(`fure`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}prefLabel`), literal(`furrow`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}prefLabel`), literal(`spår`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}prefLabel`), literal(`Улей`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.FURU`), namedNode(`${skos}prefLabel`), literal(`желоб`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}definition`), literal(`узкая крутосклонная долина (обычно в пределах горной страны), промытая рекой в твёрдых коренных породах`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}definition`), literal(`a narrow break in a ridge or rise`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}notation`), literal(`U.GAPU`), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}prefLabel`), literal(`klyfta`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}prefLabel`), literal(`gap`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}prefLabel`), literal(`клисура`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}prefLabel`), literal(`ущелье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.GAPU`), namedNode(`${skos}prefLabel`), literal(`passasje`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}definition`), literal(`a small valley-like feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}definition`), literal(`впадина в земле, промытая ливнем, образованная потоком воды`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}notation`), literal(`U.GLYU`), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}prefLabel`), literal(`gully`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}prefLabel`), literal(`ravin`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}prefLabel`), literal(`renne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}prefLabel`), literal(`Дере`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.GLYU`), namedNode(`${skos}prefLabel`), literal(`промоина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}definition`), literal(`an elevation rising generally less than 500 meters`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}definition`), literal(`возвышенность, высота которой менее 500 метров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}notation`), literal(`U.HLLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}prefLabel`), literal(`kulle`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}prefLabel`), literal(`hill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}prefLabel`), literal(`ås`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}prefLabel`), literal(`холм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLLU`), namedNode(`${skos}prefLabel`), literal(`Стръмнина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}definition`), literal(`elevations rising generally less than 500 meters`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}definition`), literal(`возвышенности, высота которых менее 500 метров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}notation`), literal(`U.HLSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}prefLabel`), literal(`hills`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}prefLabel`), literal(`kullar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}prefLabel`), literal(`åser`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}prefLabel`), literal(`холмы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HLSU`), namedNode(`${skos}prefLabel`), literal(`Стръмнини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}definition`), literal(`понижение земной поверхности в пределах суши, на дне океанов и морей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}definition`), literal(`a small depression of the sea floor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}notation`), literal(`U.HOLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}prefLabel`), literal(`впадина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}prefLabel`), literal(`hole`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}prefLabel`), literal(`hull`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}prefLabel`), literal(`hål`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.HOLU`), namedNode(`${skos}prefLabel`), literal(`Вдлъбнатина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}definition`), literal(`an elevation rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}definition`), literal(`небольшая подводная возвышенность   округлой или овальной формы с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}notation`), literal(`U.KNLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}prefLabel`), literal(`knaus`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}prefLabel`), literal(`knoll`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}prefLabel`), literal(`liten kulle`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}prefLabel`), literal(`Хълм`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNLU`), namedNode(`${skos}prefLabel`), literal(`возвышение морского дна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}definition`), literal(`elevations rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summits`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}definition`), literal(`небольшие подводные возвышенности округлой или овальной формы с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}notation`), literal(`U.KNSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}prefLabel`), literal(`knauser`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}prefLabel`), literal(`knolls`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}prefLabel`), literal(`små kullar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}prefLabel`), literal(`Хълмове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.KNSU`), namedNode(`${skos}prefLabel`), literal(`возвышения морского дна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}definition`), literal(`a rocky projection or outcrop, commonly linear and near shore`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}definition`), literal(`надводные или подводные скалистые возвышения морского дна, опасные для судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}notation`), literal(`U.LDGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}prefLabel`), literal(`тераса`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}prefLabel`), literal(`avsats`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}prefLabel`), literal(`klippavsats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}prefLabel`), literal(`ledge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.LDGU`), namedNode(`${skos}prefLabel`), literal(`риф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}definition`), literal(`an embankment bordering a canyon, valley, or seachannel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}definition`), literal(`искусственное земляное возвышение, ограждающее каньон, речную долину или морской канал`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}notation`), literal(`U.LEVU`), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}prefLabel`), literal(`damm`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}prefLabel`), literal(`demning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}prefLabel`), literal(`levee`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}prefLabel`), literal(`Стръмен бряг`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.LEVU`), namedNode(`${skos}prefLabel`), literal(`насыпь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${skos}definition`), literal(`the axial depression of the mid-oceanic ridge system`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${skos}notation`), literal(`U.MDVU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${skos}prefLabel`), literal(`median valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MDVU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}definition`), literal(`an isolated, extensive, flat-topped elevation on the shelf, with relatively steep sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}definition`), literal(`гора с плоскими вершинами и более или менее крутыми, иногда ступенчатыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}notation`), literal(`U.MESU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}prefLabel`), literal(`mesa`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}prefLabel`), literal(`högplatå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}prefLabel`), literal(`mesa`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}prefLabel`), literal(`Високо плато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.MESU`), namedNode(`${skos}prefLabel`), literal(`столовая гора`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}definition`), literal(`a low, isolated, rounded hill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}definition`), literal(`низкий холмик округлой формы на месте погребения`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}notation`), literal(`U.MNDU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}prefLabel`), literal(`voll`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}prefLabel`), literal(`gravkulle`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}prefLabel`), literal(`mound`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}prefLabel`), literal(`Могила`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.MNDU`), namedNode(`${skos}prefLabel`), literal(`могильный холм`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}definition`), literal(`an annular depression that may not be continuous, located at the base of many seamounts, islands, and other isolated elevations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}definition`), literal(`длинное углубление, вырытое в земле`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}notation`), literal(`U.MOTU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}prefLabel`), literal(`moat`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}prefLabel`), literal(`vallgrav`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}prefLabel`), literal(`vollgrav`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}prefLabel`), literal(`Ров`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.MOTU`), namedNode(`${skos}prefLabel`), literal(`ров`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${skos}definition`), literal(`well-delineated subdivisions of a large and complex positive feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${skos}notation`), literal(`U.MTSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${skos}prefLabel`), literal(`mountains`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTSU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}definition`), literal(`a well-delineated subdivision of a large and complex positive feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}definition`), literal(`значительная возвышенность, поднимающаяся над окружающей местностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}notation`), literal(`U.MTU`), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}prefLabel`), literal(`berg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}prefLabel`), literal(`fjell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}prefLabel`), literal(`mountain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}prefLabel`), literal(`гора`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.MTU`), namedNode(`${skos}prefLabel`), literal(`планина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}definition`), literal(`остроконечные горные вершины или высшие точки горной вершины вообще`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}definition`), literal(`prominent elevations, part of a larger feature, either pointed or of very limited extent across the summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}notation`), literal(`U.PKSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}prefLabel`), literal(`peaks`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}prefLabel`), literal(`toppar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}prefLabel`), literal(`върхове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}prefLabel`), literal(`пики`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKSU`), namedNode(`${skos}prefLabel`), literal(`topper`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}definition`), literal(`остроконечная горная вершина или высшая точка горной вершины вообще`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}definition`), literal(`a prominent elevation, part of a larger feature, either pointed or of very limited extent across the summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}notation`), literal(`U.PKU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}prefLabel`), literal(`peak`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}prefLabel`), literal(`topp`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}prefLabel`), literal(`връх`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}prefLabel`), literal(`пик`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PKU`), namedNode(`${skos}prefLabel`), literal(`topp`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${skos}definition`), literal(`a flat or gently sloping underwater surface extending seaward from the shore`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${skos}notation`), literal(`U.PLFU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${skos}prefLabel`), literal(`platform`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLFU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}definition`), literal(`a flat, gently sloping or nearly level region`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}definition`), literal(`участок дна моря, океана без резких колебаний высот`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}notation`), literal(`U.PLNU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}prefLabel`), literal(`slätt(land)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}prefLabel`), literal(`равнина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}prefLabel`), literal(`slette`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}prefLabel`), literal(`plain`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLNU`), namedNode(`${skos}prefLabel`), literal(`Поле`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}definition`), literal(`возвышенная равнина, ограниченная чётко выраженными уступами, крутыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}definition`), literal(`a comparatively flat-topped feature of considerable extent, dropping off abruptly on one or more sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}notation`), literal(`U.PLTU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}prefLabel`), literal(`plateau`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}prefLabel`), literal(`platå`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}prefLabel`), literal(`platå`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}prefLabel`), literal(`плато`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PLTU`), namedNode(`${skos}prefLabel`), literal(`плато`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}definition`), literal(`a high tower or spire-shaped pillar of rock or coral, alone or cresting a summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}definition`), literal(`остроконечная скала`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}notation`), literal(`U.PNLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}prefLabel`), literal(`tind`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}prefLabel`), literal(`klippa`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}prefLabel`), literal(`pinnacle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}prefLabel`), literal(`Шпиц`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PNLU`), namedNode(`${skos}prefLabel`), literal(`шпиц`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}definition`), literal(`a region identifiable by a group of similar physiographic features whose characteristics are markedly in contrast with surrounding areas`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}definition`), literal(`часть природной географической зоны в составе определенной физико-географической области; региональная единица физико-географического районирования. Физико-географические провинции выделяются по морфоструктурным особенностям рельефа и климату, а в горах - по характеру высотной поясности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}notation`), literal(`U.PRVU`), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}prefLabel`), literal(`province`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}prefLabel`), literal(`provins`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}prefLabel`), literal(`provins`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}prefLabel`), literal(`Регион`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.PRVU`), namedNode(`${skos}prefLabel`), literal(`провинция, физико-географическая`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${skos}definition`), literal(`a small canyon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${skos}notation`), literal(`U.RAVU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${skos}prefLabel`), literal(`ravine`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RAVU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}definition`), literal(`a long narrow elevation with steep sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}definition`), literal(`цепи невысоких гор`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}notation`), literal(`U.RDGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}prefLabel`), literal(`rygg`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}prefLabel`), literal(`ridge`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}prefLabel`), literal(`ås`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}prefLabel`), literal(`Гребен`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDGU`), namedNode(`${skos}prefLabel`), literal(`горный кряжи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}definition`), literal(`long narrow elevations with steep sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}definition`), literal(`цепь невысоких гор`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}notation`), literal(`U.RDSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}prefLabel`), literal(`ridges`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}prefLabel`), literal(`rygger`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}prefLabel`), literal(`åsar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}prefLabel`), literal(`Гребени`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.RDSU`), namedNode(`${skos}prefLabel`), literal(`горный кряж`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}definition`), literal(`надводные или подводные скалистые возвышения морского дна, опасные для судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}definition`), literal(`surface-navigation hazards composed of consolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}notation`), literal(`U.RFSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}prefLabel`), literal(`rev`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}prefLabel`), literal(`rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}prefLabel`), literal(`reefs`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}prefLabel`), literal(`Рифове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFSU`), namedNode(`${skos}prefLabel`), literal(`рифы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}definition`), literal(`a surface-navigation hazard composed of consolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}definition`), literal(`надводные или подводные скалистые возвышения морского дна, опасные для судоходства`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}notation`), literal(`U.RFU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}prefLabel`), literal(`rev`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}prefLabel`), literal(`rev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}prefLabel`), literal(`риф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}prefLabel`), literal(`reef`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RFU`), namedNode(`${skos}prefLabel`), literal(`Риф`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}definition`), literal(`a broad elevation that rises gently, and generally smoothly, from the sea floor`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}definition`), literal(`участок морского дна,  возвышающийся над окружающим рельефом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}notation`), literal(`U.RISU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}prefLabel`), literal(`възвишение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}prefLabel`), literal(`höjd`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}prefLabel`), literal(`rise`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}prefLabel`), literal(`stigning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.RISU`), namedNode(`${skos}prefLabel`), literal(`небольшое возвышение морского дна`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${skos}definition`), literal(`a gentle slope connecting areas of different elevations`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${skos}notation`), literal(`U.RMPU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${skos}prefLabel`), literal(`ramp`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RMPU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${skos}definition`), literal(`a series of associated ridges or seamounts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${skos}notation`), literal(`U.RNGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${skos}prefLabel`), literal(`range`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.RNGU`), namedNode(`${owl}deprecated`), literal(`true`, namedNode(`${xsd}boolean`)), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}definition`), literal(`a continuously sloping, elongated depression commonly found in fans or plains and customarily bordered by levees on one or two sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}definition`), literal(`впадина на дне морского дна, с покатыми краями и защищенная с одной или двух сторон валом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}notation`), literal(`U.SCNU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}prefLabel`), literal(`havskanal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}prefLabel`), literal(`seachannel`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}prefLabel`), literal(`sjøkanal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}prefLabel`), literal(`Морски канал`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCNU`), namedNode(`${skos}prefLabel`), literal(`канал на дне океана`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}definition`), literal(`continuously sloping, elongated depressions commonly found in fans or plains and customarily bordered by levees on one or two sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}definition`), literal(`впадины на дне морского дна с пологими склонами, защищенные с одной или двух сторон валом`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}notation`), literal(`U.SCSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}prefLabel`), literal(`havskanaler`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}prefLabel`), literal(`seachannels`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}prefLabel`), literal(`sjøkanaler`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}prefLabel`), literal(`Морски канали`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SCSU`), namedNode(`${skos}prefLabel`), literal(`каналы на дне океана`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}definition`), literal(`a low part, resembling in shape a saddle, in a ridge or between contiguous seamounts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}definition`), literal(`продолговатая впадина, понижение между вершинами подводного горного хребта или возвышенности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}notation`), literal(`U.SDLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}prefLabel`), literal(`saddle`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}prefLabel`), literal(`sadelformad bergsrygg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}prefLabel`), literal(`sal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}prefLabel`), literal(`Седловина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SDLU`), namedNode(`${skos}prefLabel`), literal(`седловина подводной горной цепи`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}definition`), literal(`прибрежная мелководная зона океана (с глубинами до 200 м); материковая отмель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}definition`), literal(`a zone adjacent to a continent (or around an island) that extends from the low water line to a depth at which there is usually a marked increase of slope towards oceanic depths`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}notation`), literal(`U.SHFU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}prefLabel`), literal(`hylle`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}prefLabel`), literal(`sandrev, klippavsats`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}prefLabel`), literal(`shelf`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}prefLabel`), literal(`шелф`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHFU`), namedNode(`${skos}prefLabel`), literal(`шельф`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}definition`), literal(`a surface-navigation hazard composed of unconsolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}definition`), literal(`участок (обычно прибрежный) реки, озера и т.п. с небольшой глубиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}notation`), literal(`U.SHLU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}prefLabel`), literal(`sandgrunne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}prefLabel`), literal(`мелководье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}prefLabel`), literal(`Плитчина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}prefLabel`), literal(`grund, sandrev`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHLU`), namedNode(`${skos}prefLabel`), literal(`shoal`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}definition`), literal(`hazards to surface navigation composed of unconsolidated material`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}definition`), literal(`участки (обычно прибрежные) реки, озера и т.п. с небольшой глубиной`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}notation`), literal(`U.SHSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}prefLabel`), literal(`sandbankar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}prefLabel`), literal(`sandgrunner`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}prefLabel`), literal(`shoals`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}prefLabel`), literal(`Плитчини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHSU`), namedNode(`${skos}prefLabel`), literal(`мелководья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}definition`), literal(`a valley on the shelf, generally the shoreward extension of a canyon`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}definition`), literal(`относительно мелководная подводная равнина, прилегающая к берегам материков и генетически составляющая часть материковой платформы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}notation`), literal(`U.SHVU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}prefLabel`), literal(`dal gjennom kontinentalhyllen`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}prefLabel`), literal(`shelf valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}prefLabel`), literal(`shelf valley`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}prefLabel`), literal(`Шелфова долина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SHVU`), namedNode(`${skos}prefLabel`), literal(`материковая отмель`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}definition`), literal(`the low part of a gap or saddle separating basins`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}definition`), literal(`каменистое поперечное возвышение дна реки, нарушающее плавность её течения и затрудняющее судоходство`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}notation`), literal(`U.SILU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}prefLabel`), literal(`sill`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}prefLabel`), literal(`terskel`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}prefLabel`), literal(`tröskel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}prefLabel`), literal(`Интрузия`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SILU`), namedNode(`${skos}prefLabel`), literal(`порог`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}definition`), literal(`покатая поверхность горы, холма и т.п.; склон`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}definition`), literal(`the slope seaward from the shelf edge to the beginning of a continental rise or the point where there is a general reduction in slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}notation`), literal(`U.SLPU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}prefLabel`), literal(`откос`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}prefLabel`), literal(`sluttning`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}prefLabel`), literal(`skråning`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}prefLabel`), literal(`slope`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SLPU`), namedNode(`${skos}prefLabel`), literal(`скат`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}definition`), literal(`elevations rising generally more than 1,000 meters and of limited extent across the summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}definition`), literal(`изолированные поднятия морского дна с относительной высотой более 500 м и четко выраженной конической или куполообразной одной или несколькими вершинами и крутыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}notation`), literal(`U.SMSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}prefLabel`), literal(`seamounts`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}prefLabel`), literal(`undersjøiske fjell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}prefLabel`), literal(`undervattensberg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}prefLabel`), literal(`Морски връх`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMSU`), namedNode(`${skos}prefLabel`), literal(`подводные горы`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}definition`), literal(`an elevation rising generally more than 1,000 meters and of limited extent across the summit`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}definition`), literal(`изолированное поднятие морского дна с относительной высотой более 500 м и четко выраженной конической или куполообразной одной или несколькими вершинами и крутыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}notation`), literal(`U.SMU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}prefLabel`), literal(`undervattensberg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}prefLabel`), literal(`seamount`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}prefLabel`), literal(`undersjøisk fjell`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}prefLabel`), literal(`Морски върхове`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SMU`), namedNode(`${skos}prefLabel`), literal(`подводная гора`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}definition`), literal(`ряд гор, тянущихся в одном направлении, горная цепь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}definition`), literal(`a subordinate elevation, ridge, or rise projecting outward from a larger feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}notation`), literal(`U.SPRU`), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}prefLabel`), literal(`utspring`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}prefLabel`), literal(`utlöpare`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}prefLabel`), literal(`spur`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}prefLabel`), literal(`хребет`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.SPRU`), namedNode(`${skos}prefLabel`), literal(`хребет`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}definition`), literal(`горизонтальная или слегка наклонная площадка, образующая уступ на склоне местности, естественного происхождения или устроенная искусственно`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}definition`), literal(`a relatively flat horizontal or gently inclined surface, sometimes long and narrow, which is bounded by a steeper ascending slope on one side and by a steep descending slope on the opposite side`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}notation`), literal(`U.TERU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}prefLabel`), literal(`terass`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}prefLabel`), literal(`terrace`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}prefLabel`), literal(`terrasse`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}prefLabel`), literal(`тераса`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.TERU`), namedNode(`${skos}prefLabel`), literal(`терраса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}definition`), literal(`seamounts having a comparatively smooth, flat top`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}definition`), literal(`плосковершинные подводные вулканические горы, встречающиеся одиночно или группами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}notation`), literal(`U.TMSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}prefLabel`), literal(`undervattensberg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}prefLabel`), literal(`guyoter`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}prefLabel`), literal(`tablemounts (or guyots)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}prefLabel`), literal(`Плоски възвишения`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMSU`), namedNode(`${skos}prefLabel`), literal(`гайоты`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}definition`), literal(`a seamount having a comparatively smooth, flat top`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}definition`), literal(`подводный плосковершинный вулкан`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}notation`), literal(`U.TMTU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}prefLabel`), literal(`undervattensberg`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}prefLabel`), literal(`guyot`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}prefLabel`), literal(`tablemount (or guyot)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}prefLabel`), literal(`Плоско възвишение`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.TMTU`), namedNode(`${skos}prefLabel`), literal(`гайот`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}definition`), literal(`длинная узкая отмель, идущая от берега, или низменный узкий мыс`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}definition`), literal(`an elongate (tongue-like) extension of a flat sea floor into an adjacent higher feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}notation`), literal(`U.TNGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}prefLabel`), literal(`нос`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}prefLabel`), literal(`landtunge`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}prefLabel`), literal(`landtunga`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}prefLabel`), literal(`tongue`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TNGU`), namedNode(`${skos}prefLabel`), literal(`коса`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}definition`), literal(`a long depression of the sea floor characteristically flat bottomed and steep sided, and normally shallower than a trench`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}definition`), literal(`углубление с пологими склонами  на дне океанов и морей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}notation`), literal(`U.TRGU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}prefLabel`), literal(`gjennomgang`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}prefLabel`), literal(`ränna`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}prefLabel`), literal(`trough`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}prefLabel`), literal(`впадина на дне океана с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRGU`), namedNode(`${skos}prefLabel`), literal(`падина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}definition`), literal(`a long, narrow, characteristically very deep and asymmetrical depression of the sea floor, with relatively steep sides`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}definition`), literal(`углубление с крутыми склонами на дне океанов и морей`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}notation`), literal(`U.TRNU`), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}prefLabel`), literal(`dike`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}prefLabel`), literal(`renne`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}prefLabel`), literal(`trench`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}prefLabel`), literal(`впадина на дне океана с крутыми склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.TRNU`), namedNode(`${skos}prefLabel`), literal(`просека`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}definition`), literal(`a relatively shallow, wide depression, the bottom of which usually has a continuous gradient`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}definition`), literal(`овраг с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}notation`), literal(`U.VALU`), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}prefLabel`), literal(`dal`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}prefLabel`), literal(`dal`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}prefLabel`), literal(`valley`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}prefLabel`), literal(`долина`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.VALU`), namedNode(`${skos}prefLabel`), literal(`лощина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}definition`), literal(`a relatively shallow, wide depression, the bottom of which usually has a continuous gradient`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}definition`), literal(`овраги с пологими склонами`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}inScheme`), namedNode(`${gn}U`), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}notation`), literal(`U.VLSU`), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}prefLabel`), literal(`dalar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}prefLabel`), literal(`daler`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}prefLabel`), literal(`valleys`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}prefLabel`), literal(`долини`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}U.VLSU`), namedNode(`${skos}prefLabel`), literal(`лощины`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}definition`), literal(`a small clump of conspicuous bushes in an otherwise bare area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}definition`), literal(`заросли куста`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}notation`), literal(`V.BUSH`), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}prefLabel`), literal(`bush(es)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}prefLabel`), literal(`busk`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}prefLabel`), literal(`djungel`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}prefLabel`), literal(`кустарник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.BUSH`), namedNode(`${skos}prefLabel`), literal(`храст(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V`), namedNode(`${rdf}type`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}V`), namedNode(`${rdfs}comment`), literal(`forest, heath, ...`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}definition`), literal(`an area under cultivation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}definition`), literal(`площадь, предназначенная для возделывания многих с.-х. культур`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}notation`), literal(`V.CULT`), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}prefLabel`), literal(`cultivated area`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}prefLabel`), literal(`dyrket mark`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}prefLabel`), literal(`uppodlat område`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}prefLabel`), literal(`обработваеми площи`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.CULT`), namedNode(`${skos}prefLabel`), literal(`посевная площадь`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}definition`), literal(`an area dominated by tree vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}definition`), literal(`множество дикорастущих деревьев, расположенных на большом пространстве; пространство, обильно поросшее деревьями`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}notation`), literal(`V.FRST`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}prefLabel`), literal(`forest(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}prefLabel`), literal(`skog`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}prefLabel`), literal(`skog(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}prefLabel`), literal(`гори`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRST`), namedNode(`${skos}prefLabel`), literal(`лес`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}definition`), literal(`a forest fossilized by geologic processes and now exposed at the earth's surface`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}definition`), literal(`значительное скопление древесных окаменелостей на небольшом участке`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}notation`), literal(`V.FRSTF`), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}prefLabel`), literal(`forsteinet skog`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}prefLabel`), literal(`fossil skog`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}prefLabel`), literal(`fossilized forest`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}prefLabel`), literal(`горски вкаменелости`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.FRSTF`), namedNode(`${skos}prefLabel`), literal(`окаменелый лес`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}definition`), literal(`an area dominated by grass vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}definition`), literal(`пространство земли, покрытое травянистой растительностью; сенокосное, пастбищное угодье`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}notation`), literal(`V.GRSLD`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}prefLabel`), literal(`grassland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}prefLabel`), literal(`gresslette`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}prefLabel`), literal(`grässlätt`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}prefLabel`), literal(`ливади`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRSLD`), namedNode(`${skos}prefLabel`), literal(`луг`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}definition`), literal(`a planting of coconut trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}definition`), literal(`большой участок земли, занятый кокосовыми деревьями`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}notation`), literal(`V.GRVC`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}prefLabel`), literal(`coconut grove`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}prefLabel`), literal(`kokoslund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}prefLabel`), literal(`kokospalmelund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}prefLabel`), literal(`кокосови насаждения`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVC`), namedNode(`${skos}prefLabel`), literal(`плантация кокосовых деревьев`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}definition`), literal(`a planting of olive trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}definition`), literal(`большой участок земли, занятый оливковыми деревьями`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}notation`), literal(`V.GRVO`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}prefLabel`), literal(`olive grove`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}prefLabel`), literal(`olivenlund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}prefLabel`), literal(`olivlund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}prefLabel`), literal(`маслинова плантация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVO`), namedNode(`${skos}prefLabel`), literal(`плантация оливковых деревьев`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}definition`), literal(`a planting of palm trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}definition`), literal(`небольшой лесной участок, состоящий из пальмовых деревьев`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}notation`), literal(`V.GRVP`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}prefLabel`), literal(`palm grove`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}prefLabel`), literal(`palmelund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}prefLabel`), literal(`palmlund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}prefLabel`), literal(`палмова плантация`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVP`), namedNode(`${skos}prefLabel`), literal(`пальмовая роща`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}definition`), literal(`a planting of pine trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}definition`), literal(`небольшой лесной участок, состоящий из сосен`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}notation`), literal(`V.GRVPN`), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}prefLabel`), literal(`furulund`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}prefLabel`), literal(`furulund`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}prefLabel`), literal(`pine grove`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}prefLabel`), literal(`иглолистни насаждения`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.GRVPN`), namedNode(`${skos}prefLabel`), literal(`сосновая роща`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}definition`), literal(`an upland moor or sandy area dominated by low shrubby vegetation including heather`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}definition`), literal(`вересковые пустоши, тип растительности, представленный вечнозелёными кустарниками и кустарничками, преимущественно семейства вересковых, имеющих жёсткие узкие листья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}notation`), literal(`V.HTH`), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}prefLabel`), literal(`heath`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}prefLabel`), literal(`hed`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}prefLabel`), literal(`hei`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}prefLabel`), literal(`верещатник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.HTH`), namedNode(`${skos}prefLabel`), literal(`пустош`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}definition`), literal(`a small, poorly drained area dominated by grassy vegetation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}definition`), literal(`небольшой луг, луг среди других угодий (лесных, пастбищных`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}notation`), literal(`V.MDW`), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}prefLabel`), literal(`eng`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}prefLabel`), literal(`meadow`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}prefLabel`), literal(`äng`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}prefLabel`), literal(`ливада`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.MDW`), namedNode(`${skos}prefLabel`), literal(`луговина`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}definition`), literal(`a planting of fruit or nut trees`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}definition`), literal(`участок земли, на котором выращивают фруктовые деревья`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}notation`), literal(`V.OCH`), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}prefLabel`), literal(`frukthage`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}prefLabel`), literal(`fruktträdgård(ar)`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}prefLabel`), literal(`orchard(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}prefLabel`), literal(`овощна градина(и)`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.OCH`), namedNode(`${skos}prefLabel`), literal(`фруктовый сад`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}definition`), literal(`an area of low trees, bushes, and shrubs stunted by some environmental limitation`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}definition`), literal(`густо разросшийся кустарник, массив трав, деревьев и т. п.`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}notation`), literal(`V.SCRB`), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}prefLabel`), literal(`buskterräng`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}prefLabel`), literal(`krattskog`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}prefLabel`), literal(`scrubland`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}prefLabel`), literal(`кустарниковая заросль`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.SCRB`), namedNode(`${skos}prefLabel`), literal(`храсти`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}definition`), literal(`a conspicuous tree used as a landmark`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}definition`), literal(`дерево (известное благодаря чему-л.), являющееся  достопримечательностью`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}notation`), literal(`V.TREE`), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}prefLabel`), literal(`tre`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}prefLabel`), literal(`tree(s)`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}prefLabel`), literal(`träd`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}prefLabel`), literal(`дерево`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.TREE`), namedNode(`${skos}prefLabel`), literal(`дървета`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}definition`), literal(`a marshy, treeless, high latitude plain, dominated by mosses, lichens, and low shrub vegetation under permafrost conditions`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}definition`), literal(`тип растительности высоких широт Северного полушария Земли, характеризующийся развитием мохового и лишайникового покровов, наличием низкорослых кустарников и т.п.; природная зона с таким типом растительности`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}notation`), literal(`V.TUND`), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}prefLabel`), literal(`tundra`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}prefLabel`), literal(`tundra`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}prefLabel`), literal(`tundra`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}prefLabel`), literal(`тундра`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.TUND`), namedNode(`${skos}prefLabel`), literal(`тундра`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}definition`), literal(`a planting of grapevines`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}definition`), literal(`участок, засаженный виноградом; виноградная плантация`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}notation`), literal(`V.VIN`), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}prefLabel`), literal(`vineyard`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}prefLabel`), literal(`vingård`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}prefLabel`), literal(`vingård`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}prefLabel`), literal(`виноградник`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.VIN`), namedNode(`${skos}prefLabel`), literal(`лозя`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${rdf}type`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}definition`), literal(`plantings of grapevines`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}definition`), literal(`виноградные плантации`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}inScheme`), namedNode(`${gn}V`), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}notation`), literal(`V.VINS`), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}prefLabel`), literal(`лозя`, 'bg'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}prefLabel`), literal(`vineyards`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}prefLabel`), literal(`vingårdar`, 'sv'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}prefLabel`), literal(`vingårder`, 'no'), namedNode(gn)),
        quad(namedNode(`${gn}V.VINS`), namedNode(`${skos}prefLabel`), literal(`виноградники`, 'ru'), namedNode(gn)),
        quad(namedNode(`${gn}WikipediaArticle`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(gn)),
        quad(namedNode(`${gn}WikipediaArticle`), namedNode(`${rdfs}comment`), literal(`A Wikipedia article`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}WikipediaArticle`), namedNode(`${rdfs}label`), literal(`Wikipedia Article`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}WikipediaArticle`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}Document`), namedNode(gn)),
        quad(namedNode(`${gn}alternateName`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}alternateName`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}alternateName`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}altLabel`), namedNode(gn)),
        quad(namedNode(`${gn}childrenFeatures`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}childrenFeatures`), namedNode(`${rdfs}comment`), literal(`Links to an RDF document containing the descriptions of children features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}childrenFeatures`), namedNode(`${rdfs}label`), literal(`children features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}childrenFeatures`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}childrenFeatures`), namedNode(`${rdfs}range`), namedNode(`${gn}RDFData`), namedNode(gn)),
        quad(namedNode(`${gn}colloquialName`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}colloquialName`), namedNode(`${rdfs}label`), literal(`colloquial name`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}colloquialName`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}alternateName`), namedNode(gn)),
        quad(namedNode(`${gn}countryCode`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}countryCode`), namedNode(`${rdfs}comment`), literal(`A two letters country code in the ISO 3166 list`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}countryCode`), namedNode(`${rdfs}comment`), literal(`The countryCode value for a Geoname Feature is equal to the countryCode value of the parentCountry value.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}countryCode`), namedNode(`${rdfs}label`), literal(`ISO country code`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}countryCode`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdfs}comment`), literal(`The main category of the feature, as defined in geonames taxonomy.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdfs}label`), literal(`feature class`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}type`), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${rdfs}range`), namedNode(`${gn}Class`), namedNode(gn)),
        quad(namedNode(`${gn}featureClass`), namedNode(`${owl}propertyChainAxiom`), blankNodes[12], namedNode(gn)),
        quad(blankNodes[12], namedNode(`${rdf}first`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[12], namedNode(`${rdf}rest`), blankNodes[13], namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdfs}comment`), literal(`Type of the feature, as defined in geonames taxonomy.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdfs}label`), literal(`feature code`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}type`), namedNode(gn)),
        quad(namedNode(`${gn}featureCode`), namedNode(`${rdfs}range`), namedNode(`${gn}Code`), namedNode(gn)),
        quad(namedNode(`${gn}geonamesID`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}geonamesID`), namedNode(`${skos}historyNote`), literal(`Added in version 3.1`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}geonamesID`), namedNode(`${rdfs}label`), literal(`geonames identifier`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}geonamesID`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}identifier`), namedNode(gn)),
        quad(namedNode(`${gn}historicalName`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}historicalName`), namedNode(`${rdfs}label`), literal(`historical name`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}historicalName`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}alternateName`), namedNode(gn)),
        quad(namedNode(`${gn}locatedIn`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}locatedIn`), namedNode(`${rdfs}comment`), literal(`Indicates that the subject resource is located in the object feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}locatedIn`), namedNode(`${rdfs}label`), literal(`located in`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}locatedIn`), namedNode(`${rdfs}range`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}locationMap`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}locationMap`), namedNode(`${rdfs}comment`), literal(`A geonames map centered on the feature.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}locationMap`), namedNode(`${rdfs}label`), literal(`map`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}locationMap`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}locationMap`), namedNode(`${rdfs}range`), namedNode(`${gn}Map`), namedNode(gn)),
        quad(namedNode(`${gn}name`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}name`), namedNode(`${rdfs}comment`), literal(`The main international name of a feature. The value has no xml:lang tag.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}name`), namedNode(`${rdfs}label`), literal(`name`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}name`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}nearby`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}nearby`), namedNode(`${rdfs}comment`), literal(`A feature close to the reference feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}nearby`), namedNode(`${rdfs}label`), literal(`nearby`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}nearby`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}nearby`), namedNode(`${rdfs}range`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}nearbyFeatures`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}nearbyFeatures`), namedNode(`${rdfs}comment`), literal(`Links to an RDF document containing the descriptions of nearby features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}nearbyFeatures`), namedNode(`${rdfs}label`), literal(`nearby features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}nearbyFeatures`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}nearbyFeatures`), namedNode(`${rdfs}range`), namedNode(`${gn}RDFData`), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdf}type`), namedNode(`${owl}SymmetricProperty`), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdfs}comment`), literal(`A feature sharing a common boarder with the reference feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdfs}label`), literal(`neighbour`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}neighbour`), namedNode(`${rdfs}range`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}neighbouringFeatures`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}neighbouringFeatures`), namedNode(`${rdfs}comment`), literal(`Links to an RDF document containing the descriptions of neighbouring features. Applies when the feature has definite boarders.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}neighbouringFeatures`), namedNode(`${rdfs}label`), literal(`neighbouring features`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}neighbouringFeatures`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}neighbouringFeatures`), namedNode(`${rdfs}range`), namedNode(`${gn}RDFData`), namedNode(gn)),
        quad(namedNode(`${gn}officialName`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}officialName`), namedNode(`${rdfs}comment`), literal(`A name in an official local language`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}officialName`), namedNode(`${rdfs}label`), literal(`official name`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}officialName`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}officialName`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}prefLabel`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM1`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM1`), namedNode(`${rdfs}label`), literal(`level 1 administrative parent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentADM1`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM1`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}parentFeature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM1`), namedNode(`${rdfs}range`), blankNodes[14], namedNode(gn)),
        quad(blankNodes[14], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[14], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[14], namedNode(`${owl}hasValue`), namedNode(`${gn}A.ADM1`), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdfs}comment`), literal(`A feature parent of the current one, in either administrative or physical subdivision.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdfs}label`), literal(`parent feature`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentFeature`), namedNode(`${rdfs}range`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM2`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM2`), namedNode(`${rdfs}label`), literal(`level 2 administrative parent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentADM2`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM2`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}parentFeature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM2`), namedNode(`${rdfs}range`), blankNodes[15], namedNode(gn)),
        quad(blankNodes[15], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[15], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[15], namedNode(`${owl}hasValue`), namedNode(`${gn}A.ADM2`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM3`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM3`), namedNode(`${rdfs}label`), literal(`level 3 administrative parent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentADM3`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM3`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}parentFeature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM3`), namedNode(`${rdfs}range`), blankNodes[16], namedNode(gn)),
        quad(blankNodes[16], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[16], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[16], namedNode(`${owl}hasValue`), namedNode(`${gn}A.ADM3`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM4`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM4`), namedNode(`${rdfs}label`), literal(`level 4 administrative parent`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentADM4`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM4`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}parentFeature`), namedNode(gn)),
        quad(namedNode(`${gn}parentADM4`), namedNode(`${rdfs}range`), blankNodes[17], namedNode(gn)),
        quad(blankNodes[17], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[17], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[17], namedNode(`${owl}hasValue`), namedNode(`${gn}A.ADM4`), namedNode(gn)),
        quad(namedNode(`${gn}parentCountry`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}parentCountry`), namedNode(`${rdfs}label`), literal(`parent country`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}parentCountry`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}parentCountry`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}parentFeature`), namedNode(gn)),
        quad(namedNode(`${gn}parentCountry`), namedNode(`${rdfs}range`), blankNodes[18], namedNode(gn)),
        quad(blankNodes[18], namedNode(`${rdf}type`), namedNode(`${owl}Restriction`), namedNode(gn)),
        quad(blankNodes[18], namedNode(`${owl}onProperty`), namedNode(`${gn}featureCode`), namedNode(gn)),
        quad(blankNodes[18], namedNode(`${owl}hasValue`), namedNode(`${gn}A.PCLI`), namedNode(gn)),
        quad(namedNode(`${gn}population`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}population`), namedNode(`${rdfs}label`), literal(`population`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}population`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}population`), namedNode(`${rdfs}range`), namedNode(`${xsd}integer`), namedNode(gn)),
        quad(namedNode(`${gn}postalCode`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}postalCode`), namedNode(`${rdfs}label`), literal(`postal code`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}postalCode`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}shortName`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(gn)),
        quad(namedNode(`${gn}shortName`), namedNode(`${rdfs}label`), literal(`short name`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}shortName`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}shortName`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${gn}alternateName`), namedNode(gn)),
        quad(namedNode(`${gn}wikipediaArticle`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(gn)),
        quad(namedNode(`${gn}wikipediaArticle`), namedNode(`${rdfs}comment`), literal(`A Wikipedia article of which subject is the resource.`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}wikipediaArticle`), namedNode(`${rdfs}label`), literal(`wikipedia article`, 'en'), namedNode(gn)),
        quad(namedNode(`${gn}wikipediaArticle`), namedNode(`${rdfs}domain`), namedNode(`${gn}Feature`), namedNode(gn)),
        quad(namedNode(`${gn}wikipediaArticle`), namedNode(`${rdfs}range`), namedNode(`${gn}WikipediaArticle`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${foaf}homepage`), namedNode(`${ns18}documentation.html`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${rdfs}comment`), literal(`Modifications from version 3.01 :
            Added : gn:GeonamesFeature, subclass of gn:Feature.
            Added : explicit property gn:geonamesID, mandatory and unique for each gn:GeonamesFeature instance.
            Deleted : owl:FunctionalProperty declarations for properties attached to gn:Feature, replaced by local cardinality restrictions on gn:GeonamesFeature
            The gn:Feature class and attached properties can therefore be used in the open world for features not necessarily identified in the Geonames data base, or with partial descriptions.
            Modified : Equivalent classes and superclasses of geonames:Feature in other vocabularies.
            Added : new feature codes for historical features.
            Improved metadata.
      `, 'en'), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${cc}license`), namedNode(ns20), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}contributor`), literal(`Erik Bolstad (norwegian and swedish translations)`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}contributor`), literal(`Roman Rachkov (bulgarian translation)`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}contributor`), literal(`Valery Hronusov (russian translation)`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}creator`), namedNode(`${ns1}bernard-vatant`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}description`), literal(`The Geonames ontologies provides elements of description for geographical features, in particular those defined in the geonames.org data base`, 'en'), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}issued`), literal(`2006-10-14`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}modified`), literal(`2012-10-29`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}publisher`), namedNode(`${ns7}GeoNames`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${dcterms}title`), literal(`The Geonames ontology`, 'en'), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${vann}preferredNamespacePrefix`), literal(`gn`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${vann}preferredNamespaceUri`), literal(`http://www.geonames.org/ontology#`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns18}ontology_v3.1.rdf`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${owl}priorVersion`), namedNode(`${ns18}ontology_v3.0.1.rdf`), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${owl}versionInfo`), literal(`Version 3.1 - 2012-10-29`, 'en'), namedNode(gn)),
        quad(namedNode(`${ns17}ontology`), namedNode(`${ns22}relatedDocumentation`), namedNode(`${ns18}documentation.html`), namedNode(gn)),
        quad(blankNodes[13], namedNode(`${rdf}first`), namedNode(`${skos}inScheme`), namedNode(gn)),
        quad(blankNodes[13], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(gn)),
    ];
};
