"use strict";
/* This file was automatically generated. Do not edit by hand. */
Object.defineProperty(exports, "__esModule", { value: true });
const { xkos, rdf, rdfs, owl, ns5, skos, ns7, cc, ns9, dc11, vann, xsd, ns13, ns14, dcterms, skosxl } = {
    'xkos': 'http://rdf-vocabulary.ddialliance.org/xkos#',
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'ns5': 'http://rdf-vocabulary.ddialliance.org/',
    'skos': 'http://www.w3.org/2004/02/skos/core#',
    'ns7': 'http://purl.org/vocommons/voaf#',
    'cc': 'http://creativecommons.org/ns#',
    'ns9': 'http://creativecommons.org/licenses/by/4.0/',
    'dc11': 'http://purl.org/dc/elements/1.1/',
    'vann': 'http://purl.org/vocab/vann/',
    'xsd': 'http://www.w3.org/2001/XMLSchema#',
    'ns13': 'http://www.w3.org/2004/02/skos/',
    'ns14': 'http://purl.org/iso25964/skos-thes#',
    'dcterms': 'http://purl.org/dc/terms/',
    'skosxl': 'http://www.w3.org/2008/05/skos-xl#'
};
exports.default = ({ blankNode, literal, namedNode, quad }) => {
    const blankNodes = [];
    for (let i = 0; i < 3; i++) {
        blankNodes.push(blankNode());
    }
    return [
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdfs}label`), literal(`Classification level`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdfs}label`), literal(`Niveau de nomenclature`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}ClassificationLevel`), namedNode(`${rdfs}subClassOf`), namedNode(`${skos}Collection`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${rdf}type`), namedNode(`${ns7}Vocabulary`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${rdfs}comment`), literal(`Cette ontologie est basée sur le travail commencé à Dagstuhl Schloss en septembre 2011`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${rdfs}comment`), literal(`This ontology is based on work initiated at Dagstuhl Schloss in September 2011`, 'en'), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${cc}license`), namedNode(ns9), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Daniel Gillman`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Jannik Jensen`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`R.T.A.M. Grim`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Richard Cyganiak`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Thomas Bosch`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Wendy L. Thomas`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}contributor`), literal(`Yves Jaques`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}creator`), literal(`Franck Cotton`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}rights`), literal(`Copyright © 2014-2019 The DDI Alliance`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}title`), literal(`XKOS : une extension de SKOS pour la représentation des nomenclatures statistiques`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${dc11}title`), literal(`XKOS: an SKOS extension for representing statistical classifications`, 'en'), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${vann}preferredNamespacePrefix`), literal(`xkos`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${vann}preferredNamespaceUri`), namedNode(xkos), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${ns7}classNumber`), literal(`4`, namedNode(`${xsd}integer`)), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${ns7}extends`), namedNode(`${ns13}core`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${ns7}propertyNumber`), literal(`40`, namedNode(`${xsd}integer`)), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${owl}versionInfo`), literal(`Version 1.0.1 - 2014-11-26`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${owl}versionInfo`), literal(`Version 1.0.2 - 2016-03-15`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${owl}versionInfo`), literal(`Version 1.0.3 - 2016-03-15`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${owl}versionInfo`), literal(`Version 1.1 - 2016-03-20`), namedNode(xkos)),
        quad(namedNode(`${ns5}xkos`), namedNode(`${owl}versionInfo`), literal(`Version 1.2 - 2019-05-01`), namedNode(xkos)),
        quad(namedNode(`${xkos}ConceptAssociation`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ConceptAssociation`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ConceptAssociation`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}ConceptAssociation`), namedNode(`${rdfs}label`), literal(`Association de concepts`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}ConceptAssociation`), namedNode(`${rdfs}label`), literal(`Concept association`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}Correspondence`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}Correspondence`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}Correspondence`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}Correspondence`), namedNode(`${rdfs}label`), literal(`Correspondance`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}Correspondence`), namedNode(`${rdfs}label`), literal(`Correspondence`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}ExplanatoryNote`), namedNode(`${rdf}type`), namedNode(`${rdfs}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ExplanatoryNote`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(xkos)),
        quad(namedNode(`${xkos}ExplanatoryNote`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}ExplanatoryNote`), namedNode(`${rdfs}label`), literal(`Explanatory note`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}ExplanatoryNote`), namedNode(`${rdfs}label`), literal(`Note explicative`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdfs}label`), literal(`additional content`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdfs}label`), literal(`contenu limite`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}additionalContentNote`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}inclusionNote`), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdfs}label`), literal(`inclusions`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdfs}label`), literal(`inclusions`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}inclusionNote`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}scopeNote`), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdfs}label`), literal(`after`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdfs}label`), literal(`après`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}after`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}temporal`), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdfs}label`), literal(`en relation temporelle`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdfs}label`), literal(`has temporal`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}temporal`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}sequential`), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdfs}label`), literal(`avant`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdfs}label`), literal(`before`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}before`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}temporal`), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdfs}label`), literal(`appartient à`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdfs}label`), literal(`belongs to`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}belongsTo`), namedNode(`${rdfs}domain`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdfs}label`), literal(`case law`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdfs}label`), literal(`jurisprudence`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}caseLaw`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}note`), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdfs}label`), literal(`en relation causale`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdfs}label`), literal(`has causal`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}causal`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}related`), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdfs}label`), literal(`caused by`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdfs}label`), literal(`est causé par`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}causedBy`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}causal`), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdfs}label`), literal(`causes`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdfs}label`), literal(`est la cause de`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}causes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}causal`), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdfs}label`), literal(`classified under`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdfs}label`), literal(`classé sous`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdfs}domain`), namedNode(`${rdfs}Resource`), namedNode(xkos)),
        quad(namedNode(`${xkos}classifiedUnder`), namedNode(`${rdfs}range`), namedNode(`${skos}Concept`), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdfs}label`), literal(`compare`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdfs}label`), literal(`compares`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdfs}domain`), namedNode(`${xkos}Correspondence`), namedNode(xkos)),
        quad(namedNode(`${xkos}compares`), namedNode(`${rdfs}range`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdfs}label`), literal(`contenu central`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdfs}label`), literal(`core content`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}coreContentNote`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}inclusionNote`), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdfs}label`), literal(`couvre`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdfs}label`), literal(`covers`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdfs}domain`), blankNodes[0], namedNode(xkos)),
        quad(namedNode(`${xkos}covers`), namedNode(`${rdfs}range`), namedNode(`${skos}Concept`), namedNode(xkos)),
        quad(blankNodes[0], namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(xkos)),
        quad(blankNodes[0], namedNode(`${owl}unionOf`), blankNodes[1], namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdfs}label`), literal(`couvre exhaustivement`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdfs}label`), literal(`covers exhaustively`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}coversExhaustively`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}covers`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdfs}label`), literal(`couvre sans recouvrement`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdfs}label`), literal(`covers mutually exclusively`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}coversMutuallyExclusively`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}covers`), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdfs}label`), literal(`depth`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdfs}label`), literal(`profondeur`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ClassificationLevel`), namedNode(xkos)),
        quad(namedNode(`${xkos}depth`), namedNode(`${rdfs}range`), namedNode(`${xsd}positiveInteger`), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdfs}label`), literal(`disjoint de`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdfs}label`), literal(`disjoint from`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}disjoint`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}related`), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdfs}label`), literal(`exclusions`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdfs}label`), literal(`exclusions`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}exclusionNote`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}scopeNote`), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdfs}label`), literal(`follows`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdfs}label`), literal(`suit`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdfs}domain`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}follows`), namedNode(`${rdfs}range`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdfs}label`), literal(`generalizes`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdfs}label`), literal(`généralise`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}narrower`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${owl}equivalentProperty`), namedNode(`${ns14}narrowerGeneric`), namedNode(xkos)),
        quad(namedNode(`${xkos}generalizes`), namedNode(`${owl}inverseOf`), namedNode(`${xkos}specializes`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdfs}label`), literal(`specializes`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdfs}label`), literal(`spécialise`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}broader`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${owl}equivalentProperty`), namedNode(`${ns14}broaderGeneric`), namedNode(xkos)),
        quad(namedNode(`${xkos}specializes`), namedNode(`${owl}inverseOf`), namedNode(`${xkos}generalizes`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdfs}label`), literal(`a pour partie`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdfs}label`), literal(`has part`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}narrower`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${owl}equivalentProperty`), namedNode(`${ns14}narrowerPartitive`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${owl}inverseOf`), namedNode(`${xkos}isPartOf`), namedNode(xkos)),
        quad(namedNode(`${xkos}hasPart`), namedNode(`${skos}exactMatch`), namedNode(`${dcterms}hasPart`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdfs}label`), literal(`est une partie de`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdfs}label`), literal(`is a part of`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}broader`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${owl}equivalentProperty`), namedNode(`${ns14}broaderPartitive`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${owl}inverseOf`), namedNode(`${xkos}hasPart`), namedNode(xkos)),
        quad(namedNode(`${xkos}isPartOf`), namedNode(`${skos}exactMatch`), namedNode(`${dcterms}isPartOf`), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdfs}label`), literal(`level list`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdfs}label`), literal(`liste des niveaux`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdfs}domain`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}levels`), namedNode(`${rdfs}range`), namedNode(`${rdf}List`), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdfs}label`), literal(`comprend`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdfs}label`), literal(`made of`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdfs}domain`), namedNode(`${xkos}Correspondence`), namedNode(xkos)),
        quad(namedNode(`${xkos}madeOf`), namedNode(`${rdfs}range`), namedNode(`${xkos}ConceptAssociation`), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdfs}label`), literal(`longueur maximale`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdfs}label`), literal(`maximum length`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdfs}domain`), namedNode(`${skosxl}Label`), namedNode(xkos)),
        quad(namedNode(`${xkos}maxLength`), namedNode(`${rdfs}range`), namedNode(`${xsd}positiveInteger`), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}label`), literal(`next`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}label`), literal(`suivant`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}succeeds`), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}comment`), literal(`immediate successor in the sequence`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}next`), namedNode(`${rdfs}comment`), literal(`successeur immédiat dans la séquence`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}label`), literal(`succeeds`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}label`), literal(`succède à`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}sequential`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}comment`), literal(`successeur dans la séquence`), namedNode(xkos)),
        quad(namedNode(`${xkos}succeeds`), namedNode(`${rdfs}comment`), literal(`successor in the sequence`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdfs}label`), literal(`code pattern`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdfs}label`), literal(`gabarit de code`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ClassificationLevel`), namedNode(xkos)),
        quad(namedNode(`${xkos}notationPattern`), namedNode(`${rdfs}range`), namedNode(`${xsd}string`), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdfs}label`), literal(`nombre de niveaux`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdfs}label`), literal(`number of levels`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdfs}domain`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}numberOfLevels`), namedNode(`${rdfs}range`), namedNode(`${xsd}positiveInteger`), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdfs}label`), literal(`organisé en`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdfs}label`), literal(`organized by`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ClassificationLevel`), namedNode(xkos)),
        quad(namedNode(`${xkos}organizedBy`), namedNode(`${rdfs}range`), namedNode(`${skos}Concept`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdf}type`), namedNode(`${owl}AnnotationProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}label`), literal(`plain text`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}label`), literal(`texte brut`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ExplanatoryNote`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}range`), namedNode(`${rdf}PlainLiteral`), namedNode(xkos)),
        quad(namedNode(`${xkos}plainText`), namedNode(`${rdfs}comment`), literal(`This property is expected to store plain text literals, without HTML or XML markup.`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}label`), literal(`precedes`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}label`), literal(`précède`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}sequential`), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}comment`), literal(`predecessor in the sequence`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}precedes`), namedNode(`${rdfs}comment`), literal(`prédécesseur dans la séquence`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdfs}label`), literal(`en relation séquentielle`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdfs}label`), literal(`has sequential`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}sequential`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${skos}related`), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}label`), literal(`previous`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}label`), literal(`précédent`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}precedes`), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}comment`), literal(`immediate predecessor in the sequence`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}previous`), namedNode(`${rdfs}comment`), literal(`prédécesseur immédiat dans la séquence`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdfs}label`), literal(`concept source`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdfs}label`), literal(`source concept`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ConceptAssociation`), namedNode(xkos)),
        quad(namedNode(`${xkos}sourceConcept`), namedNode(`${rdfs}range`), namedNode(`${skos}Concept`), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdfs}label`), literal(`remplace`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdfs}label`), literal(`supersedes`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${xkos}follows`), namedNode(xkos)),
        quad(namedNode(`${xkos}supersedes`), namedNode(`${skos}exactMatch`), namedNode(`${dcterms}replaces`), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdfs}label`), literal(`concept cible`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdfs}label`), literal(`target concept`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdfs}domain`), namedNode(`${xkos}ConceptAssociation`), namedNode(xkos)),
        quad(namedNode(`${xkos}targetConcept`), namedNode(`${rdfs}range`), namedNode(`${skos}Concept`), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdf}type`), namedNode(`${rdf}Property`), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdfs}isDefinedBy`), namedNode(`${ns5}xkos`), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdfs}label`), literal(`variant`, 'en'), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdfs}label`), literal(`variante`, 'fr'), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdfs}domain`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(namedNode(`${xkos}variant`), namedNode(`${rdfs}range`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(blankNodes[1], namedNode(`${rdf}first`), namedNode(`${skos}ConceptScheme`), namedNode(xkos)),
        quad(blankNodes[1], namedNode(`${rdf}rest`), blankNodes[2], namedNode(xkos)),
        quad(blankNodes[2], namedNode(`${rdf}first`), namedNode(`${xkos}ClassificationLevel`), namedNode(xkos)),
        quad(blankNodes[2], namedNode(`${rdf}rest`), namedNode(`${rdf}nil`), namedNode(xkos)),
    ];
};
