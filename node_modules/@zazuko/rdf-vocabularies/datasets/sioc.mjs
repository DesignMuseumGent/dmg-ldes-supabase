/* This file was automatically generated. Do not edit by hand. */
const {
  dcterms,
  rdf,
  owl,
  sioc,
  rdfs,
  ns6,
  foaf,
  ns8,
  xsd
} = {
  'dcterms': 'http://purl.org/dc/terms/',
  'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
  'owl': 'http://www.w3.org/2002/07/owl#',
  'sioc': 'http://rdfs.org/sioc/ns#',
  'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
  'ns6': 'http://rdfs.org/sioc/',
  'foaf': 'http://xmlns.com/foaf/0.1/',
  'ns8': 'http://www.w3.org/2004/03/trix/rdfg-1/',
  'xsd': 'http://www.w3.org/2001/XMLSchema#'
};
export default (({
  literal,
  namedNode,
  quad
}) => {
  return [quad(namedNode(`${dcterms}date`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${dcterms}description`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${dcterms}references`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${dcterms}subject`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${dcterms}title`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${rdf}type`), namedNode(`${owl}Ontology`), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${rdf}type`), namedNode(`${owl}Thing`), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${dcterms}description`), literal(`SIOC (Semantically-Interlinked Online Communities) is an ontology for describing the information in online communities. 
This information can be used to export information from online communities and to link them together. The scope of the application areas that SIOC can be used for includes (and is not limited to) weblogs, message boards, mailing lists and chat channels.`, 'en'), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${dcterms}title`), literal(`SIOC Core Ontology Namespace`, 'en'), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${rdfs}seeAlso`), namedNode(`${ns6}spec`), namedNode(sioc)), quad(namedNode(sioc), namedNode(`${owl}versionInfo`), literal(`Revision: 1.36`), namedNode(sioc)), quad(namedNode(`${ns6}spec`), namedNode(`${rdfs}label`), literal(`SIOC Core Ontology Specification`), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${rdfs}comment`), literal(`Community is a high-level concept that defines an online community and what it consists of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${rdfs}label`), literal(`Community`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}Community`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${rdfs}comment`), literal(`An Item is something which can be in a Container.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${rdfs}label`), literal(`Item`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}Item`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${rdfs}comment`), literal(`A Role is a function of a UserAccount within a scope of a particular Forum, Site, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${rdfs}label`), literal(`Role`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}Role`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${rdfs}comment`), literal(`A user account in an online community site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${rdfs}label`), literal(`User Account`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}UserAccount`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}OnlineAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${rdfs}comment`), literal(`An area in which content Items are contained.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${rdfs}label`), literal(`Container`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Container`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${rdfs}comment`), literal(`A set of UserAccounts whose owners have a common purpose or interest. Can be used for access control purposes.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${rdfs}label`), literal(`Usergroup`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}Usergroup`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}Forum`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Forum`), namedNode(`${rdfs}comment`), literal(`A discussion area on which Posts or entries are made.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Forum`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Forum`), namedNode(`${rdfs}label`), literal(`Forum`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Forum`), namedNode(`${rdfs}subClassOf`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${rdfs}comment`), literal(`A Space is a place where data resides, e.g. on a website, desktop, fileshare, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${rdfs}label`), literal(`Space`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}Space`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdfs}comment`), literal(`An article or message that can be posted to a Forum.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdfs}label`), literal(`Post`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdfs}subClassOf`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}Post`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}Document`), namedNode(sioc)), quad(namedNode(`${foaf}Document`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Site`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Site`), namedNode(`${rdfs}comment`), literal(`A Site can be the location of an online community or set of communities, with UserAccounts and Usergroups creating Items in a set of Containers. It can be thought of as a web-accessible data Space.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Site`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Site`), namedNode(`${rdfs}label`), literal(`Site`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Site`), namedNode(`${rdfs}subClassOf`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}Thread`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}Thread`), namedNode(`${rdfs}comment`), literal(`A container for a series of threaded discussion Posts or Items.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Thread`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}Thread`), namedNode(`${rdfs}label`), literal(`Thread`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}Thread`), namedNode(`${rdfs}subClassOf`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedClass`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}versionInfo`), literal(`This class is deprecated. Use sioc:UserAccount from the SIOC ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${rdfs}comment`), literal(`UserAccount is now preferred. This is a deprecated class for a User in an online community site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${rdfs}label`), literal(`User`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}disjointWith`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${rdfs}subClassOf`), namedNode(`${foaf}OnlineAccount`), namedNode(sioc)), quad(namedNode(`${sioc}User`), namedNode(`${owl}equivalentClass`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${foaf}OnlineAccount`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${sioc}about`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}about`), namedNode(`${rdfs}comment`), literal(`Specifies that this Item is about a particular resource, e.g. a Post describing a book, hotel, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}about`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}about`), namedNode(`${rdfs}label`), literal(`about`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}about`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdfs}comment`), literal(`Refers to the foaf:Agent or foaf:Person who owns this sioc:UserAccount.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdfs}label`), literal(`account of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${rdfs}range`), namedNode(`${foaf}Agent`), namedNode(sioc)), quad(namedNode(`${sioc}account_of`), namedNode(`${owl}inverseOf`), namedNode(`${foaf}account`), namedNode(sioc)), quad(namedNode(`${foaf}Agent`), namedNode(`${rdf}type`), namedNode(`${owl}Class`), namedNode(sioc)), quad(namedNode(`${foaf}account`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}addressed_to`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}addressed_to`), namedNode(`${rdfs}comment`), literal(`Refers to who (e.g. a UserAccount, e-mail address, etc.) a particular Item is addressed to.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}addressed_to`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}addressed_to`), namedNode(`${rdfs}label`), literal(`addressed to`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}addressed_to`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdfs}comment`), literal(`A Site that the UserAccount is an administrator of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdfs}label`), literal(`administrator of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Site`), namedNode(sioc)), quad(namedNode(`${sioc}administrator_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_administrator`), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdfs}comment`), literal(`A UserAccount that is an administrator of this Site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdfs}label`), literal(`has administrator`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Site`), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_administrator`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}administrator_of`), namedNode(sioc)), quad(namedNode(`${sioc}attachment`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}attachment`), namedNode(`${rdfs}comment`), literal(`The URI of a file attached to an Item.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}attachment`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}attachment`), namedNode(`${rdfs}label`), literal(`attachment`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}attachment`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdfs}comment`), literal(`An image or depiction used to represent this UserAccount.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdfs}label`), literal(`avatar`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}avatar`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${foaf}depiction`), namedNode(sioc)), quad(namedNode(`${foaf}depiction`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}comment`), literal(`An Item that this Container contains.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}label`), literal(`container of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_container`), namedNode(sioc)), quad(namedNode(`${sioc}container_of`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}hasPart`), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}comment`), literal(`The Container to which this Item belongs.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}label`), literal(`has container`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}range`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}container_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_container`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}partOf`), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdfs}comment`), literal(`The content of the Item in plain text format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdfs}label`), literal(`content`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}content`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use content:encoded from the RSS 1.0 content module instead.`), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdfs}comment`), literal(`The encoded content of the Post, contained in CDATA areas.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdfs}label`), literal(`content encoded`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}content_encoded`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:created from the Dublin Core ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdfs}comment`), literal(`When this was created, in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdfs}label`), literal(`created at`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}created_at`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${rdfs}comment`), literal(`A resource that the UserAccount is a creator of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${rdfs}label`), literal(`creator of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}creator_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_creator`), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${rdfs}comment`), literal(`This is the UserAccount that made this resource.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${rdfs}label`), literal(`has creator`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_creator`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}creator_of`), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdfs}comment`), literal(`When this was delivered, in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdfs}label`), literal(`delivered at`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}delivered_at`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use sioc:content or other methods (AtomOwl, content:encoded from RSS 1.0, etc.) instead.`), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdfs}comment`), literal(`The content of the Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdfs}label`), literal(`description`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}description`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${rdfs}comment`), literal(`The Item that this discussion is about.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${rdfs}label`), literal(`discussion of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}discussion_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_discussion`), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${rdfs}comment`), literal(`A discussion that is related to this Item. The discussion can be anything, for example, a sioc:Forum or sioc:Thread, a sioct:WikiArticle or simply a foaf:Document.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${rdfs}label`), literal(`has discussion`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}has_discussion`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}discussion_of`), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdfs}comment`), literal(`Links to a previous (older) revision of this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdfs}label`), literal(`earlier version`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}earlier_version`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}later_version`), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdf}type`), namedNode(`${owl}TransitiveProperty`), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdfs}comment`), literal(`Links to a later (newer) revision of this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdfs}label`), literal(`later version`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}later_version`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}earlier_version`), namedNode(sioc)), quad(namedNode(`${sioc}email`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}email`), namedNode(`${rdfs}comment`), literal(`An electronic mail address of the UserAccount.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}email`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}email`), namedNode(`${rdfs}label`), literal(`email`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}email`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdfs}comment`), literal(`An electronic mail address of the UserAccount, encoded using SHA1.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdfs}label`), literal(`email sha1`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}email_sha1`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdfs}comment`), literal(`This links Items to embedded statements, facts and structured content.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdfs}label`), literal(`embeds knowledge`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}embeds_knowledge`), namedNode(`${rdfs}range`), namedNode(`${ns8}Graph`), namedNode(sioc)), quad(namedNode(`${sioc}feed`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}feed`), namedNode(`${rdfs}comment`), literal(`A feed (e.g. RSS, Atom, etc.) pertaining to this resource (e.g. for a Forum, Site, UserAccount, etc.).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}feed`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}feed`), namedNode(`${rdfs}label`), literal(`feed`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use foaf:name or foaf:firstName from the FOAF vocabulary instead.`), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdfs}comment`), literal(`First (real) name of this User. Synonyms include given name or christian name.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdfs}label`), literal(`first name`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}first_name`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdfs}comment`), literal(`Indicates that one UserAccount follows another UserAccount (e.g. for microblog posts or other content item updates).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdfs}label`), literal(`follows`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}follows`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${rdfs}comment`), literal(`A UserAccount that has this Role.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${rdfs}label`), literal(`function of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}function_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_function`), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${rdfs}comment`), literal(`A Role that this UserAccount has.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${rdfs}label`), literal(`has function`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${rdfs}range`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}has_function`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}function_of`), namedNode(sioc)), quad(namedNode(`${sioc}generator`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}generator`), namedNode(`${rdfs}comment`), literal(`A URI for the application used to generate this Item.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}generator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}generator`), namedNode(`${rdfs}label`), literal(`generator`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}generator`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}group_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}group_of`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}group_of`), namedNode(`${owl}versionInfo`), literal(`This property has been renamed. Use sioc:usergroup_of instead.`), namedNode(sioc)), quad(namedNode(`${sioc}group_of`), namedNode(`${rdfs}label`), literal(`group of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}group_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_group`), namedNode(sioc)), quad(namedNode(`${sioc}has_group`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_group`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_group`), namedNode(`${owl}versionInfo`), literal(`This property has been renamed. Use sioc:has_usergroup instead.`), namedNode(sioc)), quad(namedNode(`${sioc}has_group`), namedNode(`${rdfs}label`), literal(`has group`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_group`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}group_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}comment`), literal(`The Site that hosts this Container.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}label`), literal(`has host`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}range`), namedNode(`${sioc}Site`), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}host_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_host`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}has_space`), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdfs}comment`), literal(`A data Space which this resource is a part of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdfs}label`), literal(`has space`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdfs}range`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}space_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_space`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}partOf`), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}comment`), literal(`A Container that is hosted on this Site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}label`), literal(`host of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Site`), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_host`), namedNode(sioc)), quad(namedNode(`${sioc}host_of`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}space_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdfs}comment`), literal(`A UserAccount that is a member of this Usergroup.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdfs}label`), literal(`has member`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_member`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}member_of`), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdfs}comment`), literal(`A Usergroup that this UserAccount is a member of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdfs}label`), literal(`member of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}member_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_member`), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdfs}comment`), literal(`A UserAccount that is a moderator of this Forum.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdfs}label`), literal(`has moderator`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Forum`), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_moderator`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}moderator_of`), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdfs}comment`), literal(`A Forum that a UserAccount is a moderator of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdfs}label`), literal(`moderator of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Forum`), namedNode(sioc)), quad(namedNode(`${sioc}moderator_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_moderator`), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${rdfs}comment`), literal(`A UserAccount that modified this resource (e.g. Item, Container, Space).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${rdfs}label`), literal(`has modifier`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_modifier`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}modifier_of`), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${rdfs}comment`), literal(`A resource that this UserAccount has modified.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${rdfs}label`), literal(`modifier of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}modifier_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_modifier`), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${rdfs}comment`), literal(`A UserAccount that this resource is owned by.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${rdfs}label`), literal(`has owner`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_owner`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}owner_of`), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${rdfs}comment`), literal(`A resource owned by a particular UserAccount, for example, a weblog or image gallery.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${rdfs}label`), literal(`owner of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}owner_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_owner`), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}comment`), literal(`A Container or Forum that this Container or Forum is a child of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}label`), literal(`has parent`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}range`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}parent_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_parent`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}partOf`), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}comment`), literal(`A child Container or Forum that this Container or Forum is a parent of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}label`), literal(`parent of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_parent`), namedNode(sioc)), quad(namedNode(`${sioc}parent_of`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}hasPart`), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:hasPart from the Dublin Core ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${rdfs}comment`), literal(`An resource that is a part of this subject.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${rdfs}label`), literal(`has part`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_part`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}part_of`), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:isPartOf from the Dublin Core ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${rdfs}comment`), literal(`A resource that the subject is a part of.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${rdfs}label`), literal(`part of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}part_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_part`), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}comment`), literal(`Points to an Item or Post that is a reply or response to this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}label`), literal(`has reply`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}reply_of`), namedNode(sioc)), quad(namedNode(`${sioc}has_reply`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}related_to`), namedNode(sioc)), quad(namedNode(`${sioc}related_to`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}related_to`), namedNode(`${rdfs}comment`), literal(`Related resources for this resource, e.g. for Posts, perhaps determined implicitly from topics or references.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}related_to`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}related_to`), namedNode(`${rdfs}label`), literal(`related to`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}comment`), literal(`Links to an Item or Post which this Item or Post is a reply to.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}label`), literal(`reply of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_reply`), namedNode(sioc)), quad(namedNode(`${sioc}reply_of`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}related_to`), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${rdfs}comment`), literal(`A resource that this Role applies to.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${rdfs}label`), literal(`has scope`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}has_scope`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}scope_of`), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${rdfs}comment`), literal(`A Role that has a scope of this resource.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${rdfs}label`), literal(`scope of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Role`), namedNode(sioc)), quad(namedNode(`${sioc}scope_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_scope`), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdfs}comment`), literal(`A resource which belongs to this data Space.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdfs}label`), literal(`space of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_space`), namedNode(sioc)), quad(namedNode(`${sioc}space_of`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}hasPart`), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}seeAlso`), namedNode(`${sioc}feed`), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}comment`), literal(`A UserAccount that is subscribed to this Container.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}label`), literal(`has subscriber`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}has_subscriber`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}subscriber_of`), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}seeAlso`), namedNode(`${sioc}feed`), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}comment`), literal(`A Container that a UserAccount is subscribed to.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}label`), literal(`subscriber of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}subscriber_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_subscriber`), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdfs}comment`), literal(`Points to a Usergroup that has certain access to this Space.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdfs}label`), literal(`has usergroup`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${rdfs}range`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}has_usergroup`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}usergroup_of`), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdfs}comment`), literal(`A Space that the Usergroup has access to.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdfs}label`), literal(`usergroup of`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${rdfs}range`), namedNode(`${sioc}Space`), namedNode(sioc)), quad(namedNode(`${sioc}usergroup_of`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}has_usergroup`), namedNode(sioc)), quad(namedNode(`${sioc}id`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}id`), namedNode(`${rdfs}comment`), literal(`An identifier of a SIOC concept instance. For example, a user ID. Must be unique for instances of each type of SIOC concept within the same site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}id`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}id`), namedNode(`${rdfs}label`), literal(`id`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}id`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}ip_address`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}ip_address`), namedNode(`${rdfs}comment`), literal(`The IP address used when creating this Item, UserAccount, etc. This can be associated with a creator. Some wiki articles list the IP addresses for the creator or modifiers when the usernames are absent.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}ip_address`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}ip_address`), namedNode(`${rdfs}label`), literal(`ip address`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}ip_address`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdfs}comment`), literal(`The date and time of the last activity associated with a SIOC concept instance, and expressed in ISO 8601 format. This could be due to a reply Post or Comment, a modification to an Item, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdfs}label`), literal(`last activity date`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}last_activity_date`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}date`), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}comment`), literal(`The date and time of the last Post (or Item) in a Forum (or a Container), in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}label`), literal(`last item date`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}last_item_date`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}date`), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use foaf:name or foaf:surname from the FOAF vocabulary instead.`), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdfs}comment`), literal(`Last (real) name of this user. Synonyms include surname or family name.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdfs}label`), literal(`last name`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdfs}domain`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}last_name`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdfs}comment`), literal(`The date and time of the last reply Post or Comment, which could be associated with a starter Item or Post or with a Thread, and expressed in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdfs}label`), literal(`last reply date`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}last_reply_date`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}date`), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdfs}comment`), literal(`Links to the latest revision of this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdfs}label`), literal(`latest version`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}latest_version`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}likes`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}likes`), namedNode(`${rdfs}comment`), literal(`Used to indicate some form of endorsement by a UserAccount or Agent of an Item, Container, Space, UserAccount, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}likes`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}likes`), namedNode(`${rdfs}label`), literal(`likes`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}link`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}link`), namedNode(`${rdfs}comment`), literal(`A URI of a document which contains this SIOC object.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}link`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}link`), namedNode(`${rdfs}label`), literal(`link`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}links_to`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}links_to`), namedNode(`${rdfs}comment`), literal(`Links extracted from hyperlinks within a SIOC concept, e.g. Post or Site.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}links_to`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}links_to`), namedNode(`${rdfs}label`), literal(`links to`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}links_to`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}references`), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdfs}comment`), literal(`Refers to a UserAccount that a particular Item mentions.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdfs}label`), literal(`mentions`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}mentions`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:modified from the Dublin Core ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdfs}comment`), literal(`When this was modified, in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdfs}label`), literal(`modified at`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}modified_at`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}name`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}name`), namedNode(`${rdfs}comment`), literal(`The name of a SIOC concept instance, e.g. a username for a UserAccount, group name for a Usergroup, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}name`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}name`), namedNode(`${rdfs}label`), literal(`name`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}name`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdfs}comment`), literal(`Next Item or Post in a given Container sorted by date.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdfs}label`), literal(`next by date`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}next_by_date`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}previous_by_date`), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdfs}comment`), literal(`Previous Item or Post in a given Container sorted by date.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdfs}label`), literal(`previous by date`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}previous_by_date`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}next_by_date`), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}comment`), literal(`Links to the next revision of this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}label`), literal(`next version`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}previous_version`), namedNode(sioc)), quad(namedNode(`${sioc}next_version`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}later_version`), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}comment`), literal(`Links to the previous revision of this Item or Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}label`), literal(`previous version`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${owl}inverseOf`), namedNode(`${sioc}next_version`), namedNode(sioc)), quad(namedNode(`${sioc}previous_version`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${sioc}earlier_version`), namedNode(sioc)), quad(namedNode(`${sioc}note`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}note`), namedNode(`${rdfs}comment`), literal(`A note associated with this resource, for example, if it has been edited by a UserAccount.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}note`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}note`), namedNode(`${rdfs}label`), literal(`note`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}note`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}num_authors`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}num_authors`), namedNode(`${rdfs}comment`), literal(`The number of unique authors (UserAccounts and unregistered posters) who have contributed to this Item, Thread, Post, etc.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_authors`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}num_authors`), namedNode(`${rdfs}label`), literal(`num authors`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_authors`), namedNode(`${rdfs}range`), namedNode(`${xsd}nonNegativeInteger`), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdfs}comment`), literal(`The number of Posts (or Items) in a Forum (or a Container).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdfs}label`), literal(`num items`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Container`), namedNode(sioc)), quad(namedNode(`${sioc}num_items`), namedNode(`${rdfs}range`), namedNode(`${xsd}nonNegativeInteger`), namedNode(sioc)), quad(namedNode(`${sioc}num_replies`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}num_replies`), namedNode(`${rdfs}comment`), literal(`The number of replies that this Item, Thread, Post, etc. has. Useful for when the reply structure is absent.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_replies`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}num_replies`), namedNode(`${rdfs}label`), literal(`num replies`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_replies`), namedNode(`${rdfs}range`), namedNode(`${xsd}nonNegativeInteger`), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdfs}comment`), literal(`The number of Threads (AKA discussion topics) in a Forum.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdfs}label`), literal(`num threads`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Forum`), namedNode(sioc)), quad(namedNode(`${sioc}num_threads`), namedNode(`${rdfs}range`), namedNode(`${xsd}nonNegativeInteger`), namedNode(sioc)), quad(namedNode(`${sioc}num_views`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}num_views`), namedNode(`${rdfs}comment`), literal(`The number of times this Item, Thread, UserAccount profile, etc. has been viewed.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_views`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}num_views`), namedNode(`${rdfs}label`), literal(`num views`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}num_views`), namedNode(`${rdfs}range`), namedNode(`${xsd}nonNegativeInteger`), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdfs}comment`), literal(`When this was read, in ISO 8601 format.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdfs}label`), literal(`read at`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}read_at`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${owl}versionInfo`), literal(`Renamed to sioc:links_to.`), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdfs}comment`), literal(`Links either created explicitly or extracted implicitly on the HTML level from the Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdfs}label`), literal(`reference`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}reference`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}respond_to`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}respond_to`), namedNode(`${rdfs}comment`), literal(`For the reply-to address set in email messages, IMs, etc. The property name was chosen to avoid confusion with has_reply/reply_of (the reply graph).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}respond_to`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}respond_to`), namedNode(`${rdfs}label`), literal(`respond to`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}respond_to`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}seeAlso`), namedNode(`${sioc}sibling`), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}comment`), literal(`For shared Items where there is a certain creator_of and an intermediary who shares or forwards it (e.g. as a sibling Item).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}label`), literal(`shared by`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}shared_by`), namedNode(`${rdfs}range`), namedNode(`${sioc}UserAccount`), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdf}type`), namedNode(`${owl}SymmetricProperty`), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdfs}comment`), literal(`An Item may have a sibling or a twin that exists in a different Container, but the siblings may differ in some small way (for example, language, category, etc.). The sibling of this Item should be self-describing (that is, it should contain all available information).`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdfs}label`), literal(`sibling`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}sibling`), namedNode(`${rdfs}range`), namedNode(`${sioc}Item`), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:subject from the Dublin Core ontology for text keywords and sioc:topic if the subject can be represented by a URI instead.`), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdfs}comment`), literal(`Keyword(s) describing subject of the Post.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdfs}label`), literal(`subject`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}subject`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdf}type`), namedNode(`${owl}DatatypeProperty`), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdf}type`), namedNode(`${owl}DeprecatedProperty`), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${owl}versionInfo`), literal(`This property is deprecated. Use dcterms:title from the Dublin Core ontology instead.`), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdfs}comment`), literal(`This is the title (subject line) of the Post. Note that for a Post within a threaded discussion that has no parents, it would detail the topic thread.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdfs}label`), literal(`title`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdfs}domain`), namedNode(`${sioc}Post`), namedNode(sioc)), quad(namedNode(`${sioc}title`), namedNode(`${rdfs}range`), namedNode(`${rdfs}Literal`), namedNode(sioc)), quad(namedNode(`${sioc}topic`), namedNode(`${rdf}type`), namedNode(`${owl}ObjectProperty`), namedNode(sioc)), quad(namedNode(`${sioc}topic`), namedNode(`${rdfs}comment`), literal(`A topic of interest, linking to the appropriate URI, e.g. in the Open Directory Project or of a SKOS category.`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}topic`), namedNode(`${rdfs}isDefinedBy`), namedNode(sioc), namedNode(sioc)), quad(namedNode(`${sioc}topic`), namedNode(`${rdfs}label`), literal(`topic`, 'en'), namedNode(sioc)), quad(namedNode(`${sioc}topic`), namedNode(`${rdfs}subPropertyOf`), namedNode(`${dcterms}subject`), namedNode(sioc))];
});