/// <reference types="node" />
import rdf from 'rdf-ext';
import { Stream } from 'rdf-js';
import { Readable } from 'stream';
import prefixes from './prefixes';
import DatasetExt from 'rdf-ext/lib/Dataset';
export declare type Datasets = Record<keyof typeof prefixes, DatasetExt>;
interface VocabulariesOptions {
    only?: (keyof typeof prefixes)[] | null;
    factory?: typeof rdf;
}
interface VocabulariesDatasetOptions extends VocabulariesOptions {
    stream?: false;
}
interface VocabulariesStreamOptions extends VocabulariesOptions {
    stream: true;
}
export declare function vocabularies(options?: VocabulariesDatasetOptions): Promise<Datasets>;
export declare function vocabularies(options: VocabulariesStreamOptions): Promise<Stream & Readable>;
interface LoadFileOptions {
    customSelection?: boolean;
    factory: typeof rdf;
}
export declare function loadFile(prefix: keyof typeof prefixes, { customSelection, factory }: LoadFileOptions): Promise<void | DatasetExt>;
export {};
//# sourceMappingURL=vocabularies.d.ts.map