"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const prefixes_1 = __importDefault(require("./prefixes"));
/**
 * Converts an IRI to a prefixed node using a set of prefixes. By default, the
 * built-in prefixes are used. When the `extraPrefixes` argument is given, uses these prefixes
 * first, and then tries the built-in set
 *
 * @param iri
 * @param [extraPrefixes]
 */
function shrink(iri, extraPrefixes = {}) {
    const prefixes = { ...prefixes_1.default, ...extraPrefixes };
    const candidates = Array.from(Object.entries(prefixes)).filter(([, baseIRI]) => iri.startsWith(baseIRI));
    if (candidates.length) {
        candidates.sort(([, iri1], [, iri2]) => iri2.length - iri1.length);
        const found = candidates[0];
        return iri.replace(new RegExp(`^${found[1]}`), `${found[0]}:`);
    }
    return '';
}
exports.shrink = shrink;
