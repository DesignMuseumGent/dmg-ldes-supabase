import { ActorRdfFilterObject, IActionRdfFilterObject, IActorRdfFilterObjectOutput } from "@treecg/bus-rdf-filter-object";
import { IActorArgs, IActorTest } from '@comunica/core';
import { MediatorRdfFrame } from "@treecg/bus-rdf-frame";
import { MediatorRdfParseHandle } from "@comunica/bus-rdf-parse";
/**
 * An RDF Filter Object actor that extracts quads related to a specific object using JSON-LD framing.
 */
export declare class ActorRdfFilterObjectWithFraming extends ActorRdfFilterObject {
    readonly mediatorRdfParseHandle: MediatorRdfParseHandle;
    readonly mediatorRdfFrame: MediatorRdfFrame;
    constructor(args: IActorArgs<IActionRdfFilterObject, IActorTest, IActorRdfFilterObjectOutput>);
    test(action: IActionRdfFilterObject): Promise<IActorTest>;
    run(action: IActionRdfFilterObject): Promise<IActorRdfFilterObjectOutput>;
}
export interface IActorRdfFilterObjectWithFramingArgs extends IActorArgs<IActionRdfFilterObject, IActorTest, IActorRdfFilterObjectOutput> {
    mediatorRdfParseHandle: MediatorRdfParseHandle;
    mediatorRdfFrame: MediatorRdfFrame;
}
