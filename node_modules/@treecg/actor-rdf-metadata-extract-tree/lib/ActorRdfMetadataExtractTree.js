"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorRdfMetadataExtractTree = void 0;
const bus_rdf_metadata_extract_1 = require("@comunica/bus-rdf-metadata-extract");
const tree_metadata_extraction_1 = require("@treecg/tree-metadata-extraction");
/**
 * A comunica actor to extract the tree metadata from RDF sources
 */
class ActorRdfMetadataExtractTree extends bus_rdf_metadata_extract_1.ActorRdfMetadataExtract {
    constructor(args) {
        super(args);
    }
    async test(action) {
        return true;
    }
    async run(action) {
        const quadArray = new Promise((resolve, reject) => {
            const quads = [];
            action.metadata.on('error', reject);
            action.metadata.on('data', quad => {
                quads.push(quad);
            });
            action.metadata.on('end', () => {
                resolve(quads);
            });
        });
        const extractedMetadata = await (0, tree_metadata_extraction_1.extractMetadata)(await quadArray);
        const metadata = { treeMetadata: extractedMetadata };
        return { metadata };
    }
}
exports.ActorRdfMetadataExtractTree = ActorRdfMetadataExtractTree;
//# sourceMappingURL=ActorRdfMetadataExtractTree.js.map