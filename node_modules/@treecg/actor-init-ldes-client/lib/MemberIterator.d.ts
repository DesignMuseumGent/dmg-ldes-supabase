import { Quad } from "@rdfjs/types";
import { AsyncIterator } from "asynciterator";
import RateLimiter from "./RateLimiter";
export default class MemberIterator extends AsyncIterator<Quad> {
    private waiting;
    private currentPage;
    private currentIndex;
    private fetchedPages;
    private pageQueue;
    private rateLimiter;
    constructor(beginUrl: string, rateLimiter: RateLimiter);
    read(): Quad | null;
    protected fetchPage(url: string): Promise<void>;
    protected fetchPageRetry(url: string, attempts?: number): Promise<Quad[]>;
    /**
     * Decide which links to follow to complete the member
     * Currently follows hydra:next links
     * But should check the returned quads to a given shape definition
     * @param quads all new quads
     */
    protected followLinks(quads: Quad[]): null;
}
