{"version":3,"file":"DirectiveNodeHandlerPlural.js","sourceRoot":"","sources":["DirectiveNodeHandlerPlural.ts"],"names":[],"mappings":";;;AAAA,2DAAwE;AAGxE,+EAIuC;AAEvC;;GAEG;AACH,MAAa,0BAA2B,SAAQ,yDAA2B;IAEzE,YAAY,IAAU,EAAE,QAA0B;QAChD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,MAAM,CAAC,gBAAmC,EAAE,cAA+B;QAChF,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE;YACxD,cAAc,CAAC,gBAAgB,GAAG,kCAAgB,CAAC,MAAM,CAAC;SAC3D;QACD,oGAAoG;QACpG,OAAO,cAAc,CAAC,oBAAqB,CACxC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;QAChF,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AAfD,gEAeC","sourcesContent":["import {IConvertContext, SingularizeState} from \"../../IConvertContext\";\nimport {IConvertSettings} from \"../../IConvertSettings\";\nimport {Util} from \"../../Util\";\nimport {\n  DirectiveNodeHandlerAdapter,\n  IDirectiveContext,\n  IDirectiveNodeHandlerOutput\n} from \"./DirectiveNodeHandlerAdapter\";\n\n/**\n * A handler for plural directives.\n */\nexport class DirectiveNodeHandlerPlural extends DirectiveNodeHandlerAdapter {\n\n  constructor(util: Util, settings: IConvertSettings) {\n    super('plural', util, settings);\n  }\n\n  public handle(directiveContext: IDirectiveContext, convertContext: IConvertContext): IDirectiveNodeHandlerOutput {\n    if (this.isDirectiveScopeAll(directiveContext.directive)) {\n      convertContext.singularizeState = SingularizeState.PLURAL;\n    }\n    // Delete the existing entry, as this may have already been set before if we were in a single scope.\n    delete convertContext.singularizeVariables!\n      [this.util.nameToVariable(directiveContext.fieldLabel, convertContext).value];\n    return {};\n  }\n}\n"]}