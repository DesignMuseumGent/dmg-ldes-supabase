{"version":3,"file":"NodeValueHandlerEnum.js","sourceRoot":"","sources":["NodeValueHandlerEnum.ts"],"names":[],"mappings":";;;AAIA,uEAA2F;AAE3F;;GAEG;AACH,MAAa,oBAAqB,SAAQ,iDAAsC;IAE9E,YAAY,IAAU,EAAE,QAA0B;QAChD,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,SAAwB,EAAE,SAAiB,EAC3C,cAA+B;QAC3C,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,cAAc,CAAC,OAAO,CAAC,CAAE,EAAE,CAAC;IAC3F,CAAC;CAEF;AAXD,oDAWC","sourcesContent":["import {EnumValueNode} from \"graphql/language\";\nimport {IConvertContext} from \"../../IConvertContext\";\nimport {IConvertSettings} from \"../../IConvertSettings\";\nimport {Util} from \"../../Util\";\nimport {IValueNodeHandlerOutput, NodeValueHandlerAdapter} from \"./NodeValueHandlerAdapter\";\n\n/**\n * Converts GraphQL enums to RDF named nodes.\n */\nexport class NodeValueHandlerEnum extends NodeValueHandlerAdapter<EnumValueNode> {\n\n  constructor(util: Util, settings: IConvertSettings) {\n    super('EnumValue', util, settings);\n  }\n\n  public handle(valueNode: EnumValueNode, fieldName: string,\n                convertContext: IConvertContext): IValueNodeHandlerOutput {\n    return { terms: [this.util.valueToNamedNode(valueNode.value, convertContext.context) ] };\n  }\n\n}\n"]}