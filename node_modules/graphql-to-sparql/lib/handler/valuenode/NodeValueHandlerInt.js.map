{"version":3,"file":"NodeValueHandlerInt.js","sourceRoot":"","sources":["NodeValueHandlerInt.ts"],"names":[],"mappings":";;;AAIA,uEAA2F;AAG3F;;GAEG;AACH,MAAa,mBAAoB,SAAQ,iDAAqC;IAI5E,YAAY,IAAU,EAAE,QAA0B;QAChD,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0CAA0C,CAAC,CAAC;IAC9F,CAAC;IAEM,MAAM,CAAC,SAAuB,EAAE,SAAiB,EAC1C,cAA+B;QAC3C,OAAO,EAAE,KAAK,EAAE,CAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAE,EAAE,CAAC;IACtF,CAAC;CAEF;AAdD,kDAcC","sourcesContent":["import {IntValueNode} from \"graphql/language\";\nimport {IConvertContext} from \"../../IConvertContext\";\nimport {IConvertSettings} from \"../../IConvertSettings\";\nimport {Util} from \"../../Util\";\nimport {IValueNodeHandlerOutput, NodeValueHandlerAdapter} from \"./NodeValueHandlerAdapter\";\nimport * as RDF from \"@rdfjs/types\";\n\n/**\n * Converts GraphQL ints to RDF integer terms.\n */\nexport class NodeValueHandlerInt extends NodeValueHandlerAdapter<IntValueNode> {\n\n  protected readonly datatype: RDF.NamedNode;\n\n  constructor(util: Util, settings: IConvertSettings) {\n    super('IntValue', util, settings);\n    this.datatype = this.util.dataFactory.namedNode('http://www.w3.org/2001/XMLSchema#integer');\n  }\n\n  public handle(valueNode: IntValueNode, fieldName: string,\n                convertContext: IConvertContext): IValueNodeHandlerOutput {\n    return { terms: [ this.util.dataFactory.literal(valueNode.value, this.datatype) ] };\n  }\n\n}\n"]}