import xsd from "./xsd.mjs";
const echarRegEx = new RegExp('["\\\\\n\r]'); // eslint-disable-line no-control-regex, prefer-regex-literals

const echarRegExAll = new RegExp('["\\\\\n\r]', 'g'); // eslint-disable-line no-control-regex, prefer-regex-literals

const echarReplacement = {
  '"': '\\"',
  '\\': '\\\\',
  '\n': '\\n',
  '\r': '\\r'
};

function echarReplacer(char) {
  return echarReplacement[char];
}

function escapeValue(value) {
  if (echarRegEx.test(value)) {
    return value.replace(echarRegExAll, echarReplacer);
  }

  return value;
}

export function blankNode(term) {
  return `_:${term.value}`;
}
export function namedNode(term) {
  return `<${term.value}>`;
}
export function literalValue(term) {
  return `"${escapeValue(term.value)}"`;
}
export function literal(term) {
  const value = literalValue(term);

  if (term.language) {
    return `${value}@${term.language}`;
  }

  if (term.datatype && !term.datatype.equals(xsd.string)) {
    return `${value}^^${namedNode(term.datatype)}`;
  }

  return value;
}