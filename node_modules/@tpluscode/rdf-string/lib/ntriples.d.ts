import { BlankNode, DatasetCore, DefaultGraph, Literal, NamedNode, Quad, Term } from 'rdf-js';
import { NQuadsStrategy } from './nquads';
import { Value } from './value';
import { PartialString, TemplateResult } from './TemplateResult';
interface NTriplesOptions {
    graph: NamedNode | DefaultGraph;
    sortGraphs: false;
}
export declare type NTriplesTemplateResult = TemplateResult<NTriplesOptions>;
export declare type NTriplesValue<T extends Term = Term> = Value<NTriplesTemplateResult, T>;
export declare class NTriplesStrategy extends NQuadsStrategy<NTriplesOptions> {
    evaluateDataset(dataset: DatasetCore, options: NTriplesOptions): PartialString;
    evaluateQuad(quad: Quad, options: NTriplesOptions): PartialString;
}
export declare const ntriples: (strings: TemplateStringsArray, ...values: Value<NTriplesTemplateResult, NamedNode | Literal | BlankNode>[]) => TemplateResult<NTriplesOptions>;
export {};
//# sourceMappingURL=ntriples.d.ts.map