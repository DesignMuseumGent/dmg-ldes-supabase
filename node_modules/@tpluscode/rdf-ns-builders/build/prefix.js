"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPrefixFile = void 0;
const ts_morph_1 = require("ts-morph");
const safe_identifier_1 = require("safe-identifier");
const interface_1 = require("./interface");
const strings_1 = require("./strings");
async function createPrefixFile(sourceFile, prefix, namespace, vocabs) {
    const interfaceName = (0, safe_identifier_1.identifier)((0, strings_1.toProperCase)(prefix));
    sourceFile.addImportDeclaration({
        defaultImport: 'namespace',
        namedImports: [{
                name: 'NamespaceBuilder',
            }],
        moduleSpecifier: '@rdf-esm/namespace',
    });
    sourceFile.addImportDeclaration({
        namedImports: [{
                name: 'NamedNode',
            }],
        moduleSpecifier: '@rdfjs/types',
    });
    const prefixInterface = sourceFile.addInterface({
        name: interfaceName,
    });
    prefixInterface.addMember({
        name: "''",
        kind: ts_morph_1.StructureKind.PropertySignature,
        type: `NamedNode<'${namespace}'>`,
    });
    prefixInterface.addMembers(await (0, interface_1.createMembers)(prefix, vocabs));
    sourceFile.addVariableStatement({
        declarations: [{
                name: 'builder',
                initializer: `namespace("${namespace}")`,
                trailingTrivia: ' as any',
            }],
        declarationKind: ts_morph_1.VariableDeclarationKind.Const,
    });
    sourceFile.addVariableStatement({
        declarations: [{
                name: 'strict',
                initializer: 'builder',
                trailingTrivia: ` as NamespaceBuilder<keyof ${interfaceName}> & ${interfaceName}`,
            }],
        declarationKind: ts_morph_1.VariableDeclarationKind.Const,
        isExported: true,
    });
    sourceFile.addVariableStatement({
        declarations: [{
                name: 'loose',
                initializer: 'builder',
                trailingTrivia: ` as NamespaceBuilder & ${interfaceName}`,
            }],
        declarationKind: ts_morph_1.VariableDeclarationKind.Const,
        isExported: true,
    });
}
exports.createPrefixFile = createPrefixFile;
