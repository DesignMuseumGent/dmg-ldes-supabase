"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorInitQueryBase = void 0;
const bus_init_1 = require("@comunica/bus-init");
/**
 * A browser-safe comunica Query Init Actor.
 */
class ActorInitQueryBase extends bus_init_1.ActorInit {
    /**
     * Create new ActorInitQueryBase object.
     * @param args.contextKeyShortcutsExtensions Array of `contextKeyShortcuts` that are merged
     *   with the `contextKeyShortcuts` field. This allows adding shortcuts to the defaults.
     * @throws When duplicate keys are present in `args.contextKeyShortcuts`
     *  and `args.contextKeyShortcutsExtensions`.
     */
    constructor(args) {
        // Add additional contextKeyShortcuts.
        args.contextKeyShortcutsExtensions?.forEach(extensionShortcuts => {
            // Throw, if there are duplicate keys that are to be added to `contextKeyShortcuts`.
            if (Object.keys(args.contextKeyShortcuts).some(key => Object.keys(extensionShortcuts).includes(key))) {
                throw new Error('Duplicate keys found while adding `contextKeyShortcutsExtensions`.');
            }
            args.contextKeyShortcuts = { ...args.contextKeyShortcuts, ...extensionShortcuts };
        });
        super(args);
    }
    async test(action) {
        return true;
    }
    async run(action) {
        throw new Error('ActorInitSparql#run is not supported in the browser.');
    }
}
exports.ActorInitQueryBase = ActorInitQueryBase;
//# sourceMappingURL=ActorInitQueryBase.js.map