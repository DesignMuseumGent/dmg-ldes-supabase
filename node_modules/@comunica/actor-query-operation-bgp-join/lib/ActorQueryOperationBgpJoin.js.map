{"version":3,"file":"ActorQueryOperationBgpJoin.js","sourceRoot":"","sources":["ActorQueryOperationBgpJoin.ts"],"names":[],"mappings":";;;AACA,uEAAiF;AAGjF,qDAA0C;AAG1C;;;GAGG;AACH,MAAa,0BAA2B,SAAQ,sDAA6C;IAG3F,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,SAAsB,EAAE,OAAuB;QACxE,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,SAAsB,EAAE,OAAuB;QAEvE,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC;YACzC,SAAS,EAAE,0BAA0B,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC5E,OAAO;SACR,CAAC,CAAC;IACL,CAAC;;AAjBH,gEAkBC;AAjBwB,kCAAO,GAAG,IAAI,yBAAO,EAAE,CAAC","sourcesContent":["import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Factory } from 'sparqlalgebrajs';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor\n * that handles SPARQL BGP operations by rewriting it as a join operator.\n */\nexport class ActorQueryOperationBgpJoin extends ActorQueryOperationTypedMediated<Algebra.Bgp> {\n  public static readonly FACTORY = new Factory();\n\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'bgp');\n  }\n\n  public async testOperation(operation: Algebra.Bgp, context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Bgp, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    return this.mediatorQueryOperation.mediate({\n      operation: ActorQueryOperationBgpJoin.FACTORY.createJoin(operation.patterns),\n      context,\n    });\n  }\n}\n"]}