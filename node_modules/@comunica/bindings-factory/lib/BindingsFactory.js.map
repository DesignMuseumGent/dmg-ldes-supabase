{"version":3,"file":"BindingsFactory.js","sourceRoot":"","sources":["BindingsFactory.ts"],"names":[],"mappings":";;;AACA,yCAAgC;AAChC,uDAA+C;AAC/C,yCAAsC;AAEtC;;GAEG;AACH,MAAa,eAAe;IAG1B,YAAmB,cAA+B,IAAI,8BAAW,EAAE;QACjE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,UAAsC,EAAE;QACtD,OAAO,IAAI,mBAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAA,eAAG,EAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE,GAAG,EAAE,KAAK,CAAE,EAAE,EAAE,CAAC,CAAE,GAAG,CAAC,KAAK,EAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC;IACpG,CAAC;IAEM,YAAY,CAAC,QAAkB;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAC;IACxC,CAAC;IAEM,UAAU,CAAC,MAAgC;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,GAAG,EAAE,KAAK,CAAE,EAAE,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,QAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAE,CAAC,CAAC,CAAC;IACnH,CAAC;CACF;AAlBD,0CAkBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { Map } from 'immutable';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Bindings } from './Bindings';\n\n/**\n * A Bindings factory that provides Bindings backed by immutable.js.\n */\nexport class BindingsFactory implements RDF.BindingsFactory {\n  private readonly dataFactory: RDF.DataFactory;\n\n  public constructor(dataFactory: RDF.DataFactory = new DataFactory()) {\n    this.dataFactory = dataFactory;\n  }\n\n  public bindings(entries: [RDF.Variable, RDF.Term][] = []): Bindings {\n    return new Bindings(this.dataFactory, Map(entries.map(([ key, value ]) => [ key.value, value ])));\n  }\n\n  public fromBindings(bindings: Bindings): Bindings {\n    return this.bindings([ ...bindings ]);\n  }\n\n  public fromRecord(record: Record<string, RDF.Term>): Bindings {\n    return this.bindings(Object.entries(record).map(([ key, value ]) => [ this.dataFactory.variable!(key), value ]));\n  }\n}\n"]}