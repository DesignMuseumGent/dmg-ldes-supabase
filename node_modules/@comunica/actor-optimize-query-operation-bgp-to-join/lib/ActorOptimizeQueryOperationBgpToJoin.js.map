{"version":3,"file":"ActorOptimizeQueryOperationBgpToJoin.js","sourceRoot":"","sources":["ActorOptimizeQueryOperationBgpToJoin.ts"],"names":[],"mappings":";;;AAIA,yFAAqF;AAGrF,qDAAuC;AAEvC;;GAEG;AACH,MAAa,oCAAqC,SAAQ,0DAA2B;IAC5E,KAAK,CAAC,IAAI,CAAC,MAAqC;QACrD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAqC;QACpD,MAAM,SAAS,GAAG,sBAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE;YACpD,GAAG,CAAC,EAAe,EAAE,OAAgB;gBACnC,OAAO;oBACL,OAAO,EAAE,KAAK;oBACd,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC;iBACxC,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;QACH,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;IAChD,CAAC;CACF;AAhBD,oFAgBC","sourcesContent":["import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { Algebra, Factory } from 'sparqlalgebrajs';\nimport { Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica BGP to Join Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationBgpToJoin extends ActorOptimizeQueryOperation {\n  public async test(action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      bgp(op: Algebra.Bgp, factory: Factory) {\n        return {\n          recurse: false,\n          result: factory.createJoin(op.patterns),\n        };\n      },\n    });\n    return { operation, context: action.context };\n  }\n}\n"]}