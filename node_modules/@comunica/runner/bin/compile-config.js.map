{"version":3,"file":"compile-config.js","sourceRoot":"","sources":["compile-config.ts"],"names":[],"mappings":";;AAAA,+CAA6C;AAE7C,6FAA6F;AAC7F,uCAAuC;AACvC,gGAAgG;AAEhG,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;IACjG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,MAAM,cAAc,GAAW,OAAO,CAAC,GAAG,EAAE,CAAC;AAC7C,MAAM,iBAAiB,GAAG,6BAA6B,CAAC;AACxD,MAAM,UAAU,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,kBAAkB,GAAG,wCAAwC,CAAC;AAClE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;IACnB,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;CAC9B;AAED,IAAA,4BAAa,EAAC,cAAc,EAAE,UAAU,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC;KAC1F,IAAI,CAAC,GAAG,CAAC,EAAE;IACV,qGAAqG;IACrG,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,4CAA4C,EAAE,EAAE,CAAC,CAAC;IACpE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;IACf,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;IACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC","sourcesContent":["import { compileConfig } from 'componentsjs';\n\n// Compiles a configuration to a module (single file) that exports the instantiated instance,\n// where all dependencies are injected.\n// This is a simplified version of components-compile-config that is shipped with Components.js.\n\nconst args = process.argv.slice(2);\n\nif (args.length === 0) {\n  process.stderr.write('Usage: comunica-compile-config path/to/config.json [urn:of:init:actor]\\n');\n  process.exit(1);\n}\n\nconst mainModulePath: string = process.cwd();\nconst configResourceUri = 'urn:comunica:default:Runner';\nconst configPath: string = args[0];\nlet exportVariableName = 'urn:comunica:default:init/actors#query';\nif (args.length > 1) {\n  exportVariableName = args[1];\n}\n\ncompileConfig(mainModulePath, configPath, configResourceUri, exportVariableName, false, true)\n  .then(out => {\n    // This instantiation is unneeded (MUST be done for excluding Components.js in browser environnments)\n    out = out.replace('new (require(\\'@comunica/runner\\').Runner)', '');\n    process.stdout.write(`${out}\\n`);\n  }).catch(error => {\n    process.stderr.write(`${error.stack}\\n`);\n    process.exit(1);\n  });\n"]}