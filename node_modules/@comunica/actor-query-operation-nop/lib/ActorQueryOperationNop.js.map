{"version":3,"file":"ActorQueryOperationNop.js","sourceRoot":"","sources":["ActorQueryOperationNop.ts"],"names":[],"mappings":";;;AAAA,iEAA6D;AAE7D,uEAAiF;AAGjF,iDAAkD;AAGlD,MAAM,EAAE,GAAG,IAAI,kCAAe,EAAE,CAAC;AACjC;;;GAGG;AACH,MAAa,sBAAuB,SAAQ,sDAA6C;IACvF,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,SAAsB,EAAE,OAAuB;QACxE,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,SAAsB,EAAE,OAAuB;QACvE,OAAO;YACL,cAAc,EAAE,IAAI,iCAAiB,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;YACpD,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC9B,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;gBACxC,gBAAgB,EAAE,KAAK;gBACvB,SAAS,EAAE,EAAE;aACd,CAAC;YACF,IAAI,EAAE,UAAU;SACjB,CAAC;IACJ,CAAC;CACF;AApBD,wDAoBC","sourcesContent":["import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { SingletonIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst BF = new BindingsFactory();\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation)\n * actor that handles SPARQL nop operations.\n */\nexport class ActorQueryOperationNop extends ActorQueryOperationTypedMediated<Algebra.Nop> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'nop');\n  }\n\n  public async testOperation(operation: Algebra.Nop, context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Nop, context: IActionContext): Promise<IQueryOperationResult> {\n    return {\n      bindingsStream: new SingletonIterator(BF.bindings()),\n      metadata: () => Promise.resolve({\n        cardinality: { type: 'exact', value: 1 },\n        canContainUndefs: false,\n        variables: [],\n      }),\n      type: 'bindings',\n    };\n  }\n}\n"]}