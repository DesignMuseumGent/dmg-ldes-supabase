{"version":3,"file":"ActorQueryOperationPathInv.js","sourceRoot":"","sources":["ActorQueryOperationPathInv.ts"],"names":[],"mappings":";;;AAAA,uEAAkE;AAGlE,qDAA0C;AAE1C;;GAEG;AACH,MAAa,0BAA2B,SAAQ,uCAAiB;IAC/D,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,EAAE,yBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,SAAuB,EAAE,OAAuB;QACxE,MAAM,SAAS,GAAiB,SAAS,CAAC,SAAS,CAAC;QACpD,MAAM,OAAO,GAAG,uCAAiB,CAAC,OAAO;aACtC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QACpF,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9E,CAAC;CACF;AAXD,gEAWC","sourcesContent":["import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Inv Query Operation Actor.\n */\nexport class ActorQueryOperationPathInv extends ActorAbstractPath {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, Algebra.types.INV);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Inv> operation.predicate;\n    const invPath = ActorAbstractPath.FACTORY\n      .createPath(operation.object, predicate.path, operation.subject, operation.graph);\n    return this.mediatorQueryOperation.mediate({ operation: invPath, context });\n  }\n}\n"]}