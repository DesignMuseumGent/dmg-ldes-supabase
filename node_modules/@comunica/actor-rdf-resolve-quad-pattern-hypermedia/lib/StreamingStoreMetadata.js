"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamingStoreMetadata = void 0;
const bus_query_operation_1 = require("@comunica/bus-query-operation");
const rdf_streaming_store_1 = require("rdf-streaming-store");
/**
 * A StreamingStore that returns an AsyncIterator with a valid MetadataQuads property.
 */
class StreamingStoreMetadata extends rdf_streaming_store_1.StreamingStore {
    constructor() {
        super(...arguments);
        this.runningIterators = new Set();
    }
    match(subject, predicate, object, graph) {
        // Wrap the raw stream in an AsyncIterator
        const iterator = new bus_query_operation_1.ClosableTransformIterator(super.match(subject, predicate, object, graph), {
            autoStart: false,
            onClose: () => {
                // Running iterators are deleted once closed or destroyed
                this.runningIterators.delete(iterator);
            },
        });
        // Expose the metadata property containing the cardinality
        const metadata = {
            cardinality: {
                type: 'exact',
                value: this.getStore().countQuads(subject, predicate, object, graph),
            },
            canContainUndefs: false,
        };
        iterator.setProperty('metadata', metadata);
        // Store all running iterators until they close or are destroyed
        this.runningIterators.add(iterator);
        return iterator;
    }
}
exports.StreamingStoreMetadata = StreamingStoreMetadata;
//# sourceMappingURL=StreamingStoreMetadata.js.map