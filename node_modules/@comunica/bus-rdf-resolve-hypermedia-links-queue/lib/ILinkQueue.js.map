{"version":3,"file":"ILinkQueue.js","sourceRoot":"","sources":["ILinkQueue.ts"],"names":[],"mappings":"","sourcesContent":["import type { ILink } from '@comunica/bus-rdf-resolve-hypermedia-links';\n\n/**\n * A datastructure that accepts links, and emits them in an implementation-defined order.\n */\nexport interface ILinkQueue {\n  /**\n   * Add the given link to the queue.\n   * @param link A link.\n   * @param parent The parent in which the given link was discovered.\n   * @returns If the link was added to the queue.\n   */\n  push: (link: ILink, parent: ILink) => boolean;\n  /**\n   * The number of links in the queue.\n   */\n  getSize: () => number;\n  /**\n   * If no links are in the queue.\n   */\n  isEmpty: () => boolean;\n  /**\n   * Get and remove the next link from the queue.\n   */\n  pop: () => ILink | undefined;\n  /**\n   * Get (but not remove) the next link from the queue.\n   */\n  peek: () => ILink | undefined;\n}\n\n// Re-export ILink interface for convenience\nexport { ILink };\n"]}