{"version":3,"file":"LinkQueueWrapper.js","sourceRoot":"","sources":["LinkQueueWrapper.ts"],"names":[],"mappings":";;;AAGA;;GAEG;AACH,MAAa,gBAAgB;IAG3B,YAAmB,SAAqB;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEM,IAAI,CAAC,IAAW,EAAE,MAAa;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAEM,GAAG;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;IAEM,IAAI;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;CACF;AA1BD,4CA0BC","sourcesContent":["import type { ILink } from '@comunica/bus-rdf-resolve-hypermedia-links';\nimport type { ILinkQueue } from './ILinkQueue';\n\n/**\n * A link queue that wraps a given link queue.\n */\nexport class LinkQueueWrapper implements ILinkQueue {\n  private readonly linkQueue: ILinkQueue;\n\n  public constructor(linkQueue: ILinkQueue) {\n    this.linkQueue = linkQueue;\n  }\n\n  public push(link: ILink, parent: ILink): boolean {\n    return this.linkQueue.push(link, parent);\n  }\n\n  public getSize(): number {\n    return this.linkQueue.getSize();\n  }\n\n  public isEmpty(): boolean {\n    return this.linkQueue.isEmpty();\n  }\n\n  public pop(): ILink | undefined {\n    return this.linkQueue.pop();\n  }\n\n  public peek(): ILink | undefined {\n    return this.linkQueue.peek();\n  }\n}\n"]}