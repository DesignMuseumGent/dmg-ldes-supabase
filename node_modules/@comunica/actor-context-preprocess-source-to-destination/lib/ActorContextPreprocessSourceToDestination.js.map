{"version":3,"file":"ActorContextPreprocessSourceToDestination.js","sourceRoot":"","sources":["ActorContextPreprocessSourceToDestination.ts"],"names":[],"mappings":";;;AACA,6EAA0E;AAC1E,+DAA0F;AAI1F;;GAEG;AACH,MAAa,yCAA0C,SAAQ,+CAAsB;IACnF,YAAmB,IAAiC;QAClD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,MAAe;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAe;QAC9B,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,2CAAyB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,oCAAkB,CAAC,WAAW,CAAC,EAAE;YAChH,MAAM,OAAO,GAAgB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,2CAAyB,CAAC,OAAO,CAAE,CAAC;YACpF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,oCAAkB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACpF;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAlBD,8FAkBC","sourcesContent":["import type { IActorContextPreprocessOutput, IActorContextPreprocessArgs } from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport { KeysRdfResolveQuadPattern, KeysRdfUpdateQuads } from '@comunica/context-entries';\nimport type { IActorTest, IAction } from '@comunica/core';\nimport type { DataSources } from '@comunica/types';\n\n/**\n * A comunica Source To Destination Context Preprocess Actor.\n */\nexport class ActorContextPreprocessSourceToDestination extends ActorContextPreprocess {\n  public constructor(args: IActorContextPreprocessArgs) {\n    super(args);\n  }\n\n  public async test(action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IAction): Promise<IActorContextPreprocessOutput> {\n    if (action.context.get(KeysRdfResolveQuadPattern.sources) && !action.context.get(KeysRdfUpdateQuads.destination)) {\n      const sources: DataSources = action.context.get(KeysRdfResolveQuadPattern.sources)!;\n      if (sources.length === 1) {\n        return { context: action.context.set(KeysRdfUpdateQuads.destination, sources[0]) };\n      }\n    }\n    return action;\n  }\n}\n"]}